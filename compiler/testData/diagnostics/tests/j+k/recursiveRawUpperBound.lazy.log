DescriptorResolver@0 {
    <name not found> = DelegatingFlexibleType@1
}

LazyJavaClassDescriptor@2['Bad'] {
    typeConstructor = LazyJavaClassTypeConstructor@3['Bad']
}

LazyJavaClassDescriptor@4['X'] {
    defaultType = JetTypeImpl@5['X']
    enumEntryIndex = LinkedHashMap@6 // through LazyJavaClassMemberScope@7
    functions('foo': Name@8) = ArrayList@9[1] { JavaMethodDescriptor@10['foo'] } // through LazyJavaClassMemberScope@7
    memberIndex = computeMemberIndex$1@11 // through LazyJavaClassMemberScope@7
    nestedClassIndex = LinkedHashMap@12 // through LazyJavaClassMemberScope@7
    nestedClasses('foo': Name@8) = null // through LazyJavaClassMemberScope@7
    properties('foo': Name@8) = EmptyList@13[empty] // through LazyJavaClassMemberScope@7
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@14['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@15['X']
}

LazyJavaClassTypeConstructor@3['Bad'] {
    parameters = ArrayList@16[1] { LazyJavaTypeParameterDescriptor@17['T'] }
}

LazyJavaClassTypeConstructor@15['X'] {
    parameters = ArrayList@18[empty]
    supertypes = ArrayList@19[1] { JetTypeImpl@20['Any'] }
}

LazyJavaClassifierType@21['Bad'] {
    arguments = ArrayList@22[1] { LazyStarProjection@23 }
    classifier = JavaClassImpl@24['Bad']
    nullable = 'false': Boolean@25
    typeConstructor = LazyJavaClassTypeConstructor@3['Bad']
}

LazyJavaClassifierType@26['Bad'] {
    arguments = ArrayList@27[1] { LazyStarProjection@28 }
    classifier = JavaClassImpl@24['Bad']
    nullable = 'true': Boolean@29
    typeConstructor = LazyJavaClassTypeConstructor@3['Bad']
}

LazyJavaClassifierType@30['Bad'] {
    arguments = ArrayList@31[1] { TypeProjectionImpl@32 }
    classifier = JavaClassImpl@33['Bad']
    nullable = 'false': Boolean@25
    typeConstructor = LazyJavaClassTypeConstructor@3['Bad']
}

LazyJavaClassifierType@34['Bad'] {
    arguments = ArrayList@35[1] { TypeProjectionImpl@36 }
    classifier = JavaClassImpl@33['Bad']
    nullable = 'true': Boolean@29
    typeConstructor = LazyJavaClassTypeConstructor@3['Bad']
}

LazyJavaClassifierType@37['Object'] {
    classifier = JavaClassImpl@38['Object']
    typeConstructor = DeserializedClassTypeConstructor@39
}

LazyJavaPackageFragmentProvider@40 {
    packageFragments('<root>': FqName@41) = LazyJavaPackageFragment@42['<root>']
    packageFragments('X': FqName@43) = null
    packageFragments('java': FqName@44) = LazyJavaPackageFragment@45['java']
    packageFragments('java.lang': FqName@46) = LazyJavaPackageFragment@47['lang']
    packageFragments('java.lang.X': FqName@48) = null
    packageFragments('kotlin': FqName@49) = null
    packageFragments('kotlin.X': FqName@50) = null
    packageFragments('kotlin.io': FqName@51) = null
    packageFragments('kotlin.jvm': FqName@52) = null
    topLevelClasses(JavaClassImpl@24['Bad']) = LazyJavaClassDescriptor@2['Bad']
    topLevelClasses(JavaClassImpl@53['X']) = LazyJavaClassDescriptor@4['X']
}

LazyJavaPackageFragment@42['<root>'] {
    classes('X': Name@54) = LazyJavaClassDescriptor@4['X'] // through LazyPackageFragmentScopeForJavaPackage@55
    classes('foo': Name@8) = null // through LazyPackageFragmentScopeForJavaPackage@55
    deserializedPackageScope = Empty@56 // through LazyPackageFragmentScopeForJavaPackage@55
    functions('foo': Name@8) = EmptyList@13[empty] // through LazyPackageFragmentScopeForJavaPackage@55
    memberIndex = computeMemberIndex$1@57 // through LazyPackageFragmentScopeForJavaPackage@55
}

LazyJavaPackageFragment@45['java'] {
    classes('lang': Name@58) = null // through LazyPackageFragmentScopeForJavaPackage@59
    deserializedPackageScope = Empty@56 // through LazyPackageFragmentScopeForJavaPackage@59
    functions('lang': Name@60) = EmptyList@13[empty] // through LazyPackageFragmentScopeForJavaPackage@59
    memberIndex = computeMemberIndex$1@61 // through LazyPackageFragmentScopeForJavaPackage@59
}

LazyJavaPackageFragment@47['lang'] {
    classes('foo': Name@8) = null // through LazyPackageFragmentScopeForJavaPackage@62
    deserializedPackageScope = Empty@56 // through LazyPackageFragmentScopeForJavaPackage@62
    functions('foo': Name@8) = EmptyList@13[empty] // through LazyPackageFragmentScopeForJavaPackage@62
    memberIndex = computeMemberIndex$1@63 // through LazyPackageFragmentScopeForJavaPackage@62
}

LazyJavaTypeParameterDescriptor@17['T'] {
    upperBounds = LinkedHashSet@64[1] { DelegatingFlexibleType@65 }
    upperBoundsAsType = DelegatingFlexibleType@65
}

LazyJavaTypeParameterResolver@66 {
    resolve(JavaTypeParameterImpl@67['T']) = LazyJavaTypeParameterDescriptor@17['T']
}
