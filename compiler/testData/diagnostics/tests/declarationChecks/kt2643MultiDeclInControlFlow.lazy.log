DescriptorResolver@0 {
    <name not found> = JetTypeImpl@1['Int']
    <name not found> = JetTypeImpl@1['Int']
}

LazyJavaPackageFragmentProvider@2 {
    _packageFragments('<root>': FqName@3) = LazyJavaPackageFragment@4['<root>']
    _packageFragments('C': FqName@5) = null
    _packageFragments('java': FqName@6) = LazyJavaPackageFragment@7['java']
    _packageFragments('java.lang': FqName@8) = LazyJavaPackageFragment@9['lang']
    _packageFragments('java.lang.C': FqName@10) = null
    _packageFragments('kotlin': FqName@11) = null
    _packageFragments('kotlin.C': FqName@12) = null
    _packageFragments('kotlin.io': FqName@13) = null
    _packageFragments('kotlin.jvm': FqName@14) = null
    _packageFragments('n': FqName@15) = null
    _packageFragments('n.C': FqName@16) = null
}

LazyJavaPackageFragment@7['java'] {
    _functions('lang': Name@17) = EmptyList@18[empty] // through LazyPackageFragmentScopeForJavaPackage@19
    classes('lang': Name@20) = null // through LazyPackageFragmentScopeForJavaPackage@19
    deserializedPackageScope = Empty@21 // through LazyPackageFragmentScopeForJavaPackage@19
    memberIndex = computeMemberIndex$1@22 // through LazyPackageFragmentScopeForJavaPackage@19
}

LazyJavaPackageFragment@9['lang'] {
    _functions('component1': Name@23) = EmptyList@18[empty] // through LazyPackageFragmentScopeForJavaPackage@24
    _functions('component2': Name@25) = EmptyList@18[empty] // through LazyPackageFragmentScopeForJavaPackage@24
    _functions('plus': Name@26) = EmptyList@18[empty] // through LazyPackageFragmentScopeForJavaPackage@24
    classes('component1': Name@23) = null // through LazyPackageFragmentScopeForJavaPackage@24
    classes('component2': Name@25) = null // through LazyPackageFragmentScopeForJavaPackage@24
    classes('plus': Name@26) = null // through LazyPackageFragmentScopeForJavaPackage@24
    deserializedPackageScope = Empty@21 // through LazyPackageFragmentScopeForJavaPackage@24
    memberIndex = computeMemberIndex$1@27 // through LazyPackageFragmentScopeForJavaPackage@24
}
