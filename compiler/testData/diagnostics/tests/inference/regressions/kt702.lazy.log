LazyJavaClassDescriptor@0['AnnotatedElement'] {
    functions('cast': Name@1) = EmptyList@2[empty] // through LazyJavaClassMemberScope@3
    functions('isInstance': Name@4) = EmptyList@2[empty] // through LazyJavaClassMemberScope@3
    memberIndex = computeMemberIndex$1@5 // through LazyJavaClassMemberScope@3
    properties('cast': Name@6) = EmptyList@2[empty] // through LazyJavaClassMemberScope@3
    properties('isInstance': Name@7) = EmptyList@2[empty] // through LazyJavaClassMemberScope@3
    typeConstructor = LazyJavaClassTypeConstructor@8['AnnotatedElement']
}

LazyJavaClassDescriptor@9['Class'] {
    defaultType = JetTypeImpl@10['Class<1>']
    enumEntryIndex = LinkedHashMap@11 // through LazyJavaClassMemberScope@12
    functions('cast': Name@6) = ArrayList@13[1] { JavaMethodDescriptor@14['cast'] } // through LazyJavaClassMemberScope@12
    functions('isInstance': Name@7) = ArrayList@15[1] { JavaMethodDescriptor@16['isInstance'] } // through LazyJavaClassMemberScope@12
    memberIndex = computeMemberIndex$1@17 // through LazyJavaClassMemberScope@12
    nestedClassIndex = LinkedHashMap@18 // through LazyJavaClassMemberScope@12
    nestedClasses('cast': Name@6) = null // through LazyJavaClassMemberScope@12
    nestedClasses('isInstance': Name@7) = null // through LazyJavaClassMemberScope@12
    properties('cast': Name@6) = EmptyList@2[empty] // through LazyJavaClassMemberScope@12
    properties('isInstance': Name@7) = EmptyList@2[empty] // through LazyJavaClassMemberScope@12
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@19['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@20['Class']
}

LazyJavaClassDescriptor@21['Error'] {
    typeConstructor = LazyJavaClassTypeConstructor@22['Error']
}

LazyJavaClassDescriptor@23['Exception'] {
    typeConstructor = LazyJavaClassTypeConstructor@24['Exception']
}

LazyJavaClassDescriptor@25['GenericDeclaration'] {
    functions('cast': Name@1) = EmptyList@2[empty] // through LazyJavaClassMemberScope@26
    functions('isInstance': Name@4) = EmptyList@2[empty] // through LazyJavaClassMemberScope@26
    memberIndex = computeMemberIndex$1@27 // through LazyJavaClassMemberScope@26
    properties('cast': Name@6) = EmptyList@2[empty] // through LazyJavaClassMemberScope@26
    properties('isInstance': Name@7) = EmptyList@2[empty] // through LazyJavaClassMemberScope@26
    typeConstructor = LazyJavaClassTypeConstructor@28['GenericDeclaration']
}

LazyJavaClassDescriptor@29['RuntimeException'] {
    typeConstructor = LazyJavaClassTypeConstructor@30['RuntimeException']
}

LazyJavaClassDescriptor@31['Serializable'] {
    functions('cast': Name@1) = EmptyList@2[empty] // through LazyJavaClassMemberScope@32
    functions('isInstance': Name@4) = EmptyList@2[empty] // through LazyJavaClassMemberScope@32
    memberIndex = computeMemberIndex$1@33 // through LazyJavaClassMemberScope@32
    properties('cast': Name@6) = EmptyList@2[empty] // through LazyJavaClassMemberScope@32
    properties('isInstance': Name@7) = EmptyList@2[empty] // through LazyJavaClassMemberScope@32
    typeConstructor = LazyJavaClassTypeConstructor@34['Serializable']
}

LazyJavaClassDescriptor@35['Type'] {
    functions('cast': Name@1) = EmptyList@2[empty] // through LazyJavaClassMemberScope@36
    functions('isInstance': Name@4) = EmptyList@2[empty] // through LazyJavaClassMemberScope@36
    memberIndex = computeMemberIndex$1@37 // through LazyJavaClassMemberScope@36
    properties('cast': Name@6) = EmptyList@2[empty] // through LazyJavaClassMemberScope@36
    properties('isInstance': Name@7) = EmptyList@2[empty] // through LazyJavaClassMemberScope@36
    typeConstructor = LazyJavaClassTypeConstructor@38['Type']
}

LazyJavaClassTypeConstructor@8['AnnotatedElement'] {
    parameters = ArrayList@39[empty]
    supertypes = ArrayList@40[1] { JetTypeImpl@41['Any'] }
}

LazyJavaClassTypeConstructor@20['Class'] {
    parameters = ArrayList@42[1] { LazyJavaTypeParameterDescriptor@43['T'] }
    supertypes = ArrayList@44[4] { LazyJavaClassifierType@45['Serializable'], LazyJavaClassifierType@46['GenericDeclaration'], LazyJavaClassifierType@47['Type'], ... }
}

LazyJavaClassTypeConstructor@22['Error'] {
    parameters = ArrayList@48[empty]
    supertypes = ArrayList@49[1] { LazyJavaClassifierType@50['Throwable'] }
}

LazyJavaClassTypeConstructor@24['Exception'] {
    parameters = ArrayList@51[empty]
    supertypes = ArrayList@52[1] { LazyJavaClassifierType@53['Throwable'] }
}

LazyJavaClassTypeConstructor@28['GenericDeclaration'] {
    parameters = ArrayList@54[empty]
    supertypes = ArrayList@55[1] { JetTypeImpl@41['Any'] }
}

LazyJavaClassTypeConstructor@30['RuntimeException'] {
    parameters = ArrayList@56[empty]
    supertypes = ArrayList@57[1] { LazyJavaClassifierType@58['Exception'] }
}

LazyJavaClassTypeConstructor@34['Serializable'] {
    parameters = ArrayList@59[empty]
    supertypes = ArrayList@60[1] { JetTypeImpl@41['Any'] }
}

LazyJavaClassTypeConstructor@38['Type'] {
    parameters = ArrayList@61[empty]
    supertypes = ArrayList@62[1] { JetTypeImpl@41['Any'] }
}

LazyJavaClassifierType@63['AnnotatedElement'] {
    arguments = ArrayList@64[empty]
    classifier = JavaClassImpl@65['AnnotatedElement']
    memberScope = LazyJavaClassMemberScope@3
    typeConstructor = LazyJavaClassTypeConstructor@8['AnnotatedElement']
}

LazyJavaClassifierType@58['Exception'] {
    arguments = ArrayList@66[empty]
    classifier = JavaClassImpl@67['Exception']
    typeConstructor = LazyJavaClassTypeConstructor@24['Exception']
}

LazyJavaClassifierType@46['GenericDeclaration'] {
    arguments = ArrayList@68[empty]
    classifier = JavaClassImpl@69['GenericDeclaration']
    memberScope = LazyJavaClassMemberScope@26
    typeConstructor = LazyJavaClassTypeConstructor@28['GenericDeclaration']
}

LazyJavaClassifierType@70['Object'] {
    arguments = ArrayList@71[empty]
    classifier = JavaClassImpl@72['Object']
    memberScope = DeserializedClassMemberScope@73
    nullable = 'false': Boolean@74
    typeConstructor = DeserializedClassTypeConstructor@75
}

LazyJavaClassifierType@76['Object'] {
    arguments = ArrayList@77[empty]
    classifier = JavaClassImpl@78['Object']
    memberScope = DeserializedClassMemberScope@73
    nullable = 'false': Boolean@74
    typeConstructor = DeserializedClassTypeConstructor@75
}

LazyJavaClassifierType@79['Object'] {
    arguments = ArrayList@80[empty]
    classifier = JavaClassImpl@72['Object']
    memberScope = DeserializedClassMemberScope@73
    nullable = 'true': Boolean@81
    typeConstructor = DeserializedClassTypeConstructor@75
}

LazyJavaClassifierType@82['Object'] {
    arguments = ArrayList@83[empty]
    classifier = JavaClassImpl@78['Object']
    memberScope = DeserializedClassMemberScope@73
    nullable = 'true': Boolean@81
    typeConstructor = DeserializedClassTypeConstructor@75
}

LazyJavaClassifierType@84['Object'] {
    classifier = JavaClassImpl@85['Object']
    typeConstructor = DeserializedClassTypeConstructor@75
}

LazyJavaClassifierType@86['Object'] {
    classifier = JavaClassImpl@87['Object']
    typeConstructor = DeserializedClassTypeConstructor@75
}

LazyJavaClassifierType@88['Object'] {
    classifier = JavaClassImpl@89['Object']
    typeConstructor = DeserializedClassTypeConstructor@75
}

LazyJavaClassifierType@90['Object'] {
    classifier = JavaClassImpl@91['Object']
    typeConstructor = DeserializedClassTypeConstructor@75
}

LazyJavaClassifierType@92['Object'] {
    classifier = JavaClassImpl@93['Object']
    typeConstructor = DeserializedClassTypeConstructor@75
}

LazyJavaClassifierType@45['Serializable'] {
    arguments = ArrayList@94[empty]
    classifier = JavaClassImpl@95['Serializable']
    memberScope = LazyJavaClassMemberScope@32
    typeConstructor = LazyJavaClassTypeConstructor@34['Serializable']
}

LazyJavaClassifierType@96['T'] {
    arguments = ArrayList@97[empty]
    classifier = JavaTypeParameterImpl@98['T']
    nullable = 'false': Boolean@74
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@99
}

LazyJavaClassifierType@100['T'] {
    arguments = ArrayList@101[empty]
    classifier = JavaTypeParameterImpl@98['T']
    nullable = 'true': Boolean@81
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@99
}

LazyJavaClassifierType@50['Throwable'] {
    arguments = ArrayList@102[empty]
    classifier = JavaClassImpl@103['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@104
}

LazyJavaClassifierType@53['Throwable'] {
    arguments = ArrayList@105[empty]
    classifier = JavaClassImpl@106['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@104
}

LazyJavaClassifierType@47['Type'] {
    arguments = ArrayList@107[empty]
    classifier = JavaClassImpl@108['Type']
    memberScope = LazyJavaClassMemberScope@36
    typeConstructor = LazyJavaClassTypeConstructor@38['Type']
}

LazyJavaPackageFragmentProvider@109 {
    packageFragments('<root>': FqName@110) = LazyJavaPackageFragment@111['<root>']
    packageFragments('Class': FqName@112) = null
    packageFragments('Error': FqName@113) = null
    packageFragments('RuntimeException': FqName@114) = null
    packageFragments('T': FqName@115) = null
    packageFragments('Throwable': FqName@116) = null
    packageFragments('Unit': FqName@117) = null
    packageFragments('X': FqName@118) = null
    packageFragments('a': FqName@119) = null
    packageFragments('a.Class': FqName@120) = null
    packageFragments('a.Error': FqName@121) = null
    packageFragments('a.RuntimeException': FqName@122) = null
    packageFragments('a.T': FqName@123) = null
    packageFragments('a.Throwable': FqName@124) = null
    packageFragments('a.Throwables': FqName@125) = null
    packageFragments('a.Unit': FqName@126) = null
    packageFragments('a.X': FqName@127) = null
    packageFragments('a.java': FqName@128) = null
    packageFragments('java': FqName@129) = LazyJavaPackageFragment@130['java']
    packageFragments('java.io': FqName@131) = LazyJavaPackageFragment@132['io']
    packageFragments('java.lang': FqName@133) = LazyJavaPackageFragment@134['lang']
    packageFragments('java.lang.Class': FqName@135) = null
    packageFragments('java.lang.Error': FqName@136) = null
    packageFragments('java.lang.RuntimeException': FqName@137) = null
    packageFragments('java.lang.T': FqName@138) = null
    packageFragments('java.lang.Throwable': FqName@139) = null
    packageFragments('java.lang.Unit': FqName@140) = null
    packageFragments('java.lang.X': FqName@141) = null
    packageFragments('java.lang.reflect': FqName@142) = LazyJavaPackageFragment@143['reflect']
    packageFragments('kotlin': FqName@144) = null
    packageFragments('kotlin.Class': FqName@145) = null
    packageFragments('kotlin.Error': FqName@146) = null
    packageFragments('kotlin.RuntimeException': FqName@147) = null
    packageFragments('kotlin.T': FqName@148) = null
    packageFragments('kotlin.Throwable': FqName@149) = null
    packageFragments('kotlin.Unit': FqName@150) = null
    packageFragments('kotlin.X': FqName@151) = null
    packageFragments('kotlin.io': FqName@152) = null
    packageFragments('kotlin.jvm': FqName@153) = null
    topLevelClasses(JavaClassImpl@65['AnnotatedElement']) = LazyJavaClassDescriptor@0['AnnotatedElement']
    topLevelClasses(JavaClassImpl@154['Class']) = LazyJavaClassDescriptor@9['Class']
    topLevelClasses(JavaClassImpl@155['Error']) = LazyJavaClassDescriptor@21['Error']
    topLevelClasses(JavaClassImpl@67['Exception']) = LazyJavaClassDescriptor@23['Exception']
    topLevelClasses(JavaClassImpl@69['GenericDeclaration']) = LazyJavaClassDescriptor@25['GenericDeclaration']
    topLevelClasses(JavaClassImpl@156['RuntimeException']) = LazyJavaClassDescriptor@29['RuntimeException']
    topLevelClasses(JavaClassImpl@95['Serializable']) = LazyJavaClassDescriptor@31['Serializable']
    topLevelClasses(JavaClassImpl@108['Type']) = LazyJavaClassDescriptor@35['Type']
}

LazyJavaPackageFragment@130['java'] {
    classes('lang': Name@157) = null // through LazyPackageFragmentScopeForJavaPackage@158
    deserializedPackageScope = Empty@159 // through LazyPackageFragmentScopeForJavaPackage@158
    functions('lang': Name@160) = EmptyList@2[empty] // through LazyPackageFragmentScopeForJavaPackage@158
    memberIndex = computeMemberIndex$1@161 // through LazyPackageFragmentScopeForJavaPackage@158
}

LazyJavaPackageFragment@134['lang'] {
    classes('Class': Name@162) = LazyJavaClassDescriptor@9['Class'] // through LazyPackageFragmentScopeForJavaPackage@163
    classes('Error': Name@164) = LazyJavaClassDescriptor@21['Error'] // through LazyPackageFragmentScopeForJavaPackage@163
    classes('RuntimeException': Name@165) = LazyJavaClassDescriptor@29['RuntimeException'] // through LazyPackageFragmentScopeForJavaPackage@163
    classes('cast': Name@6) = null // through LazyPackageFragmentScopeForJavaPackage@163
    classes('equals': Name@166) = null // through LazyPackageFragmentScopeForJavaPackage@163
    classes('getJavaClass': Name@167) = null // through LazyPackageFragmentScopeForJavaPackage@163
    classes('isInstance': Name@7) = null // through LazyPackageFragmentScopeForJavaPackage@163
    classes('java': Name@168) = null // through LazyPackageFragmentScopeForJavaPackage@163
    classes('propagateIfInstanceOf': Name@169) = null // through LazyPackageFragmentScopeForJavaPackage@163
    deserializedPackageScope = Empty@159 // through LazyPackageFragmentScopeForJavaPackage@163
    functions('cast': Name@6) = EmptyList@2[empty] // through LazyPackageFragmentScopeForJavaPackage@163
    functions('equals': Name@166) = EmptyList@2[empty] // through LazyPackageFragmentScopeForJavaPackage@163
    functions('getJavaClass': Name@167) = EmptyList@2[empty] // through LazyPackageFragmentScopeForJavaPackage@163
    functions('isInstance': Name@7) = EmptyList@2[empty] // through LazyPackageFragmentScopeForJavaPackage@163
    functions('propagateIfInstanceOf': Name@169) = EmptyList@2[empty] // through LazyPackageFragmentScopeForJavaPackage@163
    memberIndex = computeMemberIndex$1@170 // through LazyPackageFragmentScopeForJavaPackage@163
}

LazyJavaTypeParameterDescriptor@43['T'] {
    defaultType = JetTypeImpl@171['T']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@99
    upperBounds = LinkedHashSet@172[1] { NullableType@173 }
}

LazyJavaTypeParameterResolver@174 {
    resolve(JavaTypeParameterImpl@175['T']) = LazyJavaTypeParameterDescriptor@43['T']
}

LazyJavaTypeParameterResolver@176 {
    resolve(JavaTypeParameterImpl@98['T']) = null
}
