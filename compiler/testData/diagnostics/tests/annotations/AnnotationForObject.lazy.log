LazyAnnotationDescriptor@0 {
    resolutionResults = OverloadResolutionResultsImpl@1
    type = ErrorTypeImpl@2
}

LazyJavaPackageFragmentProvider@3 {
    packageFragments('<root>': FqName@4) = LazyJavaPackageFragment@5['<root>']
    packageFragments('Test': FqName@6) = null
    packageFragments('java': FqName@7) = LazyJavaPackageFragment@8['java']
    packageFragments('java.lang': FqName@9) = LazyJavaPackageFragment@10['lang']
    packageFragments('java.lang.someErrorAnnotation': FqName@11) = null
    packageFragments('kotlin': FqName@12) = null
    packageFragments('kotlin.io': FqName@13) = null
    packageFragments('kotlin.jvm': FqName@14) = null
    packageFragments('kotlin.someErrorAnnotation': FqName@15) = null
    packageFragments('someErrorAnnotation': FqName@16) = null
}

LazyJavaPackageFragment@5['<root>'] {
    classes('someErrorAnnotation': Name@17) = null // through LazyPackageFragmentScopeForJavaPackage@18
}

LazyJavaPackageFragment@8['java'] {
    classes('lang': Name@19) = null // through LazyPackageFragmentScopeForJavaPackage@20
    deserializedPackageScope = Empty@21 // through LazyPackageFragmentScopeForJavaPackage@20
    functions('lang': Name@22) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@20
    memberIndex = computeMemberIndex$1@24 // through LazyPackageFragmentScopeForJavaPackage@20
}

LazyJavaPackageFragment@10['lang'] {
    classes('someErrorAnnotation': Name@17) = null // through LazyPackageFragmentScopeForJavaPackage@25
}
