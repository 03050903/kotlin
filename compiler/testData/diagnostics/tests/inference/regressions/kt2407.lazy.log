LazyJavaClassDescriptor@96['AbstractCollection'] {
    _functions('map': Name@16) = EmptyList@15[empty] // through LazyJavaClassMemberScope@98
    _properties('map': Name@16) = EmptyList@15[empty] // through LazyJavaClassMemberScope@98
    _typeConstructor = LazyJavaClassTypeConstructor@65['AbstractCollection']
    memberIndex = computeMemberIndex$1@97 // through LazyJavaClassMemberScope@98
}

LazyJavaClassDescriptor@146['AbstractList'] {
    _functions('map': Name@16) = EmptyList@15[empty] // through LazyJavaClassMemberScope@195
    _properties('map': Name@16) = EmptyList@15[empty] // through LazyJavaClassMemberScope@195
    _typeConstructor = LazyJavaClassTypeConstructor@28['AbstractList']
    memberIndex = computeMemberIndex$1@194 // through LazyJavaClassMemberScope@195
}

LazyJavaClassDescriptor@5['ArrayList'] {
    _functions('map': Name@16) = EmptyList@15[empty] // through LazyJavaClassMemberScope@178
    _properties('map': Name@16) = EmptyList@15[empty] // through LazyJavaClassMemberScope@178
    _typeConstructor = LazyJavaClassTypeConstructor@176['ArrayList']
    enumEntryIndex = LinkedHashMap@180 // through LazyJavaClassMemberScope@178
    memberIndex = computeMemberIndex$1@177 // through LazyJavaClassMemberScope@178
    nestedClassIndex = LinkedHashMap@179 // through LazyJavaClassMemberScope@178
    nestedClasses('map': Name@16) = null // through LazyJavaClassMemberScope@178
}

LazyJavaClassDescriptor@152['Math'] {
    _functions('max': Name@211) = ArrayList@212[4] { JavaMethodDescriptor@213['max'], JavaMethodDescriptor@214['max'], JavaMethodDescriptor@215['max'], ... } // through LazyJavaStaticClassScope@207
    _functions('max': Name@211) = EmptyList@15[empty] // through LazyJavaClassMemberScope@209
    _properties('max': Name@211) = EmptyList@15[empty] // through LazyJavaClassMemberScope@209
    _properties('max': Name@211) = EmptyList@15[empty] // through LazyJavaStaticClassScope@207
    _typeConstructor = LazyJavaClassTypeConstructor@168['Math']
    enumEntryIndex = LinkedHashMap@210 // through LazyJavaClassMemberScope@209
    memberIndex = computeMemberIndex$1@216 // through LazyJavaClassMemberScope@209
    memberIndex = computeMemberIndex$1@206 // through LazyJavaStaticClassScope@207
    nestedClassIndex = LinkedHashMap@208 // through LazyJavaClassMemberScope@209
    nestedClasses('max': Name@211) = null // through LazyJavaClassMemberScope@209
}

LazyJavaClassDescriptor@38['RandomAccess'] {
    _functions('map': Name@16) = EmptyList@15[empty] // through LazyJavaClassMemberScope@41
    _properties('map': Name@16) = EmptyList@15[empty] // through LazyJavaClassMemberScope@41
    _typeConstructor = LazyJavaClassTypeConstructor@39['RandomAccess']
    memberIndex = computeMemberIndex$1@40 // through LazyJavaClassMemberScope@41
}

LazyJavaClassDescriptor@69['Serializable'] {
    _functions('map': Name@16) = EmptyList@15[empty] // through LazyJavaClassMemberScope@72
    _properties('map': Name@16) = EmptyList@15[empty] // through LazyJavaClassMemberScope@72
    _typeConstructor = LazyJavaClassTypeConstructor@70['Serializable']
    memberIndex = computeMemberIndex$1@71 // through LazyJavaClassMemberScope@72
}

LazyJavaClassTypeConstructor@65['AbstractCollection'] {
    _parameters = ArrayList@68[1] { LazyJavaTypeParameterDescriptor@60['E'] }
    _supertypes = ArrayList@66[1] { LazyJavaClassifierType@67['Collection<E>'] }
}

LazyJavaClassTypeConstructor@28['AbstractList'] {
    _parameters = ArrayList@201[1] { LazyJavaTypeParameterDescriptor@181['E'] }
    _supertypes = ArrayList@200[2] { LazyJavaClassifierType@86['AbstractCollection<E>'], LazyJavaClassifierType@53['List<E>'] }
}

LazyJavaClassTypeConstructor@176['ArrayList'] {
    _parameters = ArrayList@191[1] { LazyJavaTypeParameterDescriptor@184['E'] }
    _supertypes = ArrayList@192[5] { LazyJavaClassifierType@26['AbstractList<E>'], LazyJavaClassifierType@32['List<E>'], LazyJavaClassifierType@193['RandomAccess'], ... }
}

LazyJavaClassTypeConstructor@168['Math'] {
    _supertypes = ArrayList@169[1] { JetTypeImpl@47 }
}

LazyJavaClassTypeConstructor@39['RandomAccess'] {
    _parameters = ArrayList@48[empty]
    _supertypes = ArrayList@46[1] { JetTypeImpl@47 }
}

LazyJavaClassTypeConstructor@70['Serializable'] {
    _parameters = ArrayList@85[empty]
    _supertypes = ArrayList@84[1] { JetTypeImpl@47 }
}

LazyJavaClassifierType@86['AbstractCollection<E>'] {
    _arguments = ArrayList@88[1] { TypeProjectionImpl@89 }
    _memberScope = SubstitutingScope@90
    _typeConstructor = LazyJavaClassTypeConstructor@65['AbstractCollection']
    classifier = JavaClassImpl@87['AbstractCollection']
}

LazyJavaClassifierType@26['AbstractList<E>'] {
    _arguments = ArrayList@29[1] { TypeProjectionImpl@30 }
    _memberScope = SubstitutingScope@31
    _typeConstructor = LazyJavaClassTypeConstructor@28['AbstractList']
    classifier = JavaClassImpl@27['AbstractList']
}

LazyJavaClassifierType@91['Cloneable'] {
    _arguments = ArrayList@94[empty]
    _memberScope = DeserializedClassMemberScope@95
    _typeConstructor = DeserializedClassTypeConstructor@93
    classifier = JavaClassImpl@92['Cloneable']
}

LazyJavaClassifierType@67['Collection<E>'] {
    _arguments = ArrayList@219[1] { TypeProjectionImpl@220 }
    _memberScope = SubstitutingScope@221
    _typeConstructor = DeserializedClassTypeConstructor@218
    classifier = JavaClassImpl@217['Collection']
}

LazyJavaClassifierType@21['E'] {
    _arguments = ArrayList@25[empty]
    _nullable = Boolean@22
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@24
    classifier = JavaTypeParameterImpl@23['E']
}

LazyJavaClassifierType@42['E'] {
    _arguments = ArrayList@45[empty]
    _nullable = Boolean@22
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@44
    classifier = JavaTypeParameterImpl@43['E']
}

LazyJavaClassifierType@49['E'] {
    _arguments = ArrayList@52[empty]
    _nullable = Boolean@50
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@44
    classifier = JavaTypeParameterImpl@51['E']
}

LazyJavaClassifierType@63['E'] {
    _arguments = ArrayList@64[empty]
    _nullable = Boolean@22
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@44
    classifier = JavaTypeParameterImpl@51['E']
}

LazyJavaClassifierType@73['E'] {
    _arguments = ArrayList@75[empty]
    _nullable = Boolean@22
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@24
    classifier = JavaTypeParameterImpl@74['E']
}

LazyJavaClassifierType@76['E'] {
    _arguments = ArrayList@77[empty]
    _nullable = Boolean@50
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@24
    classifier = JavaTypeParameterImpl@74['E']
}

LazyJavaClassifierType@78['E'] {
    _arguments = ArrayList@81[empty]
    _nullable = Boolean@22
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@80
    classifier = JavaTypeParameterImpl@79['E']
}

LazyJavaClassifierType@99['E'] {
    _arguments = ArrayList@100[empty]
    _nullable = Boolean@50
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@24
    classifier = JavaTypeParameterImpl@23['E']
}

LazyJavaClassifierType@187['E'] {
    _arguments = ArrayList@188[empty]
    _nullable = Boolean@50
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@44
    classifier = JavaTypeParameterImpl@43['E']
}

LazyJavaClassifierType@189['E'] {
    _arguments = ArrayList@190[empty]
    _nullable = Boolean@50
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@80
    classifier = JavaTypeParameterImpl@79['E']
}

LazyJavaClassifierType@32['List<E>'] {
    _arguments = ArrayList@35[1] { TypeProjectionImpl@36 }
    _memberScope = SubstitutingScope@37
    _typeConstructor = DeserializedClassTypeConstructor@34
    classifier = JavaClassImpl@33['List']
}

LazyJavaClassifierType@53['List<E>'] {
    _arguments = ArrayList@55[1] { TypeProjectionImpl@56 }
    _memberScope = SubstitutingScope@57
    _typeConstructor = DeserializedClassTypeConstructor@34
    classifier = JavaClassImpl@54['List']
}

LazyJavaClassifierType@0['Object'] {
    _typeConstructor = DeserializedClassTypeConstructor@2
    classifier = JavaClassImpl@1['Object']
}

LazyJavaClassifierType@61['Object'] {
    _typeConstructor = DeserializedClassTypeConstructor@2
    classifier = JavaClassImpl@62['Object']
}

LazyJavaClassifierType@82['Object'] {
    _typeConstructor = DeserializedClassTypeConstructor@2
    classifier = JavaClassImpl@83['Object']
}

LazyJavaClassifierType@204['Object'] {
    _typeConstructor = DeserializedClassTypeConstructor@2
    classifier = JavaClassImpl@205['Object']
}

LazyJavaClassifierType@193['RandomAccess'] {
    _arguments = ArrayList@222[empty]
    _memberScope = LazyJavaClassMemberScope@41
    _typeConstructor = LazyJavaClassTypeConstructor@39['RandomAccess']
    classifier = JavaClassImpl@147['RandomAccess']
}

LazyJavaClassifierType@198['Serializable'] {
    _arguments = ArrayList@199[empty]
    _memberScope = LazyJavaClassMemberScope@72
    _typeConstructor = LazyJavaClassTypeConstructor@70['Serializable']
    classifier = JavaClassImpl@150['Serializable']
}

LazyJavaPackageFragmentProvider@101 {
    _packageFragments('<root>': FqName@102) = LazyJavaPackageFragment@103['<root>']
    _packageFragments('ArrayList': FqName@119) = null
    _packageFragments('Collection': FqName@125) = null
    _packageFragments('Int': FqName@159) = null
    _packageFragments('Iterable': FqName@142) = null
    _packageFragments('List': FqName@136) = null
    _packageFragments('Math': FqName@154) = null
    _packageFragments('R': FqName@131) = null
    _packageFragments('String': FqName@164) = null
    _packageFragments('T': FqName@114) = null
    _packageFragments('java': FqName@105) = LazyJavaPackageFragment@106['java']
    _packageFragments('java.io': FqName@148) = LazyJavaPackageFragment@149['io']
    _packageFragments('java.lang': FqName@107) = LazyJavaPackageFragment@108['lang']
    _packageFragments('java.lang.ArrayList': FqName@122) = null
    _packageFragments('java.lang.Collection': FqName@128) = null
    _packageFragments('java.lang.Int': FqName@162) = null
    _packageFragments('java.lang.Iterable': FqName@145) = null
    _packageFragments('java.lang.List': FqName@139) = null
    _packageFragments('java.lang.Math': FqName@157) = null
    _packageFragments('java.lang.R': FqName@134) = null
    _packageFragments('java.lang.String': FqName@167) = null
    _packageFragments('java.lang.T': FqName@117) = null
    _packageFragments('java.util': FqName@112) = LazyJavaPackageFragment@3['util']
    _packageFragments('java.util.ArrayList': FqName@120) = null
    _packageFragments('java.util.Collection': FqName@126) = null
    _packageFragments('java.util.Int': FqName@160) = null
    _packageFragments('java.util.Iterable': FqName@143) = null
    _packageFragments('java.util.List': FqName@137) = null
    _packageFragments('java.util.Math': FqName@155) = null
    _packageFragments('java.util.R': FqName@132) = null
    _packageFragments('java.util.String': FqName@165) = null
    _packageFragments('java.util.T': FqName@115) = null
    _packageFragments('kotlin': FqName@109) = null
    _packageFragments('kotlin.ArrayList': FqName@121) = null
    _packageFragments('kotlin.Collection': FqName@127) = null
    _packageFragments('kotlin.Int': FqName@161) = null
    _packageFragments('kotlin.Iterable': FqName@144) = null
    _packageFragments('kotlin.List': FqName@138) = null
    _packageFragments('kotlin.Math': FqName@156) = null
    _packageFragments('kotlin.R': FqName@133) = null
    _packageFragments('kotlin.String': FqName@166) = null
    _packageFragments('kotlin.T': FqName@116) = null
    _packageFragments('kotlin.io': FqName@111) = null
    _packageFragments('kotlin.jvm': FqName@110) = null
    _packageFragments('n': FqName@104) = null
    _packageFragments('n.ArrayList': FqName@118) = null
    _packageFragments('n.Collection': FqName@124) = null
    _packageFragments('n.Int': FqName@158) = null
    _packageFragments('n.Iterable': FqName@141) = null
    _packageFragments('n.List': FqName@135) = null
    _packageFragments('n.Math': FqName@153) = null
    _packageFragments('n.R': FqName@130) = null
    _packageFragments('n.String': FqName@163) = null
    _packageFragments('n.T': FqName@113) = null
    topLevelClasses(JavaClassImpl@87['AbstractCollection']) = LazyJavaClassDescriptor@96['AbstractCollection']
    topLevelClasses(JavaClassImpl@27['AbstractList']) = LazyJavaClassDescriptor@146['AbstractList']
    topLevelClasses(JavaClassImpl@123['ArrayList']) = LazyJavaClassDescriptor@5['ArrayList']
    topLevelClasses(JavaClassImpl@129['Collection']) = LazyJavaClassDescriptor@8['Collection']
    topLevelClasses(JavaClassImpl@140['List']) = LazyJavaClassDescriptor@10['List']
    topLevelClasses(JavaClassImpl@151['Math']) = LazyJavaClassDescriptor@152['Math']
    topLevelClasses(JavaClassImpl@147['RandomAccess']) = LazyJavaClassDescriptor@38['RandomAccess']
    topLevelClasses(JavaClassImpl@150['Serializable']) = LazyJavaClassDescriptor@69['Serializable']
}

LazyJavaPackageFragment@106['java'] {
    _functions('lang': Name@174) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@171
    _functions('util': Name@175) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@171
    classes('lang': Name@170) = null // through LazyPackageFragmentScopeForJavaPackage@171
    classes('util': Name@172) = null // through LazyPackageFragmentScopeForJavaPackage@171
    deserializedPackageScope = JetScope$1@12 // through LazyPackageFragmentScopeForJavaPackage@171
    memberIndex = computeMemberIndex$1@173 // through LazyPackageFragmentScopeForJavaPackage@171
}

LazyJavaPackageFragment@108['lang'] {
    _functions('arrayList': Name@14) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@196
    _functions('fold': Name@17) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@196
    _functions('map': Name@16) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@196
    classes('Math': Name@18) = LazyJavaClassDescriptor@152['Math'] // through LazyPackageFragmentScopeForJavaPackage@196
    classes('arrayList': Name@14) = null // through LazyPackageFragmentScopeForJavaPackage@196
    classes('fold': Name@17) = null // through LazyPackageFragmentScopeForJavaPackage@196
    classes('map': Name@16) = null // through LazyPackageFragmentScopeForJavaPackage@196
    deserializedPackageScope = JetScope$1@12 // through LazyPackageFragmentScopeForJavaPackage@196
    memberIndex = computeMemberIndex$1@197 // through LazyPackageFragmentScopeForJavaPackage@196
}

LazyJavaPackageFragment@3['util'] {
    _functions('arrayList': Name@14) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@6
    _functions('fold': Name@17) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@6
    _functions('map': Name@16) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@6
    classes('ArrayList': Name@4) = LazyJavaClassDescriptor@5['ArrayList'] // through LazyPackageFragmentScopeForJavaPackage@6
    classes('Collection': Name@7) = LazyJavaClassDescriptor@8['Collection'] // through LazyPackageFragmentScopeForJavaPackage@6
    classes('Int': Name@19) = null // through LazyPackageFragmentScopeForJavaPackage@6
    classes('Iterable': Name@11) = null // through LazyPackageFragmentScopeForJavaPackage@6
    classes('List': Name@9) = LazyJavaClassDescriptor@10['List'] // through LazyPackageFragmentScopeForJavaPackage@6
    classes('Math': Name@18) = null // through LazyPackageFragmentScopeForJavaPackage@6
    classes('String': Name@20) = null // through LazyPackageFragmentScopeForJavaPackage@6
    classes('arrayList': Name@14) = null // through LazyPackageFragmentScopeForJavaPackage@6
    classes('fold': Name@17) = null // through LazyPackageFragmentScopeForJavaPackage@6
    classes('map': Name@16) = null // through LazyPackageFragmentScopeForJavaPackage@6
    deserializedPackageScope = JetScope$1@12 // through LazyPackageFragmentScopeForJavaPackage@6
    memberIndex = computeMemberIndex$1@13 // through LazyPackageFragmentScopeForJavaPackage@6
}

LazyJavaTypeParameterDescriptor@184['E'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@44
    upperBounds = LinkedHashSet@202[1] { NullableType@203 }
}

LazyJavaTypeParameterDescriptor@181['E'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@24
}

LazyJavaTypeParameterDescriptor@60['E'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@80
}

LazyJavaTypeParameterResolver@58 {
    resolve(JavaTypeParameterImpl@59['E']) = LazyJavaTypeParameterDescriptor@60['E']
}

LazyJavaTypeParameterResolver@182 {
    resolve(JavaTypeParameterImpl@183['E']) = LazyJavaTypeParameterDescriptor@184['E']
}

LazyJavaTypeParameterResolver@185 {
    resolve(JavaTypeParameterImpl@186['E']) = LazyJavaTypeParameterDescriptor@181['E']
}
