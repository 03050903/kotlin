DescriptorResolver@0 {
    <name not found> = ErrorTypeImpl@1
}

LazyJavaClassDescriptor@2['Exception'] {
    constructors = ArrayList@3[5] { JavaConstructorDescriptor@4['<init>'], JavaConstructorDescriptor@5['<init>'], JavaConstructorDescriptor@6['<init>'], ... } // through LazyJavaClassMemberScope@7
    defaultType = JetTypeImpl@8['Exception']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@9['Exception']
}

LazyJavaClassTypeConstructor@9['Exception'] {
    parameters = ArrayList@10[empty]
    supertypes = ArrayList@11[1] { LazyJavaClassifierType@12['Throwable'] }
}

LazyJavaClassifierType@13['String'] {
    arguments = ArrayList@14[empty]
    classifier = JavaClassImpl@15['String']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@18['String'] {
    arguments = ArrayList@19[empty]
    classifier = JavaClassImpl@20['String']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@21['String'] {
    arguments = ArrayList@22[empty]
    classifier = JavaClassImpl@23['String']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@24['String'] {
    arguments = ArrayList@25[empty]
    classifier = JavaClassImpl@23['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@27['String'] {
    arguments = ArrayList@28[empty]
    classifier = JavaClassImpl@20['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@29['String'] {
    arguments = ArrayList@30[empty]
    classifier = JavaClassImpl@15['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@31['Throwable'] {
    arguments = ArrayList@32[empty]
    classifier = JavaClassImpl@33['Throwable']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@35['Throwable'] {
    arguments = ArrayList@36[empty]
    classifier = JavaClassImpl@37['Throwable']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@38['Throwable'] {
    arguments = ArrayList@39[empty]
    classifier = JavaClassImpl@40['Throwable']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@41['Throwable'] {
    arguments = ArrayList@42[empty]
    classifier = JavaClassImpl@37['Throwable']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@43['Throwable'] {
    arguments = ArrayList@44[empty]
    classifier = JavaClassImpl@33['Throwable']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@45['Throwable'] {
    arguments = ArrayList@46[empty]
    classifier = JavaClassImpl@40['Throwable']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@12['Throwable'] {
    arguments = ArrayList@47[empty]
    classifier = JavaClassImpl@48['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaPackageFragmentProvider@49 {
    packageFragments('<root>': FqName@50) = LazyJavaPackageFragment@51['<root>']
    packageFragments('A': FqName@52) = null
    packageFragments('MyProperty': FqName@53) = null
    packageFragments('PropertyMetadata': FqName@54) = null
    packageFragments('R': FqName@55) = null
    packageFragments('T': FqName@56) = null
    packageFragments('java': FqName@57) = LazyJavaPackageFragment@58['java']
    packageFragments('java.lang': FqName@59) = LazyJavaPackageFragment@60['lang']
    packageFragments('java.lang.PropertyMetadata': FqName@61) = null
    packageFragments('java.lang.R': FqName@62) = null
    packageFragments('java.lang.T': FqName@63) = null
    packageFragments('kotlin': FqName@64) = null
    packageFragments('kotlin.PropertyMetadata': FqName@65) = null
    packageFragments('kotlin.R': FqName@66) = null
    packageFragments('kotlin.T': FqName@67) = null
    packageFragments('kotlin.io': FqName@68) = null
    packageFragments('kotlin.jvm': FqName@69) = null
    topLevelClasses(JavaClassImpl@70['Exception']) = LazyJavaClassDescriptor@2['Exception']
}

LazyJavaPackageFragment@51['<root>'] {
    classes('Exception': Name@71) = null // through LazyPackageFragmentScopeForJavaPackage@72
    classes('MyProperty': Name@73) = null // through LazyPackageFragmentScopeForJavaPackage@72
    classes('PropertyMetadata': Name@74) = null // through LazyPackageFragmentScopeForJavaPackage@72
    classes('PropertyMetadataImpl': Name@75) = null // through LazyPackageFragmentScopeForJavaPackage@72
    classes('get': Name@76) = null // through LazyPackageFragmentScopeForJavaPackage@72
    classes('propertyDelegated': Name@77) = null // through LazyPackageFragmentScopeForJavaPackage@72
    classes('set': Name@78) = null // through LazyPackageFragmentScopeForJavaPackage@72
    deserializedPackageScope = Empty@79 // through LazyPackageFragmentScopeForJavaPackage@72
    functions('Exception': Name@71) = EmptyList@80[empty] // through LazyPackageFragmentScopeForJavaPackage@72
    functions('MyProperty': Name@73) = EmptyList@80[empty] // through LazyPackageFragmentScopeForJavaPackage@72
    functions('PropertyMetadataImpl': Name@75) = EmptyList@80[empty] // through LazyPackageFragmentScopeForJavaPackage@72
    functions('get': Name@76) = EmptyList@80[empty] // through LazyPackageFragmentScopeForJavaPackage@72
    functions('propertyDelegated': Name@77) = EmptyList@80[empty] // through LazyPackageFragmentScopeForJavaPackage@72
    functions('set': Name@78) = EmptyList@80[empty] // through LazyPackageFragmentScopeForJavaPackage@72
    memberIndex = computeMemberIndex$1@81 // through LazyPackageFragmentScopeForJavaPackage@72
}

LazyJavaPackageFragment@58['java'] {
    classes('lang': Name@82) = null // through LazyPackageFragmentScopeForJavaPackage@83
    deserializedPackageScope = Empty@79 // through LazyPackageFragmentScopeForJavaPackage@83
    functions('lang': Name@84) = EmptyList@80[empty] // through LazyPackageFragmentScopeForJavaPackage@83
    memberIndex = computeMemberIndex$1@85 // through LazyPackageFragmentScopeForJavaPackage@83
}

LazyJavaPackageFragment@60['lang'] {
    classes('Exception': Name@71) = LazyJavaClassDescriptor@2['Exception'] // through LazyPackageFragmentScopeForJavaPackage@86
    classes('MyProperty': Name@73) = null // through LazyPackageFragmentScopeForJavaPackage@86
    classes('PropertyMetadataImpl': Name@75) = null // through LazyPackageFragmentScopeForJavaPackage@86
    classes('get': Name@76) = null // through LazyPackageFragmentScopeForJavaPackage@86
    classes('propertyDelegated': Name@77) = null // through LazyPackageFragmentScopeForJavaPackage@86
    classes('set': Name@78) = null // through LazyPackageFragmentScopeForJavaPackage@86
    deserializedPackageScope = Empty@79 // through LazyPackageFragmentScopeForJavaPackage@86
    functions('Exception': Name@71) = EmptyList@80[empty] // through LazyPackageFragmentScopeForJavaPackage@86
    functions('MyProperty': Name@73) = EmptyList@80[empty] // through LazyPackageFragmentScopeForJavaPackage@86
    functions('PropertyMetadataImpl': Name@75) = EmptyList@80[empty] // through LazyPackageFragmentScopeForJavaPackage@86
    functions('get': Name@76) = EmptyList@80[empty] // through LazyPackageFragmentScopeForJavaPackage@86
    functions('propertyDelegated': Name@77) = EmptyList@80[empty] // through LazyPackageFragmentScopeForJavaPackage@86
    functions('set': Name@78) = EmptyList@80[empty] // through LazyPackageFragmentScopeForJavaPackage@86
    memberIndex = computeMemberIndex$1@87 // through LazyPackageFragmentScopeForJavaPackage@86
}
