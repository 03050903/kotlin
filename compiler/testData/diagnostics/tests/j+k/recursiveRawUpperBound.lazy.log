DescriptorResolver@0 {
    <name not found> = DelegatingFlexibleType@1
}

LazyJavaClassDescriptor@2['Bad'] {
    _typeConstructor = LazyJavaClassTypeConstructor@3['Bad']
}

LazyJavaClassDescriptor@4['X'] {
    _functions('foo': Name@5) = ArrayList@6[1] { JavaMethodDescriptor@7['foo'] } // through LazyJavaClassMemberScope@8
    _properties('foo': Name@5) = EmptyList@9[empty] // through LazyJavaClassMemberScope@8
    _typeConstructor = LazyJavaClassTypeConstructor@10['X']
    defaultType = JetTypeImpl@11['X']
    enumEntryIndex = LinkedHashMap@12 // through LazyJavaClassMemberScope@8
    memberIndex = computeMemberIndex$1@13 // through LazyJavaClassMemberScope@8
    nestedClassIndex = LinkedHashMap@14 // through LazyJavaClassMemberScope@8
    nestedClasses('foo': Name@5) = null // through LazyJavaClassMemberScope@8
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@15['<this>']
}

LazyJavaClassTypeConstructor@3['Bad'] {
    _parameters = ArrayList@16[1] { LazyJavaTypeParameterDescriptor@17['T'] }
}

LazyJavaClassTypeConstructor@10['X'] {
    _parameters = ArrayList@18[empty]
    _supertypes = ArrayList@19[1] { JetTypeImpl@20['Any'] }
}

LazyJavaClassifierType@21['Bad'] {
    _arguments = ArrayList@22[1] { LazyStarProjection@23 }
    _nullable = 'false': Boolean@24
    _typeConstructor = LazyJavaClassTypeConstructor@3['Bad']
    classifier = JavaClassImpl@25['Bad']
}

LazyJavaClassifierType@26['Bad'] {
    _arguments = ArrayList@27[1] { LazyStarProjection@28 }
    _nullable = 'true': Boolean@29
    _typeConstructor = LazyJavaClassTypeConstructor@3['Bad']
    classifier = JavaClassImpl@25['Bad']
}

LazyJavaClassifierType@30['Bad'] {
    _arguments = ArrayList@31[1] { TypeProjectionImpl@32 }
    _nullable = 'false': Boolean@24
    _typeConstructor = LazyJavaClassTypeConstructor@3['Bad']
    classifier = JavaClassImpl@33['Bad']
}

LazyJavaClassifierType@34['Bad'] {
    _arguments = ArrayList@35[1] { TypeProjectionImpl@36 }
    _nullable = 'true': Boolean@29
    _typeConstructor = LazyJavaClassTypeConstructor@3['Bad']
    classifier = JavaClassImpl@33['Bad']
}

LazyJavaClassifierType@37['Object'] {
    _typeConstructor = DeserializedClassTypeConstructor@38
    classifier = JavaClassImpl@39['Object']
}

LazyJavaPackageFragmentProvider@40 {
    _packageFragments('<root>': FqName@41) = LazyJavaPackageFragment@42['<root>']
    _packageFragments('X': FqName@43) = null
    _packageFragments('java': FqName@44) = LazyJavaPackageFragment@45['java']
    _packageFragments('java.lang': FqName@46) = LazyJavaPackageFragment@47['lang']
    _packageFragments('java.lang.X': FqName@48) = null
    _packageFragments('kotlin': FqName@49) = null
    _packageFragments('kotlin.X': FqName@50) = null
    _packageFragments('kotlin.io': FqName@51) = null
    _packageFragments('kotlin.jvm': FqName@52) = null
    topLevelClasses(JavaClassImpl@25['Bad']) = LazyJavaClassDescriptor@2['Bad']
    topLevelClasses(JavaClassImpl@53['X']) = LazyJavaClassDescriptor@4['X']
}

LazyJavaPackageFragment@42['<root>'] {
    _functions('foo': Name@5) = EmptyList@9[empty] // through LazyPackageFragmentScopeForJavaPackage@54
    classes('X': Name@55) = LazyJavaClassDescriptor@4['X'] // through LazyPackageFragmentScopeForJavaPackage@54
    classes('foo': Name@5) = null // through LazyPackageFragmentScopeForJavaPackage@54
    deserializedPackageScope = Empty@56 // through LazyPackageFragmentScopeForJavaPackage@54
    memberIndex = computeMemberIndex$1@57 // through LazyPackageFragmentScopeForJavaPackage@54
}

LazyJavaPackageFragment@45['java'] {
    _functions('lang': Name@58) = EmptyList@9[empty] // through LazyPackageFragmentScopeForJavaPackage@59
    classes('lang': Name@60) = null // through LazyPackageFragmentScopeForJavaPackage@59
    deserializedPackageScope = Empty@56 // through LazyPackageFragmentScopeForJavaPackage@59
    memberIndex = computeMemberIndex$1@61 // through LazyPackageFragmentScopeForJavaPackage@59
}

LazyJavaPackageFragment@47['lang'] {
    _functions('foo': Name@5) = EmptyList@9[empty] // through LazyPackageFragmentScopeForJavaPackage@62
    classes('foo': Name@5) = null // through LazyPackageFragmentScopeForJavaPackage@62
    deserializedPackageScope = Empty@56 // through LazyPackageFragmentScopeForJavaPackage@62
    memberIndex = computeMemberIndex$1@63 // through LazyPackageFragmentScopeForJavaPackage@62
}

LazyJavaTypeParameterDescriptor@17['T'] {
    upperBounds = LinkedHashSet@64[1] { DelegatingFlexibleType@65 }
    upperBoundsAsType = DelegatingFlexibleType@65
}

LazyJavaTypeParameterResolver@66 {
    resolve(JavaTypeParameterImpl@67['T']) = LazyJavaTypeParameterDescriptor@17['T']
}
