LazyJavaClassDescriptor@0['X'] {
    defaultType = JetTypeImpl@1['X<1>']
    functions('bar': Name@2) = ArrayList@3[1] { JavaMethodDescriptor@4['bar'] } // through LazyJavaClassMemberScope@5
    functions('foo': Name@6) = ArrayList@7[1] { JavaMethodDescriptor@8['foo'] } // through LazyJavaClassMemberScope@5
    memberIndex = computeMemberIndex$1@9 // through LazyJavaClassMemberScope@5
    properties('bar': Name@2) = EmptyList@10[empty] // through LazyJavaClassMemberScope@5
    properties('foo': Name@6) = EmptyList@10[empty] // through LazyJavaClassMemberScope@5
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@11['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@12['X']
}

LazyJavaClassDescriptor@13['Y'] {
    constructors = ArrayList@14[1] { JavaConstructorDescriptor@15['<init>'] } // through LazyJavaClassMemberScope@16
    defaultType = JetTypeImpl@17['Y']
    enumEntryIndex = LinkedHashMap@18 // through LazyJavaClassMemberScope@16
    functionTypeForSamInterface = null
    functions('bar': Name@2) = ArrayList@19[1] { JavaMethodDescriptor@20['bar'] } // through LazyJavaClassMemberScope@16
    functions('foo': Name@6) = ArrayList@21[1] { JavaMethodDescriptor@22['foo'] } // through LazyJavaClassMemberScope@16
    memberIndex = computeMemberIndex$1@23 // through LazyJavaClassMemberScope@16
    nestedClassIndex = LinkedHashMap@24 // through LazyJavaClassMemberScope@16
    nestedClasses('bar': Name@2) = null // through LazyJavaClassMemberScope@16
    nestedClasses('foo': Name@6) = null // through LazyJavaClassMemberScope@16
    properties('bar': Name@2) = EmptyList@10[empty] // through LazyJavaClassMemberScope@16
    properties('foo': Name@6) = EmptyList@10[empty] // through LazyJavaClassMemberScope@16
    typeConstructor = LazyJavaClassTypeConstructor@25['Y']
}

LazyJavaClassTypeConstructor@12['X'] {
    parameters = ArrayList@26[1] { LazyJavaTypeParameterDescriptor@27['T'] }
    supertypes = ArrayList@28[1] { JetTypeImpl@29['Any'] }
}

LazyJavaClassTypeConstructor@25['Y'] {
    parameters = ArrayList@30[empty]
    supertypes = ArrayList@31[1] { LazyJavaClassifierType@32['X<String>'] }
}

LazyJavaClassifierType@33['Object'] {
    classifier = JavaClassImpl@34['Object']
    typeConstructor = DeserializedClassTypeConstructor@35
}

LazyJavaClassifierType@36['String'] {
    arguments = ArrayList@37[empty]
    classifier = JavaClassImpl@38['String']
    memberScope = DeserializedClassMemberScope@39
    nullable = 'false': Boolean@40
    typeConstructor = DeserializedClassTypeConstructor@41
}

LazyJavaClassifierType@42['String'] {
    arguments = ArrayList@43[empty]
    classifier = JavaClassImpl@38['String']
    nullable = 'true': Boolean@44
    typeConstructor = DeserializedClassTypeConstructor@41
}

LazyJavaClassifierType@45['T'] {
    arguments = ArrayList@46[empty]
    classifier = JavaTypeParameterImpl@47['T']
    nullable = 'false': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@48
}

LazyJavaClassifierType@49['T'] {
    arguments = ArrayList@50[empty]
    classifier = JavaTypeParameterImpl@51['T']
    nullable = 'false': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@48
}

LazyJavaClassifierType@52['T'] {
    arguments = ArrayList@53[empty]
    classifier = JavaTypeParameterImpl@51['T']
    nullable = 'true': Boolean@44
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@48
}

LazyJavaClassifierType@54['T'] {
    arguments = ArrayList@55[empty]
    classifier = JavaTypeParameterImpl@47['T']
    nullable = 'true': Boolean@44
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@48
}

LazyJavaClassifierType@32['X<String>'] {
    arguments = ArrayList@56[1] { TypeProjectionImpl@57 }
    classifier = JavaClassImpl@58['X']
    memberScope = SubstitutingScope@59
    typeConstructor = LazyJavaClassTypeConstructor@12['X']
}

LazyJavaPackageFragmentProvider@60 {
    packageFragments('<root>': FqName@61) = LazyJavaPackageFragment@62['<root>']
    packageFragments('java': FqName@63) = LazyJavaPackageFragment@64['java']
    packageFragments('java.lang': FqName@65) = LazyJavaPackageFragment@66['lang']
    packageFragments('kotlin': FqName@67) = null
    packageFragments('kotlin.io': FqName@68) = null
    packageFragments('kotlin.jvm': FqName@69) = null
    topLevelClasses(JavaClassImpl@58['X']) = LazyJavaClassDescriptor@0['X']
    topLevelClasses(JavaClassImpl@70['Y']) = LazyJavaClassDescriptor@13['Y']
}

LazyJavaPackageFragment@62['<root>'] {
    classes('Y': Name@71) = LazyJavaClassDescriptor@13['Y'] // through LazyPackageFragmentScopeForJavaPackage@72
    classes('bar': Name@2) = null // through LazyPackageFragmentScopeForJavaPackage@72
    classes('foo': Name@6) = null // through LazyPackageFragmentScopeForJavaPackage@72
    deserializedPackageScope = Empty@73 // through LazyPackageFragmentScopeForJavaPackage@72
    functions('Y': Name@71) = EmptyList@10[empty] // through LazyPackageFragmentScopeForJavaPackage@72
    functions('bar': Name@2) = EmptyList@10[empty] // through LazyPackageFragmentScopeForJavaPackage@72
    functions('foo': Name@6) = EmptyList@10[empty] // through LazyPackageFragmentScopeForJavaPackage@72
    memberIndex = computeMemberIndex$1@74 // through LazyPackageFragmentScopeForJavaPackage@72
}

LazyJavaPackageFragment@64['java'] {
    classes('lang': Name@75) = null // through LazyPackageFragmentScopeForJavaPackage@76
    deserializedPackageScope = Empty@73 // through LazyPackageFragmentScopeForJavaPackage@76
    functions('lang': Name@77) = EmptyList@10[empty] // through LazyPackageFragmentScopeForJavaPackage@76
    memberIndex = computeMemberIndex$1@78 // through LazyPackageFragmentScopeForJavaPackage@76
}

LazyJavaPackageFragment@66['lang'] {
    classes('Y': Name@71) = null // through LazyPackageFragmentScopeForJavaPackage@79
    classes('bar': Name@2) = null // through LazyPackageFragmentScopeForJavaPackage@79
    classes('foo': Name@6) = null // through LazyPackageFragmentScopeForJavaPackage@79
    deserializedPackageScope = Empty@73 // through LazyPackageFragmentScopeForJavaPackage@79
    functions('Y': Name@71) = EmptyList@10[empty] // through LazyPackageFragmentScopeForJavaPackage@79
    functions('bar': Name@2) = EmptyList@10[empty] // through LazyPackageFragmentScopeForJavaPackage@79
    functions('foo': Name@6) = EmptyList@10[empty] // through LazyPackageFragmentScopeForJavaPackage@79
    memberIndex = computeMemberIndex$1@80 // through LazyPackageFragmentScopeForJavaPackage@79
}

LazyJavaTypeParameterDescriptor@27['T'] {
    defaultType = JetTypeImpl@81['T']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@48
    upperBounds = LinkedHashSet@82[1] { NullableType@83 }
}

LazyJavaTypeParameterResolver@84 {
    resolve(JavaTypeParameterImpl@85['T']) = LazyJavaTypeParameterDescriptor@27['T']
}

LazyJavaTypeParameterResolver@86 {
    resolve(JavaTypeParameterImpl@51['T']) = null
}

LazyJavaTypeParameterResolver@87 {
    resolve(JavaTypeParameterImpl@47['T']) = null
}
