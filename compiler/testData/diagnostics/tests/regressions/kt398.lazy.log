DescriptorResolver@0 {
    <name not found> = JetTypeImpl@1['Function1<2>']
}

LazyJavaPackageFragmentProvider@2 {
    packageFragments('<root>': FqName@3) = LazyJavaPackageFragment@4['<root>']
    packageFragments('Any': FqName@5) = null
    packageFragments('String': FqName@6) = null
    packageFragments('T': FqName@7) = null
    packageFragments('X': FqName@8) = null
    packageFragments('java': FqName@9) = LazyJavaPackageFragment@10['java']
    packageFragments('java.lang': FqName@11) = LazyJavaPackageFragment@12['lang']
    packageFragments('java.lang.Any': FqName@13) = null
    packageFragments('java.lang.String': FqName@14) = null
    packageFragments('java.lang.T': FqName@15) = null
    packageFragments('kotlin': FqName@16) = null
    packageFragments('kotlin.Any': FqName@17) = null
    packageFragments('kotlin.String': FqName@18) = null
    packageFragments('kotlin.T': FqName@19) = null
    packageFragments('kotlin.io': FqName@20) = null
    packageFragments('kotlin.jvm': FqName@21) = null
}

LazyJavaPackageFragment@4['<root>'] {
    classes('Any': Name@22) = null // through LazyPackageFragmentScopeForJavaPackage@23
    classes('String': Name@24) = null // through LazyPackageFragmentScopeForJavaPackage@23
    classes('X': Name@25) = null // through LazyPackageFragmentScopeForJavaPackage@23
    classes('check': Name@26) = null // through LazyPackageFragmentScopeForJavaPackage@23
    classes('invoke': Name@27) = null // through LazyPackageFragmentScopeForJavaPackage@23
    classes('not': Name@28) = null // through LazyPackageFragmentScopeForJavaPackage@23
    deserializedPackageScope = Empty@29 // through LazyPackageFragmentScopeForJavaPackage@23
    functions('X': Name@25) = EmptyList@30[empty] // through LazyPackageFragmentScopeForJavaPackage@23
    functions('check': Name@26) = EmptyList@30[empty] // through LazyPackageFragmentScopeForJavaPackage@23
    functions('invoke': Name@27) = EmptyList@30[empty] // through LazyPackageFragmentScopeForJavaPackage@23
    functions('not': Name@28) = EmptyList@30[empty] // through LazyPackageFragmentScopeForJavaPackage@23
    memberIndex = computeMemberIndex$1@31 // through LazyPackageFragmentScopeForJavaPackage@23
}

LazyJavaPackageFragment@10['java'] {
    classes('lang': Name@32) = null // through LazyPackageFragmentScopeForJavaPackage@33
    deserializedPackageScope = Empty@29 // through LazyPackageFragmentScopeForJavaPackage@33
    functions('lang': Name@34) = EmptyList@30[empty] // through LazyPackageFragmentScopeForJavaPackage@33
    memberIndex = computeMemberIndex$1@35 // through LazyPackageFragmentScopeForJavaPackage@33
}

LazyJavaPackageFragment@12['lang'] {
    classes('X': Name@25) = null // through LazyPackageFragmentScopeForJavaPackage@36
    classes('check': Name@26) = null // through LazyPackageFragmentScopeForJavaPackage@36
    classes('invoke': Name@27) = null // through LazyPackageFragmentScopeForJavaPackage@36
    classes('not': Name@28) = null // through LazyPackageFragmentScopeForJavaPackage@36
    deserializedPackageScope = Empty@29 // through LazyPackageFragmentScopeForJavaPackage@36
    functions('X': Name@25) = EmptyList@30[empty] // through LazyPackageFragmentScopeForJavaPackage@36
    functions('check': Name@26) = EmptyList@30[empty] // through LazyPackageFragmentScopeForJavaPackage@36
    functions('invoke': Name@27) = EmptyList@30[empty] // through LazyPackageFragmentScopeForJavaPackage@36
    functions('not': Name@28) = EmptyList@30[empty] // through LazyPackageFragmentScopeForJavaPackage@36
    memberIndex = computeMemberIndex$1@37 // through LazyPackageFragmentScopeForJavaPackage@36
}
