DescriptorResolver@0 {
    <name not found> = JetTypeImpl@1['Function1<2>']
}

LazyJavaClassDescriptor@2['AbstractCollection'] {
    typeConstructor = LazyJavaClassTypeConstructor@3['AbstractCollection']
}

LazyJavaClassDescriptor@4['AbstractList'] {
    typeConstructor = LazyJavaClassTypeConstructor@5['AbstractList']
}

LazyJavaClassDescriptor@6['ArrayList'] {
    constructors = ArrayList@7[3] { JavaConstructorDescriptor@8['<init>'], JavaConstructorDescriptor@9['<init>'], JavaConstructorDescriptor@10['<init>'] } // through LazyJavaClassMemberScope@11
    defaultType = JetTypeImpl@12['ArrayList<1>']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@13['ArrayList']
}

LazyJavaClassDescriptor@14['RandomAccess'] {
    typeConstructor = LazyJavaClassTypeConstructor@15['RandomAccess']
}

LazyJavaClassDescriptor@16['Serializable'] {
    typeConstructor = LazyJavaClassTypeConstructor@17['Serializable']
}

LazyJavaClassTypeConstructor@3['AbstractCollection'] {
    parameters = ArrayList@18[1] { LazyJavaTypeParameterDescriptor@19['E'] }
    supertypes = ArrayList@20[1] { LazyJavaClassifierType@21['Collection<E>'] }
}

LazyJavaClassTypeConstructor@5['AbstractList'] {
    parameters = ArrayList@22[1] { LazyJavaTypeParameterDescriptor@23['E'] }
    supertypes = ArrayList@24[2] { LazyJavaClassifierType@25['AbstractCollection<E>'], LazyJavaClassifierType@26['List<E>'] }
}

LazyJavaClassTypeConstructor@13['ArrayList'] {
    parameters = ArrayList@27[1] { LazyJavaTypeParameterDescriptor@28['E'] }
    supertypes = ArrayList@29[5] { LazyJavaClassifierType@30['AbstractList<E>'], LazyJavaClassifierType@31['List<E>'], LazyJavaClassifierType@32['RandomAccess'], ... }
}

LazyJavaClassTypeConstructor@15['RandomAccess'] {
    parameters = ArrayList@33[empty]
    supertypes = ArrayList@34[1] { JetTypeImpl@35['Any'] }
}

LazyJavaClassTypeConstructor@17['Serializable'] {
    parameters = ArrayList@36[empty]
    supertypes = ArrayList@37[1] { JetTypeImpl@35['Any'] }
}

LazyJavaClassifierType@25['AbstractCollection<E>'] {
    arguments = ArrayList@38[1] { TypeProjectionImpl@39 }
    classifier = JavaClassImpl@40['AbstractCollection']
    memberScope = SubstitutingScope@41
    nullable = 'false': Boolean@42
    typeConstructor = LazyJavaClassTypeConstructor@3['AbstractCollection']
}

LazyJavaClassifierType@30['AbstractList<E>'] {
    arguments = ArrayList@43[1] { TypeProjectionImpl@44 }
    classifier = JavaClassImpl@45['AbstractList']
    memberScope = SubstitutingScope@46
    nullable = 'false': Boolean@42
    typeConstructor = LazyJavaClassTypeConstructor@5['AbstractList']
}

LazyJavaClassifierType@47['Cloneable'] {
    arguments = ArrayList@48[empty]
    classifier = JavaClassImpl@49['Cloneable']
    memberScope = DeserializedClassMemberScope@50
    nullable = 'false': Boolean@42
    typeConstructor = DeserializedClassTypeConstructor@51
}

LazyJavaClassifierType@52['Collection<? extends E>'] {
    arguments = ArrayList@53[1] { TypeProjectionImpl@54 }
    classifier = JavaClassImpl@55['Collection']
    memberScope = SubstitutingScope@56
    nullable = 'false': Boolean@42
    typeConstructor = DeserializedClassTypeConstructor@57
}

LazyJavaClassifierType@58['Collection<? extends E>'] {
    arguments = ArrayList@59[1] { TypeProjectionImpl@60 }
    classifier = JavaClassImpl@55['Collection']
    memberScope = SubstitutingScope@61
    nullable = 'true': Boolean@62
    typeConstructor = DeserializedClassTypeConstructor@63
}

LazyJavaClassifierType@21['Collection<E>'] {
    arguments = ArrayList@64[1] { TypeProjectionImpl@65 }
    classifier = JavaClassImpl@66['Collection']
    memberScope = SubstitutingScope@67
    nullable = 'false': Boolean@42
    typeConstructor = DeserializedClassTypeConstructor@57
}

LazyJavaClassifierType@68['E'] {
    arguments = ArrayList@69[empty]
    classifier = JavaTypeParameterImpl@70['E']
    nullable = 'false': Boolean@42
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@71
}

LazyJavaClassifierType@72['E'] {
    arguments = ArrayList@73[empty]
    classifier = JavaTypeParameterImpl@74['E']
    nullable = 'false': Boolean@42
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@75
}

LazyJavaClassifierType@76['E'] {
    arguments = ArrayList@77[empty]
    classifier = JavaTypeParameterImpl@78['E']
    nullable = 'false': Boolean@42
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@79
}

LazyJavaClassifierType@80['E'] {
    arguments = ArrayList@81[empty]
    classifier = JavaTypeParameterImpl@82['E']
    nullable = 'false': Boolean@42
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@79
}

LazyJavaClassifierType@83['E'] {
    arguments = ArrayList@84[empty]
    classifier = JavaTypeParameterImpl@85['E']
    nullable = 'false': Boolean@42
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@75
}

LazyJavaClassifierType@86['E'] {
    arguments = ArrayList@87[empty]
    classifier = JavaTypeParameterImpl@88['E']
    nullable = 'false': Boolean@42
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@79
}

LazyJavaClassifierType@89['E'] {
    arguments = ArrayList@90[empty]
    classifier = JavaTypeParameterImpl@91['E']
    nullable = 'false': Boolean@42
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@79
}

LazyJavaClassifierType@92['E'] {
    arguments = ArrayList@93[empty]
    classifier = JavaTypeParameterImpl@91['E']
    nullable = 'true': Boolean@62
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@79
}

LazyJavaClassifierType@94['E'] {
    arguments = ArrayList@95[empty]
    classifier = JavaTypeParameterImpl@70['E']
    nullable = 'true': Boolean@62
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@71
}

LazyJavaClassifierType@96['E'] {
    arguments = ArrayList@97[empty]
    classifier = JavaTypeParameterImpl@78['E']
    nullable = 'true': Boolean@62
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@79
}

LazyJavaClassifierType@98['E'] {
    arguments = ArrayList@99[empty]
    classifier = JavaTypeParameterImpl@74['E']
    nullable = 'true': Boolean@62
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@75
}

LazyJavaClassifierType@100['E'] {
    arguments = ArrayList@101[empty]
    classifier = JavaTypeParameterImpl@82['E']
    nullable = 'true': Boolean@62
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@79
}

LazyJavaClassifierType@102['E'] {
    arguments = ArrayList@103[empty]
    classifier = JavaTypeParameterImpl@85['E']
    nullable = 'true': Boolean@62
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@75
}

LazyJavaClassifierType@104['E'] {
    arguments = ArrayList@105[empty]
    classifier = JavaTypeParameterImpl@88['E']
    nullable = 'true': Boolean@62
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@79
}

LazyJavaClassifierType@26['List<E>'] {
    arguments = ArrayList@106[1] { TypeProjectionImpl@107 }
    classifier = JavaClassImpl@108['List']
    memberScope = SubstitutingScope@109
    nullable = 'false': Boolean@42
    typeConstructor = DeserializedClassTypeConstructor@110
}

LazyJavaClassifierType@31['List<E>'] {
    arguments = ArrayList@111[1] { TypeProjectionImpl@112 }
    classifier = JavaClassImpl@113['List']
    memberScope = SubstitutingScope@114
    nullable = 'false': Boolean@42
    typeConstructor = DeserializedClassTypeConstructor@110
}

LazyJavaClassifierType@115['Object'] {
    classifier = JavaClassImpl@116['Object']
    typeConstructor = DeserializedClassTypeConstructor@117
}

LazyJavaClassifierType@118['Object'] {
    classifier = JavaClassImpl@119['Object']
    typeConstructor = DeserializedClassTypeConstructor@117
}

LazyJavaClassifierType@120['Object'] {
    classifier = JavaClassImpl@121['Object']
    typeConstructor = DeserializedClassTypeConstructor@117
}

LazyJavaClassifierType@32['RandomAccess'] {
    arguments = ArrayList@122[empty]
    classifier = JavaClassImpl@123['RandomAccess']
    memberScope = LazyJavaClassMemberScope@124
    nullable = 'false': Boolean@42
    typeConstructor = LazyJavaClassTypeConstructor@15['RandomAccess']
}

LazyJavaClassifierType@125['Serializable'] {
    arguments = ArrayList@126[empty]
    classifier = JavaClassImpl@127['Serializable']
    memberScope = LazyJavaClassMemberScope@128
    nullable = 'false': Boolean@42
    typeConstructor = LazyJavaClassTypeConstructor@17['Serializable']
}

LazyJavaPackageFragmentProvider@129 {
    packageFragments('<root>': FqName@130) = LazyJavaPackageFragment@131['<root>']
    packageFragments('Array': FqName@132) = null
    packageFragments('MutableList': FqName@133) = null
    packageFragments('String': FqName@134) = null
    packageFragments('T': FqName@135) = null
    packageFragments('Unit': FqName@136) = null
    packageFragments('_': FqName@137) = null
    packageFragments('java': FqName@138) = LazyJavaPackageFragment@139['java']
    packageFragments('java.io': FqName@140) = LazyJavaPackageFragment@141['io']
    packageFragments('java.lang': FqName@142) = LazyJavaPackageFragment@143['lang']
    packageFragments('java.lang.Array': FqName@144) = null
    packageFragments('java.lang.MutableList': FqName@145) = null
    packageFragments('java.lang.String': FqName@146) = null
    packageFragments('java.lang.T': FqName@147) = null
    packageFragments('java.lang.Unit': FqName@148) = null
    packageFragments('java.lang._': FqName@149) = null
    packageFragments('java.util': FqName@150) = LazyJavaPackageFragment@151['util']
    packageFragments('java.util.ArrayList': FqName@152) = null
    packageFragments('kotlin': FqName@153) = null
    packageFragments('kotlin.Array': FqName@154) = null
    packageFragments('kotlin.MutableList': FqName@155) = null
    packageFragments('kotlin.String': FqName@156) = null
    packageFragments('kotlin.T': FqName@157) = null
    packageFragments('kotlin.Unit': FqName@158) = null
    packageFragments('kotlin._': FqName@159) = null
    packageFragments('kotlin.io': FqName@160) = null
    packageFragments('kotlin.jvm': FqName@161) = null
    packageFragments('tests': FqName@162) = null
    packageFragments('tests._checkType': FqName@163) = null
    packageFragments('tests._checkType.Array': FqName@164) = null
    packageFragments('tests._checkType.MutableList': FqName@165) = null
    packageFragments('tests._checkType.String': FqName@166) = null
    packageFragments('tests._checkType.T': FqName@167) = null
    packageFragments('tests._checkType.Unit': FqName@168) = null
    packageFragments('tests._checkType._': FqName@169) = null
    topLevelClasses(JavaClassImpl@40['AbstractCollection']) = LazyJavaClassDescriptor@2['AbstractCollection']
    topLevelClasses(JavaClassImpl@45['AbstractList']) = LazyJavaClassDescriptor@4['AbstractList']
    topLevelClasses(JavaClassImpl@170['ArrayList']) = LazyJavaClassDescriptor@6['ArrayList']
    topLevelClasses(JavaClassImpl@123['RandomAccess']) = LazyJavaClassDescriptor@14['RandomAccess']
    topLevelClasses(JavaClassImpl@127['Serializable']) = LazyJavaClassDescriptor@16['Serializable']
}

LazyJavaPackageFragment@131['<root>'] {
    classes('Array': Name@171) = null // through LazyPackageFragmentScopeForJavaPackage@172
    classes('ArrayList': Name@173) = null // through LazyPackageFragmentScopeForJavaPackage@172
    classes('MutableList': Name@174) = null // through LazyPackageFragmentScopeForJavaPackage@172
    classes('String': Name@175) = null // through LazyPackageFragmentScopeForJavaPackage@172
    classes('get': Name@176) = null // through LazyPackageFragmentScopeForJavaPackage@172
    classes('java': Name@177) = null // through LazyPackageFragmentScopeForJavaPackage@172
    classes('set': Name@178) = null // through LazyPackageFragmentScopeForJavaPackage@172
    classes('tests': Name@179) = null // through LazyPackageFragmentScopeForJavaPackage@172
    deserializedPackageScope = Empty@180 // through LazyPackageFragmentScopeForJavaPackage@172
    functions('ArrayList': Name@181) = EmptyList@182[empty] // through LazyPackageFragmentScopeForJavaPackage@172
    functions('get': Name@176) = EmptyList@182[empty] // through LazyPackageFragmentScopeForJavaPackage@172
    functions('java': Name@183) = EmptyList@182[empty] // through LazyPackageFragmentScopeForJavaPackage@172
    functions('set': Name@178) = EmptyList@182[empty] // through LazyPackageFragmentScopeForJavaPackage@172
    functions('tests': Name@184) = EmptyList@182[empty] // through LazyPackageFragmentScopeForJavaPackage@172
    memberIndex = computeMemberIndex$1@185 // through LazyPackageFragmentScopeForJavaPackage@172
}

LazyJavaPackageFragment@139['java'] {
    classes('lang': Name@186) = null // through LazyPackageFragmentScopeForJavaPackage@187
    classes('util': Name@188) = null // through LazyPackageFragmentScopeForJavaPackage@187
    deserializedPackageScope = Empty@180 // through LazyPackageFragmentScopeForJavaPackage@187
    functions('lang': Name@189) = EmptyList@182[empty] // through LazyPackageFragmentScopeForJavaPackage@187
    functions('util': Name@190) = EmptyList@182[empty] // through LazyPackageFragmentScopeForJavaPackage@187
    memberIndex = computeMemberIndex$1@191 // through LazyPackageFragmentScopeForJavaPackage@187
}

LazyJavaPackageFragment@143['lang'] {
    classes('ArrayList': Name@181) = null // through LazyPackageFragmentScopeForJavaPackage@192
    classes('get': Name@176) = null // through LazyPackageFragmentScopeForJavaPackage@192
    classes('set': Name@178) = null // through LazyPackageFragmentScopeForJavaPackage@192
    deserializedPackageScope = Empty@180 // through LazyPackageFragmentScopeForJavaPackage@192
    functions('ArrayList': Name@181) = EmptyList@182[empty] // through LazyPackageFragmentScopeForJavaPackage@192
    functions('get': Name@176) = EmptyList@182[empty] // through LazyPackageFragmentScopeForJavaPackage@192
    functions('set': Name@178) = EmptyList@182[empty] // through LazyPackageFragmentScopeForJavaPackage@192
    memberIndex = computeMemberIndex$1@193 // through LazyPackageFragmentScopeForJavaPackage@192
}

LazyJavaPackageFragment@151['util'] {
    classes('ArrayList': Name@194) = LazyJavaClassDescriptor@6['ArrayList'] // through LazyPackageFragmentScopeForJavaPackage@195
    deserializedPackageScope = Empty@180 // through LazyPackageFragmentScopeForJavaPackage@195
    functions('ArrayList': Name@196) = EmptyList@182[empty] // through LazyPackageFragmentScopeForJavaPackage@195
    memberIndex = computeMemberIndex$1@197 // through LazyPackageFragmentScopeForJavaPackage@195
}

LazyJavaTypeParameterDescriptor@28['E'] {
    defaultType = JetTypeImpl@198['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@79
    upperBounds = LinkedHashSet@199[1] { NullableType@200 }
}

LazyJavaTypeParameterDescriptor@19['E'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@71
}

LazyJavaTypeParameterDescriptor@23['E'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@75
}

LazyJavaTypeParameterResolver@201 {
    resolve(JavaTypeParameterImpl@202['E']) = LazyJavaTypeParameterDescriptor@19['E']
}

LazyJavaTypeParameterResolver@203 {
    resolve(JavaTypeParameterImpl@204['E']) = LazyJavaTypeParameterDescriptor@23['E']
}

LazyJavaTypeParameterResolver@205 {
    resolve(JavaTypeParameterImpl@206['E']) = LazyJavaTypeParameterDescriptor@28['E']
}
