LazyJavaClassDescriptor@0['JC'] {
    defaultType = JetTypeImpl@1['JC<1>']
    enumEntryIndex = LinkedHashMap@2 // through LazyJavaClassMemberScope@3
    functionTypeForSamInterface = null
    functions('getIterable': Name@4) = ArrayList@5[1] { JavaMethodDescriptor@6['getIterable'] } // through LazyJavaClassMemberScope@3
    functions('getIterator': Name@7) = ArrayList@8[1] { JavaMethodDescriptor@9['getIterator'] } // through LazyJavaClassMemberScope@3
    functions('setIterable': Name@10) = ArrayList@11[1] { JavaMethodDescriptor@12['setIterable'] } // through LazyJavaClassMemberScope@3
    functions('setIterator': Name@13) = ArrayList@14[1] { JavaMethodDescriptor@15['setIterator'] } // through LazyJavaClassMemberScope@3
    memberIndex = computeMemberIndex$1@16 // through LazyJavaClassMemberScope@3
    nestedClassIndex = LinkedHashMap@17 // through LazyJavaClassMemberScope@3
    nestedClasses('getIterable': Name@4) = null // through LazyJavaClassMemberScope@3
    nestedClasses('getIterator': Name@7) = null // through LazyJavaClassMemberScope@3
    nestedClasses('setIterable': Name@10) = null // through LazyJavaClassMemberScope@3
    nestedClasses('setIterator': Name@13) = null // through LazyJavaClassMemberScope@3
    properties('getIterable': Name@4) = EmptyList@18[empty] // through LazyJavaClassMemberScope@3
    properties('getIterator': Name@7) = EmptyList@18[empty] // through LazyJavaClassMemberScope@3
    properties('setIterable': Name@10) = EmptyList@18[empty] // through LazyJavaClassMemberScope@3
    properties('setIterator': Name@13) = EmptyList@18[empty] // through LazyJavaClassMemberScope@3
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@19['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@20['JC']
}

LazyJavaClassTypeConstructor@20['JC'] {
    parameters = ArrayList@21[1] { LazyJavaTypeParameterDescriptor@22['T'] }
    supertypes = ArrayList@23[1] { JetTypeImpl@24['Any'] }
}

LazyJavaClassifierType@25['Iterable<T>'] {
    arguments = ArrayList@26[1] { TypeProjectionImpl@27 }
    classifier = JavaClassImpl@28['Iterable']
    memberScope = SubstitutingScope@29
    nullable = 'false': Boolean@30
    typeConstructor = DeserializedClassTypeConstructor@31
}

LazyJavaClassifierType@32['Iterable<T>'] {
    arguments = ArrayList@33[1] { TypeProjectionImpl@34 }
    classifier = JavaClassImpl@35['Iterable']
    memberScope = SubstitutingScope@36
    nullable = 'false': Boolean@30
    typeConstructor = DeserializedClassTypeConstructor@31
}

LazyJavaClassifierType@37['Iterable<T>'] {
    arguments = ArrayList@38[1] { TypeProjectionImpl@39 }
    classifier = JavaClassImpl@35['Iterable']
    memberScope = SubstitutingScope@40
    nullable = 'true': Boolean@41
    typeConstructor = DeserializedClassTypeConstructor@42
}

LazyJavaClassifierType@43['Iterable<T>'] {
    arguments = ArrayList@44[1] { TypeProjectionImpl@45 }
    classifier = JavaClassImpl@28['Iterable']
    memberScope = SubstitutingScope@46
    nullable = 'true': Boolean@41
    typeConstructor = DeserializedClassTypeConstructor@42
}

LazyJavaClassifierType@47['Iterator<T>'] {
    arguments = ArrayList@48[1] { TypeProjectionImpl@49 }
    classifier = JavaClassImpl@50['Iterator']
    memberScope = SubstitutingScope@51
    nullable = 'false': Boolean@30
    typeConstructor = DeserializedClassTypeConstructor@52
}

LazyJavaClassifierType@53['Iterator<T>'] {
    arguments = ArrayList@54[1] { TypeProjectionImpl@55 }
    classifier = JavaClassImpl@56['Iterator']
    memberScope = SubstitutingScope@57
    nullable = 'false': Boolean@30
    typeConstructor = DeserializedClassTypeConstructor@52
}

LazyJavaClassifierType@58['Iterator<T>'] {
    arguments = ArrayList@59[1] { TypeProjectionImpl@60 }
    classifier = JavaClassImpl@56['Iterator']
    memberScope = SubstitutingScope@61
    nullable = 'true': Boolean@41
    typeConstructor = DeserializedClassTypeConstructor@62
}

LazyJavaClassifierType@63['Iterator<T>'] {
    arguments = ArrayList@64[1] { TypeProjectionImpl@65 }
    classifier = JavaClassImpl@50['Iterator']
    memberScope = SubstitutingScope@66
    nullable = 'true': Boolean@41
    typeConstructor = DeserializedClassTypeConstructor@62
}

LazyJavaClassifierType@67['Object'] {
    classifier = JavaClassImpl@68['Object']
    typeConstructor = DeserializedClassTypeConstructor@69
}

LazyJavaClassifierType@70['T'] {
    arguments = ArrayList@71[empty]
    classifier = JavaTypeParameterImpl@72['T']
    nullable = 'false': Boolean@30
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@73
}

LazyJavaClassifierType@74['T'] {
    arguments = ArrayList@75[empty]
    classifier = JavaTypeParameterImpl@76['T']
    nullable = 'false': Boolean@30
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@73
}

LazyJavaClassifierType@77['T'] {
    arguments = ArrayList@78[empty]
    classifier = JavaTypeParameterImpl@79['T']
    nullable = 'false': Boolean@30
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@73
}

LazyJavaClassifierType@80['T'] {
    arguments = ArrayList@81[empty]
    classifier = JavaTypeParameterImpl@82['T']
    nullable = 'false': Boolean@30
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@73
}

LazyJavaClassifierType@83['T'] {
    arguments = ArrayList@84[empty]
    classifier = JavaTypeParameterImpl@85['T']
    nullable = 'false': Boolean@30
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@73
}

LazyJavaClassifierType@86['T'] {
    arguments = ArrayList@87[empty]
    classifier = JavaTypeParameterImpl@88['T']
    nullable = 'false': Boolean@30
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@73
}

LazyJavaClassifierType@89['T'] {
    arguments = ArrayList@90[empty]
    classifier = JavaTypeParameterImpl@91['T']
    nullable = 'false': Boolean@30
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@73
}

LazyJavaClassifierType@92['T'] {
    arguments = ArrayList@93[empty]
    classifier = JavaTypeParameterImpl@94['T']
    nullable = 'false': Boolean@30
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@73
}

LazyJavaClassifierType@95['T'] {
    arguments = ArrayList@96[empty]
    classifier = JavaTypeParameterImpl@72['T']
    nullable = 'true': Boolean@41
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@73
}

LazyJavaClassifierType@97['T'] {
    arguments = ArrayList@98[empty]
    classifier = JavaTypeParameterImpl@82['T']
    nullable = 'true': Boolean@41
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@73
}

LazyJavaClassifierType@99['T'] {
    arguments = ArrayList@100[empty]
    classifier = JavaTypeParameterImpl@91['T']
    nullable = 'true': Boolean@41
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@73
}

LazyJavaClassifierType@101['T'] {
    arguments = ArrayList@102[empty]
    classifier = JavaTypeParameterImpl@94['T']
    nullable = 'true': Boolean@41
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@73
}

LazyJavaClassifierType@103['T'] {
    arguments = ArrayList@104[empty]
    classifier = JavaTypeParameterImpl@76['T']
    nullable = 'true': Boolean@41
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@73
}

LazyJavaClassifierType@105['T'] {
    arguments = ArrayList@106[empty]
    classifier = JavaTypeParameterImpl@88['T']
    nullable = 'true': Boolean@41
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@73
}

LazyJavaClassifierType@107['T'] {
    arguments = ArrayList@108[empty]
    classifier = JavaTypeParameterImpl@85['T']
    nullable = 'true': Boolean@41
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@73
}

LazyJavaClassifierType@109['T'] {
    arguments = ArrayList@110[empty]
    classifier = JavaTypeParameterImpl@79['T']
    nullable = 'true': Boolean@41
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@73
}

LazyJavaPackageFragmentProvider@111 {
    packageFragments('<root>': FqName@112) = LazyJavaPackageFragment@113['<root>']
    packageFragments('Int': FqName@114) = null
    packageFragments('Iterable': FqName@115) = null
    packageFragments('Iterator': FqName@116) = null
    packageFragments('JC': FqName@117) = null
    packageFragments('MutableIterable': FqName@118) = null
    packageFragments('MutableIterator': FqName@119) = null
    packageFragments('a': FqName@120) = LazyJavaPackageFragment@121['a']
    packageFragments('a.JC': FqName@122) = null
    packageFragments('java': FqName@123) = LazyJavaPackageFragment@124['java']
    packageFragments('java.lang': FqName@125) = LazyJavaPackageFragment@126['lang']
    packageFragments('java.lang.Int': FqName@127) = null
    packageFragments('java.lang.Iterable': FqName@128) = null
    packageFragments('java.lang.Iterator': FqName@129) = null
    packageFragments('java.lang.JC': FqName@130) = null
    packageFragments('java.lang.MutableIterable': FqName@131) = null
    packageFragments('java.lang.MutableIterator': FqName@132) = null
    packageFragments('kotlin': FqName@133) = null
    packageFragments('kotlin.Int': FqName@134) = null
    packageFragments('kotlin.Iterable': FqName@135) = null
    packageFragments('kotlin.Iterator': FqName@136) = null
    packageFragments('kotlin.JC': FqName@137) = null
    packageFragments('kotlin.MutableIterable': FqName@138) = null
    packageFragments('kotlin.MutableIterator': FqName@139) = null
    packageFragments('kotlin.io': FqName@140) = null
    packageFragments('kotlin.jvm': FqName@141) = null
    packageFragments('n': FqName@142) = null
    packageFragments('n.Int': FqName@143) = null
    packageFragments('n.Iterable': FqName@144) = null
    packageFragments('n.Iterator': FqName@145) = null
    packageFragments('n.JC': FqName@146) = null
    packageFragments('n.MutableIterable': FqName@147) = null
    packageFragments('n.MutableIterator': FqName@148) = null
    topLevelClasses(JavaClassImpl@149['JC']) = LazyJavaClassDescriptor@0['JC']
}

LazyJavaPackageFragment@121['a'] {
    classes('JC': Name@150) = LazyJavaClassDescriptor@0['JC'] // through LazyPackageFragmentScopeForJavaPackage@151
    deserializedPackageScope = Empty@152 // through LazyPackageFragmentScopeForJavaPackage@151
    functions('JC': Name@153) = EmptyList@18[empty] // through LazyPackageFragmentScopeForJavaPackage@151
    memberIndex = computeMemberIndex$1@154 // through LazyPackageFragmentScopeForJavaPackage@151
}

LazyJavaPackageFragment@124['java'] {
    classes('lang': Name@155) = null // through LazyPackageFragmentScopeForJavaPackage@156
    deserializedPackageScope = Empty@152 // through LazyPackageFragmentScopeForJavaPackage@156
    functions('lang': Name@157) = EmptyList@18[empty] // through LazyPackageFragmentScopeForJavaPackage@156
    memberIndex = computeMemberIndex$1@158 // through LazyPackageFragmentScopeForJavaPackage@156
}

LazyJavaPackageFragment@126['lang'] {
    classes('getIterable': Name@4) = null // through LazyPackageFragmentScopeForJavaPackage@159
    classes('getIterator': Name@7) = null // through LazyPackageFragmentScopeForJavaPackage@159
    classes('setIterable': Name@10) = null // through LazyPackageFragmentScopeForJavaPackage@159
    classes('setIterator': Name@13) = null // through LazyPackageFragmentScopeForJavaPackage@159
    deserializedPackageScope = Empty@152 // through LazyPackageFragmentScopeForJavaPackage@159
    functions('getIterable': Name@4) = EmptyList@18[empty] // through LazyPackageFragmentScopeForJavaPackage@159
    functions('getIterator': Name@7) = EmptyList@18[empty] // through LazyPackageFragmentScopeForJavaPackage@159
    functions('setIterable': Name@10) = EmptyList@18[empty] // through LazyPackageFragmentScopeForJavaPackage@159
    functions('setIterator': Name@13) = EmptyList@18[empty] // through LazyPackageFragmentScopeForJavaPackage@159
    memberIndex = computeMemberIndex$1@160 // through LazyPackageFragmentScopeForJavaPackage@159
}

LazyJavaTypeParameterDescriptor@22['T'] {
    defaultType = JetTypeImpl@161['T']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@73
    upperBounds = LinkedHashSet@162[1] { NullableType@163 }
}

LazyJavaTypeParameterResolver@164 {
    resolve(JavaTypeParameterImpl@165['T']) = LazyJavaTypeParameterDescriptor@22['T']
}

LazyJavaTypeParameterResolver@166 {
    resolve(JavaTypeParameterImpl@79['T']) = null
}

LazyJavaTypeParameterResolver@167 {
    resolve(JavaTypeParameterImpl@82['T']) = null
}

LazyJavaTypeParameterResolver@168 {
    resolve(JavaTypeParameterImpl@88['T']) = null
}

LazyJavaTypeParameterResolver@169 {
    resolve(JavaTypeParameterImpl@76['T']) = null
}
