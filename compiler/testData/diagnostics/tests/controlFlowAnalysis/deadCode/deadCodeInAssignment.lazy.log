DescriptorResolver@0 {
    <name not found> = JetTypeImpl@1['Nothing']
}

LazyJavaClassDescriptor@2['Exception'] {
    constructors = ArrayList@3[5] { JavaConstructorDescriptor@4['<init>'], JavaConstructorDescriptor@5['<init>'], JavaConstructorDescriptor@6['<init>'], ... } // through LazyJavaClassMemberScope@7
    defaultType = JetTypeImpl@8['Exception']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@9['Exception']
}

LazyJavaClassTypeConstructor@9['Exception'] {
    parameters = ArrayList@10[empty]
    supertypes = ArrayList@11[1] { LazyJavaClassifierType@12['Throwable'] }
}

LazyJavaClassifierType@13['String'] {
    arguments = ArrayList@14[empty]
    classifier = JavaClassImpl@15['String']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@18['String'] {
    arguments = ArrayList@19[empty]
    classifier = JavaClassImpl@20['String']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@21['String'] {
    arguments = ArrayList@22[empty]
    classifier = JavaClassImpl@23['String']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@24['String'] {
    arguments = ArrayList@25[empty]
    classifier = JavaClassImpl@20['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@27['String'] {
    arguments = ArrayList@28[empty]
    classifier = JavaClassImpl@23['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@29['String'] {
    arguments = ArrayList@30[empty]
    classifier = JavaClassImpl@15['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@31['Throwable'] {
    arguments = ArrayList@32[empty]
    classifier = JavaClassImpl@33['Throwable']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@35['Throwable'] {
    arguments = ArrayList@36[empty]
    classifier = JavaClassImpl@37['Throwable']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@38['Throwable'] {
    arguments = ArrayList@39[empty]
    classifier = JavaClassImpl@40['Throwable']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@41['Throwable'] {
    arguments = ArrayList@42[empty]
    classifier = JavaClassImpl@33['Throwable']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@43['Throwable'] {
    arguments = ArrayList@44[empty]
    classifier = JavaClassImpl@40['Throwable']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@45['Throwable'] {
    arguments = ArrayList@46[empty]
    classifier = JavaClassImpl@37['Throwable']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@12['Throwable'] {
    arguments = ArrayList@47[empty]
    classifier = JavaClassImpl@48['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaPackageFragmentProvider@49 {
    packageFragments('<root>': FqName@50) = LazyJavaPackageFragment@51['<root>']
    packageFragments('Int': FqName@52) = null
    packageFragments('java': FqName@53) = LazyJavaPackageFragment@54['java']
    packageFragments('java.lang': FqName@55) = LazyJavaPackageFragment@56['lang']
    packageFragments('java.lang.Int': FqName@57) = null
    packageFragments('kotlin': FqName@58) = null
    packageFragments('kotlin.Int': FqName@59) = null
    packageFragments('kotlin.io': FqName@60) = null
    packageFragments('kotlin.jvm': FqName@61) = null
    topLevelClasses(JavaClassImpl@62['Exception']) = LazyJavaClassDescriptor@2['Exception']
}

LazyJavaPackageFragment@51['<root>'] {
    classes('Exception': Name@63) = null // through LazyPackageFragmentScopeForJavaPackage@64
    classes('Int': Name@65) = null // through LazyPackageFragmentScopeForJavaPackage@64
    classes('plus': Name@66) = null // through LazyPackageFragmentScopeForJavaPackage@64
    classes('plusAssign': Name@67) = null // through LazyPackageFragmentScopeForJavaPackage@64
    classes('todo': Name@68) = null // through LazyPackageFragmentScopeForJavaPackage@64
    deserializedPackageScope = Empty@69 // through LazyPackageFragmentScopeForJavaPackage@64
    functions('Exception': Name@63) = EmptyList@70[empty] // through LazyPackageFragmentScopeForJavaPackage@64
    functions('plus': Name@66) = EmptyList@70[empty] // through LazyPackageFragmentScopeForJavaPackage@64
    functions('plusAssign': Name@67) = EmptyList@70[empty] // through LazyPackageFragmentScopeForJavaPackage@64
    functions('todo': Name@68) = EmptyList@70[empty] // through LazyPackageFragmentScopeForJavaPackage@64
    memberIndex = computeMemberIndex$1@71 // through LazyPackageFragmentScopeForJavaPackage@64
}

LazyJavaPackageFragment@54['java'] {
    classes('lang': Name@72) = null // through LazyPackageFragmentScopeForJavaPackage@73
    deserializedPackageScope = Empty@69 // through LazyPackageFragmentScopeForJavaPackage@73
    functions('lang': Name@74) = EmptyList@70[empty] // through LazyPackageFragmentScopeForJavaPackage@73
    memberIndex = computeMemberIndex$1@75 // through LazyPackageFragmentScopeForJavaPackage@73
}

LazyJavaPackageFragment@56['lang'] {
    classes('Exception': Name@63) = LazyJavaClassDescriptor@2['Exception'] // through LazyPackageFragmentScopeForJavaPackage@76
    classes('plus': Name@66) = null // through LazyPackageFragmentScopeForJavaPackage@76
    classes('plusAssign': Name@67) = null // through LazyPackageFragmentScopeForJavaPackage@76
    classes('todo': Name@68) = null // through LazyPackageFragmentScopeForJavaPackage@76
    deserializedPackageScope = Empty@69 // through LazyPackageFragmentScopeForJavaPackage@76
    functions('Exception': Name@63) = EmptyList@70[empty] // through LazyPackageFragmentScopeForJavaPackage@76
    functions('plus': Name@66) = EmptyList@70[empty] // through LazyPackageFragmentScopeForJavaPackage@76
    functions('plusAssign': Name@67) = EmptyList@70[empty] // through LazyPackageFragmentScopeForJavaPackage@76
    functions('todo': Name@68) = EmptyList@70[empty] // through LazyPackageFragmentScopeForJavaPackage@76
    memberIndex = computeMemberIndex$1@77 // through LazyPackageFragmentScopeForJavaPackage@76
}
