DescriptorResolver@0 {
    <name not found> = JetTypeImpl@1['Array<1>']
    <name not found> = JetTypeImpl@2['Function1<2>']
    <name not found> = null
    <name not found> = null
    <name not found> = null
    <name not found> = null
}

LazyJavaClassDescriptor@3['Exception'] {
    constructors = ArrayList@4[5] { JavaConstructorDescriptor@5['<init>'], JavaConstructorDescriptor@6['<init>'], JavaConstructorDescriptor@7['<init>'], ... } // through LazyJavaClassMemberScope@8
    defaultType = JetTypeImpl@9['Exception']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@10['Exception']
}

LazyJavaClassTypeConstructor@10['Exception'] {
    parameters = ArrayList@11[empty]
    supertypes = ArrayList@12[1] { LazyJavaClassifierType@13['Throwable'] }
}

LazyJavaClassifierType@14['String'] {
    arguments = ArrayList@15[empty]
    classifier = JavaClassImpl@16['String']
    nullable = 'false': Boolean@17
    typeConstructor = DeserializedClassTypeConstructor@18
}

LazyJavaClassifierType@19['String'] {
    arguments = ArrayList@20[empty]
    classifier = JavaClassImpl@21['String']
    nullable = 'false': Boolean@17
    typeConstructor = DeserializedClassTypeConstructor@18
}

LazyJavaClassifierType@22['String'] {
    arguments = ArrayList@23[empty]
    classifier = JavaClassImpl@24['String']
    nullable = 'false': Boolean@17
    typeConstructor = DeserializedClassTypeConstructor@18
}

LazyJavaClassifierType@25['String'] {
    arguments = ArrayList@26[empty]
    classifier = JavaClassImpl@16['String']
    nullable = 'true': Boolean@27
    typeConstructor = DeserializedClassTypeConstructor@18
}

LazyJavaClassifierType@28['String'] {
    arguments = ArrayList@29[empty]
    classifier = JavaClassImpl@21['String']
    nullable = 'true': Boolean@27
    typeConstructor = DeserializedClassTypeConstructor@18
}

LazyJavaClassifierType@30['String'] {
    arguments = ArrayList@31[empty]
    classifier = JavaClassImpl@24['String']
    nullable = 'true': Boolean@27
    typeConstructor = DeserializedClassTypeConstructor@18
}

LazyJavaClassifierType@32['Throwable'] {
    arguments = ArrayList@33[empty]
    classifier = JavaClassImpl@34['Throwable']
    nullable = 'false': Boolean@17
    typeConstructor = DeserializedClassTypeConstructor@35
}

LazyJavaClassifierType@36['Throwable'] {
    arguments = ArrayList@37[empty]
    classifier = JavaClassImpl@38['Throwable']
    nullable = 'false': Boolean@17
    typeConstructor = DeserializedClassTypeConstructor@35
}

LazyJavaClassifierType@39['Throwable'] {
    arguments = ArrayList@40[empty]
    classifier = JavaClassImpl@41['Throwable']
    nullable = 'false': Boolean@17
    typeConstructor = DeserializedClassTypeConstructor@35
}

LazyJavaClassifierType@42['Throwable'] {
    arguments = ArrayList@43[empty]
    classifier = JavaClassImpl@41['Throwable']
    nullable = 'true': Boolean@27
    typeConstructor = DeserializedClassTypeConstructor@35
}

LazyJavaClassifierType@44['Throwable'] {
    arguments = ArrayList@45[empty]
    classifier = JavaClassImpl@38['Throwable']
    nullable = 'true': Boolean@27
    typeConstructor = DeserializedClassTypeConstructor@35
}

LazyJavaClassifierType@46['Throwable'] {
    arguments = ArrayList@47[empty]
    classifier = JavaClassImpl@34['Throwable']
    nullable = 'true': Boolean@27
    typeConstructor = DeserializedClassTypeConstructor@35
}

LazyJavaClassifierType@13['Throwable'] {
    arguments = ArrayList@48[empty]
    classifier = JavaClassImpl@49['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@35
}

LazyJavaPackageFragmentProvider@50 {
    packageFragments('<root>': FqName@51) = LazyJavaPackageFragment@52['<root>']
    packageFragments('Any': FqName@53) = null
    packageFragments('Byte': FqName@54) = null
    packageFragments('Comparable': FqName@55) = null
    packageFragments('Contr': FqName@56) = null
    packageFragments('Cov': FqName@57) = null
    packageFragments('Int': FqName@58) = null
    packageFragments('Inv': FqName@59) = null
    packageFragments('List': FqName@60) = null
    packageFragments('Long': FqName@61) = null
    packageFragments('Number': FqName@62) = null
    packageFragments('String': FqName@63) = null
    packageFragments('T': FqName@64) = null
    packageFragments('Unit': FqName@65) = null
    packageFragments('_': FqName@66) = null
    packageFragments('a': FqName@67) = null
    packageFragments('a.Any': FqName@68) = null
    packageFragments('a.Byte': FqName@69) = null
    packageFragments('a.Comparable': FqName@70) = null
    packageFragments('a.Contr': FqName@71) = null
    packageFragments('a.Cov': FqName@72) = null
    packageFragments('a.Int': FqName@73) = null
    packageFragments('a.Inv': FqName@74) = null
    packageFragments('a.List': FqName@75) = null
    packageFragments('a.Long': FqName@76) = null
    packageFragments('a.Number': FqName@77) = null
    packageFragments('a.String': FqName@78) = null
    packageFragments('a.T': FqName@79) = null
    packageFragments('a._': FqName@80) = null
    packageFragments('java': FqName@81) = LazyJavaPackageFragment@82['java']
    packageFragments('java.lang': FqName@83) = LazyJavaPackageFragment@84['lang']
    packageFragments('java.lang.Any': FqName@85) = null
    packageFragments('java.lang.Byte': FqName@86) = null
    packageFragments('java.lang.Comparable': FqName@87) = null
    packageFragments('java.lang.Contr': FqName@88) = null
    packageFragments('java.lang.Cov': FqName@89) = null
    packageFragments('java.lang.Int': FqName@90) = null
    packageFragments('java.lang.Inv': FqName@91) = null
    packageFragments('java.lang.List': FqName@92) = null
    packageFragments('java.lang.Long': FqName@93) = null
    packageFragments('java.lang.Number': FqName@94) = null
    packageFragments('java.lang.String': FqName@95) = null
    packageFragments('java.lang.T': FqName@96) = null
    packageFragments('java.lang.Unit': FqName@97) = null
    packageFragments('java.lang._': FqName@98) = null
    packageFragments('kotlin': FqName@99) = null
    packageFragments('kotlin.Any': FqName@100) = null
    packageFragments('kotlin.Byte': FqName@101) = null
    packageFragments('kotlin.Comparable': FqName@102) = null
    packageFragments('kotlin.Contr': FqName@103) = null
    packageFragments('kotlin.Cov': FqName@104) = null
    packageFragments('kotlin.Int': FqName@105) = null
    packageFragments('kotlin.Inv': FqName@106) = null
    packageFragments('kotlin.List': FqName@107) = null
    packageFragments('kotlin.Long': FqName@108) = null
    packageFragments('kotlin.Number': FqName@109) = null
    packageFragments('kotlin.String': FqName@110) = null
    packageFragments('kotlin.T': FqName@111) = null
    packageFragments('kotlin.Unit': FqName@112) = null
    packageFragments('kotlin._': FqName@113) = null
    packageFragments('kotlin.io': FqName@114) = null
    packageFragments('kotlin.jvm': FqName@115) = null
    packageFragments('tests': FqName@116) = null
    packageFragments('tests._checkType': FqName@117) = null
    packageFragments('tests._checkType.Any': FqName@118) = null
    packageFragments('tests._checkType.Byte': FqName@119) = null
    packageFragments('tests._checkType.Comparable': FqName@120) = null
    packageFragments('tests._checkType.Contr': FqName@121) = null
    packageFragments('tests._checkType.Cov': FqName@122) = null
    packageFragments('tests._checkType.Int': FqName@123) = null
    packageFragments('tests._checkType.Inv': FqName@124) = null
    packageFragments('tests._checkType.List': FqName@125) = null
    packageFragments('tests._checkType.Long': FqName@126) = null
    packageFragments('tests._checkType.Number': FqName@127) = null
    packageFragments('tests._checkType.String': FqName@128) = null
    packageFragments('tests._checkType.T': FqName@129) = null
    packageFragments('tests._checkType.Unit': FqName@130) = null
    packageFragments('tests._checkType._': FqName@131) = null
    topLevelClasses(JavaClassImpl@132['Exception']) = LazyJavaClassDescriptor@3['Exception']
}

LazyJavaPackageFragment@82['java'] {
    classes('lang': Name@133) = null // through LazyPackageFragmentScopeForJavaPackage@134
    deserializedPackageScope = Empty@135 // through LazyPackageFragmentScopeForJavaPackage@134
    functions('lang': Name@136) = EmptyList@137[empty] // through LazyPackageFragmentScopeForJavaPackage@134
    memberIndex = computeMemberIndex$1@138 // through LazyPackageFragmentScopeForJavaPackage@134
}

LazyJavaPackageFragment@84['lang'] {
    classes('Exception': Name@139) = LazyJavaClassDescriptor@3['Exception'] // through LazyPackageFragmentScopeForJavaPackage@140
    classes('checkType': Name@141) = null // through LazyPackageFragmentScopeForJavaPackage@140
    classes('either': Name@142) = null // through LazyPackageFragmentScopeForJavaPackage@140
    classes('exactBound': Name@143) = null // through LazyPackageFragmentScopeForJavaPackage@140
    classes('id': Name@144) = null // through LazyPackageFragmentScopeForJavaPackage@140
    classes('lowerBound': Name@145) = null // through LazyPackageFragmentScopeForJavaPackage@140
    classes('other': Name@146) = null // through LazyPackageFragmentScopeForJavaPackage@140
    classes('otherGeneric': Name@147) = null // through LazyPackageFragmentScopeForJavaPackage@140
    classes('upperBound': Name@148) = null // through LazyPackageFragmentScopeForJavaPackage@140
    classes('use': Name@149) = null // through LazyPackageFragmentScopeForJavaPackage@140
    deserializedPackageScope = Empty@135 // through LazyPackageFragmentScopeForJavaPackage@140
    functions('Exception': Name@139) = EmptyList@137[empty] // through LazyPackageFragmentScopeForJavaPackage@140
    functions('checkType': Name@141) = EmptyList@137[empty] // through LazyPackageFragmentScopeForJavaPackage@140
    functions('either': Name@142) = EmptyList@137[empty] // through LazyPackageFragmentScopeForJavaPackage@140
    functions('exactBound': Name@143) = EmptyList@137[empty] // through LazyPackageFragmentScopeForJavaPackage@140
    functions('id': Name@144) = EmptyList@137[empty] // through LazyPackageFragmentScopeForJavaPackage@140
    functions('lowerBound': Name@145) = EmptyList@137[empty] // through LazyPackageFragmentScopeForJavaPackage@140
    functions('other': Name@146) = EmptyList@137[empty] // through LazyPackageFragmentScopeForJavaPackage@140
    functions('otherGeneric': Name@147) = EmptyList@137[empty] // through LazyPackageFragmentScopeForJavaPackage@140
    functions('upperBound': Name@148) = EmptyList@137[empty] // through LazyPackageFragmentScopeForJavaPackage@140
    functions('use': Name@149) = EmptyList@137[empty] // through LazyPackageFragmentScopeForJavaPackage@140
    memberIndex = computeMemberIndex$1@150 // through LazyPackageFragmentScopeForJavaPackage@140
}
