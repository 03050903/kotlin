DescriptorResolver@0 {
    <name not found> = DeserializedType@1['kotlin.IntIterator']
    <name not found> = JetTypeImpl@2['Nothing']
}

LazyJavaClassDescriptor@3['Exception'] {
    constructors = ArrayList@4[5] { JavaConstructorDescriptor@5['<init>'], JavaConstructorDescriptor@6['<init>'], JavaConstructorDescriptor@7['<init>'], ... } // through LazyJavaClassMemberScope@8
    defaultType = JetTypeImpl@9['Exception']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@10['Exception']
}

LazyJavaClassTypeConstructor@10['Exception'] {
    parameters = ArrayList@11[empty]
    supertypes = ArrayList@12[1] { LazyJavaClassifierType@13['Throwable'] }
}

LazyJavaClassifierType@14['String'] {
    arguments = ArrayList@15[empty]
    classifier = JavaClassImpl@16['String']
    nullable = 'false': Boolean@17
    typeConstructor = DeserializedClassTypeConstructor@18
}

LazyJavaClassifierType@19['String'] {
    arguments = ArrayList@20[empty]
    classifier = JavaClassImpl@21['String']
    nullable = 'false': Boolean@17
    typeConstructor = DeserializedClassTypeConstructor@18
}

LazyJavaClassifierType@22['String'] {
    arguments = ArrayList@23[empty]
    classifier = JavaClassImpl@24['String']
    nullable = 'false': Boolean@17
    typeConstructor = DeserializedClassTypeConstructor@18
}

LazyJavaClassifierType@25['String'] {
    arguments = ArrayList@26[empty]
    classifier = JavaClassImpl@16['String']
    nullable = 'true': Boolean@27
    typeConstructor = DeserializedClassTypeConstructor@18
}

LazyJavaClassifierType@28['String'] {
    arguments = ArrayList@29[empty]
    classifier = JavaClassImpl@24['String']
    nullable = 'true': Boolean@27
    typeConstructor = DeserializedClassTypeConstructor@18
}

LazyJavaClassifierType@30['String'] {
    arguments = ArrayList@31[empty]
    classifier = JavaClassImpl@21['String']
    nullable = 'true': Boolean@27
    typeConstructor = DeserializedClassTypeConstructor@18
}

LazyJavaClassifierType@32['Throwable'] {
    arguments = ArrayList@33[empty]
    classifier = JavaClassImpl@34['Throwable']
    nullable = 'false': Boolean@17
    typeConstructor = DeserializedClassTypeConstructor@35
}

LazyJavaClassifierType@36['Throwable'] {
    arguments = ArrayList@37[empty]
    classifier = JavaClassImpl@38['Throwable']
    nullable = 'false': Boolean@17
    typeConstructor = DeserializedClassTypeConstructor@35
}

LazyJavaClassifierType@39['Throwable'] {
    arguments = ArrayList@40[empty]
    classifier = JavaClassImpl@41['Throwable']
    nullable = 'false': Boolean@17
    typeConstructor = DeserializedClassTypeConstructor@35
}

LazyJavaClassifierType@42['Throwable'] {
    arguments = ArrayList@43[empty]
    classifier = JavaClassImpl@41['Throwable']
    nullable = 'true': Boolean@27
    typeConstructor = DeserializedClassTypeConstructor@35
}

LazyJavaClassifierType@44['Throwable'] {
    arguments = ArrayList@45[empty]
    classifier = JavaClassImpl@38['Throwable']
    nullable = 'true': Boolean@27
    typeConstructor = DeserializedClassTypeConstructor@35
}

LazyJavaClassifierType@46['Throwable'] {
    arguments = ArrayList@47[empty]
    classifier = JavaClassImpl@34['Throwable']
    nullable = 'true': Boolean@27
    typeConstructor = DeserializedClassTypeConstructor@35
}

LazyJavaClassifierType@13['Throwable'] {
    arguments = ArrayList@48[empty]
    classifier = JavaClassImpl@49['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@35
}

LazyJavaPackageFragmentProvider@50 {
    packageFragments('<root>': FqName@51) = LazyJavaPackageFragment@52['<root>']
    packageFragments('Nothing': FqName@53) = null
    packageFragments('java': FqName@54) = LazyJavaPackageFragment@55['java']
    packageFragments('java.lang': FqName@56) = LazyJavaPackageFragment@57['lang']
    packageFragments('java.lang.Nothing': FqName@58) = null
    packageFragments('kotlin': FqName@59) = null
    packageFragments('kotlin.Nothing': FqName@60) = null
    packageFragments('kotlin.io': FqName@61) = null
    packageFragments('kotlin.jvm': FqName@62) = null
    topLevelClasses(JavaClassImpl@63['Exception']) = LazyJavaClassDescriptor@3['Exception']
}

LazyJavaPackageFragment@52['<root>'] {
    classes('Exception': Name@64) = null // through LazyPackageFragmentScopeForJavaPackage@65
    classes('Nothing': Name@66) = null // through LazyPackageFragmentScopeForJavaPackage@65
    classes('bar': Name@67) = null // through LazyPackageFragmentScopeForJavaPackage@65
    classes('hasNext': Name@68) = null // through LazyPackageFragmentScopeForJavaPackage@65
    classes('iterator': Name@69) = null // through LazyPackageFragmentScopeForJavaPackage@65
    classes('next': Name@70) = null // through LazyPackageFragmentScopeForJavaPackage@65
    classes('rangeTo': Name@71) = null // through LazyPackageFragmentScopeForJavaPackage@65
    classes('todo': Name@72) = null // through LazyPackageFragmentScopeForJavaPackage@65
    deserializedPackageScope = Empty@73 // through LazyPackageFragmentScopeForJavaPackage@65
    functions('Exception': Name@64) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@65
    functions('bar': Name@67) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@65
    functions('hasNext': Name@68) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@65
    functions('iterator': Name@69) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@65
    functions('next': Name@70) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@65
    functions('rangeTo': Name@71) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@65
    functions('todo': Name@72) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@65
    memberIndex = computeMemberIndex$1@75 // through LazyPackageFragmentScopeForJavaPackage@65
}

LazyJavaPackageFragment@55['java'] {
    classes('lang': Name@76) = null // through LazyPackageFragmentScopeForJavaPackage@77
    deserializedPackageScope = Empty@73 // through LazyPackageFragmentScopeForJavaPackage@77
    functions('lang': Name@78) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@77
    memberIndex = computeMemberIndex$1@79 // through LazyPackageFragmentScopeForJavaPackage@77
}

LazyJavaPackageFragment@57['lang'] {
    classes('Exception': Name@64) = LazyJavaClassDescriptor@3['Exception'] // through LazyPackageFragmentScopeForJavaPackage@80
    classes('bar': Name@67) = null // through LazyPackageFragmentScopeForJavaPackage@80
    classes('hasNext': Name@68) = null // through LazyPackageFragmentScopeForJavaPackage@80
    classes('iterator': Name@69) = null // through LazyPackageFragmentScopeForJavaPackage@80
    classes('next': Name@70) = null // through LazyPackageFragmentScopeForJavaPackage@80
    classes('rangeTo': Name@71) = null // through LazyPackageFragmentScopeForJavaPackage@80
    classes('todo': Name@72) = null // through LazyPackageFragmentScopeForJavaPackage@80
    deserializedPackageScope = Empty@73 // through LazyPackageFragmentScopeForJavaPackage@80
    functions('Exception': Name@64) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@80
    functions('bar': Name@67) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@80
    functions('hasNext': Name@68) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@80
    functions('iterator': Name@69) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@80
    functions('next': Name@70) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@80
    functions('rangeTo': Name@71) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@80
    functions('todo': Name@72) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@80
    memberIndex = computeMemberIndex$1@81 // through LazyPackageFragmentScopeForJavaPackage@80
}
