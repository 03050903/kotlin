DescriptorResolver@0 {
    <name not found> = CharValue@1
    <name not found> = ErrorTypeImpl@2
    <name not found> = JetTypeImpl@3['Int']
    <name not found> = JetTypeImpl@3['Int']
    <name not found> = JetTypeImpl@4['String']
}

LazyJavaClassDescriptor@5['Exception'] {
    constructors = ArrayList@6[5] { JavaConstructorDescriptor@7['<init>'], JavaConstructorDescriptor@8['<init>'], JavaConstructorDescriptor@9['<init>'], ... } // through LazyJavaClassMemberScope@10
    defaultType = JetTypeImpl@11['Exception']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@12['Exception']
}

LazyJavaClassDescriptor@13['StringBuilder'] {
    typeConstructor = LazyJavaClassTypeConstructor@14['StringBuilder']
}

LazyJavaClassTypeConstructor@12['Exception'] {
    parameters = ArrayList@15[empty]
    supertypes = ArrayList@16[1] { LazyJavaClassifierType@17['Throwable'] }
}

LazyJavaClassTypeConstructor@14['StringBuilder'] {
    parameters = ArrayList@18[empty]
}

LazyJavaClassifierType@19['String'] {
    arguments = ArrayList@20[empty]
    classifier = JavaClassImpl@21['String']
    nullable = 'false': Boolean@22
    typeConstructor = DeserializedClassTypeConstructor@23
}

LazyJavaClassifierType@24['String'] {
    arguments = ArrayList@25[empty]
    classifier = JavaClassImpl@26['String']
    nullable = 'false': Boolean@22
    typeConstructor = DeserializedClassTypeConstructor@23
}

LazyJavaClassifierType@27['String'] {
    arguments = ArrayList@28[empty]
    classifier = JavaClassImpl@29['String']
    nullable = 'false': Boolean@22
    typeConstructor = DeserializedClassTypeConstructor@23
}

LazyJavaClassifierType@30['String'] {
    arguments = ArrayList@31[empty]
    classifier = JavaClassImpl@29['String']
    nullable = 'true': Boolean@32
    typeConstructor = DeserializedClassTypeConstructor@23
}

LazyJavaClassifierType@33['String'] {
    arguments = ArrayList@34[empty]
    classifier = JavaClassImpl@21['String']
    nullable = 'true': Boolean@32
    typeConstructor = DeserializedClassTypeConstructor@23
}

LazyJavaClassifierType@35['String'] {
    arguments = ArrayList@36[empty]
    classifier = JavaClassImpl@26['String']
    nullable = 'true': Boolean@32
    typeConstructor = DeserializedClassTypeConstructor@23
}

LazyJavaClassifierType@37['Throwable'] {
    arguments = ArrayList@38[empty]
    classifier = JavaClassImpl@39['Throwable']
    nullable = 'false': Boolean@22
    typeConstructor = DeserializedClassTypeConstructor@40
}

LazyJavaClassifierType@41['Throwable'] {
    arguments = ArrayList@42[empty]
    classifier = JavaClassImpl@43['Throwable']
    nullable = 'false': Boolean@22
    typeConstructor = DeserializedClassTypeConstructor@40
}

LazyJavaClassifierType@44['Throwable'] {
    arguments = ArrayList@45[empty]
    classifier = JavaClassImpl@46['Throwable']
    nullable = 'false': Boolean@22
    typeConstructor = DeserializedClassTypeConstructor@40
}

LazyJavaClassifierType@47['Throwable'] {
    arguments = ArrayList@48[empty]
    classifier = JavaClassImpl@46['Throwable']
    nullable = 'true': Boolean@32
    typeConstructor = DeserializedClassTypeConstructor@40
}

LazyJavaClassifierType@49['Throwable'] {
    arguments = ArrayList@50[empty]
    classifier = JavaClassImpl@39['Throwable']
    nullable = 'true': Boolean@32
    typeConstructor = DeserializedClassTypeConstructor@40
}

LazyJavaClassifierType@51['Throwable'] {
    arguments = ArrayList@52[empty]
    classifier = JavaClassImpl@43['Throwable']
    nullable = 'true': Boolean@32
    typeConstructor = DeserializedClassTypeConstructor@40
}

LazyJavaClassifierType@17['Throwable'] {
    arguments = ArrayList@53[empty]
    classifier = JavaClassImpl@54['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@40
}

LazyJavaPackageFragmentProvider@55 {
    packageFragments('<root>': FqName@56) = LazyJavaPackageFragment@57['<root>']
    packageFragments('A': FqName@58) = null
    packageFragments('Any': FqName@59) = null
    packageFragments('B': FqName@60) = null
    packageFragments('Boolean': FqName@61) = null
    packageFragments('Char': FqName@62) = null
    packageFragments('Int': FqName@63) = null
    packageFragments('Nothing': FqName@64) = null
    packageFragments('String': FqName@65) = null
    packageFragments('StringBuilder': FqName@66) = null
    packageFragments('Unit': FqName@67) = null
    packageFragments('a': FqName@68) = null
    packageFragments('java': FqName@69) = LazyJavaPackageFragment@70['java']
    packageFragments('java.lang': FqName@71) = LazyJavaPackageFragment@72['lang']
    packageFragments('java.lang.Any': FqName@73) = null
    packageFragments('java.lang.Boolean': FqName@74) = null
    packageFragments('java.lang.Char': FqName@75) = null
    packageFragments('java.lang.Int': FqName@76) = null
    packageFragments('java.lang.Nothing': FqName@77) = null
    packageFragments('java.lang.String': FqName@78) = null
    packageFragments('java.lang.StringBuilder': FqName@79) = null
    packageFragments('java.lang.Unit': FqName@80) = null
    packageFragments('kotlin': FqName@81) = null
    packageFragments('kotlin.Any': FqName@82) = null
    packageFragments('kotlin.Boolean': FqName@83) = null
    packageFragments('kotlin.Char': FqName@84) = null
    packageFragments('kotlin.Int': FqName@85) = null
    packageFragments('kotlin.Nothing': FqName@86) = null
    packageFragments('kotlin.String': FqName@87) = null
    packageFragments('kotlin.StringBuilder': FqName@88) = null
    packageFragments('kotlin.Unit': FqName@89) = null
    packageFragments('kotlin.io': FqName@90) = null
    packageFragments('kotlin.jvm': FqName@91) = null
    topLevelClasses(JavaClassImpl@92['Exception']) = LazyJavaClassDescriptor@5['Exception']
    topLevelClasses(JavaClassImpl@93['StringBuilder']) = LazyJavaClassDescriptor@13['StringBuilder']
}

LazyJavaPackageFragment@57['<root>'] {
    classes('Any': Name@94) = null // through LazyPackageFragmentScopeForJavaPackage@95
    classes('Boolean': Name@96) = null // through LazyPackageFragmentScopeForJavaPackage@95
    classes('Char': Name@97) = null // through LazyPackageFragmentScopeForJavaPackage@95
    classes('Exception': Name@98) = null // through LazyPackageFragmentScopeForJavaPackage@95
    classes('Int': Name@99) = null // through LazyPackageFragmentScopeForJavaPackage@95
    classes('Nothing': Name@100) = null // through LazyPackageFragmentScopeForJavaPackage@95
    classes('String': Name@101) = null // through LazyPackageFragmentScopeForJavaPackage@95
    classes('StringBuilder': Name@102) = null // through LazyPackageFragmentScopeForJavaPackage@95
    classes('Unit': Name@103) = null // through LazyPackageFragmentScopeForJavaPackage@95
    classes('compareTo': Name@104) = null // through LazyPackageFragmentScopeForJavaPackage@95
    classes('plus': Name@105) = null // through LazyPackageFragmentScopeForJavaPackage@95
    classes('plusAssign': Name@106) = null // through LazyPackageFragmentScopeForJavaPackage@95
    classes('returnNothing': Name@107) = null // through LazyPackageFragmentScopeForJavaPackage@95
    classes('toChar': Name@108) = null // through LazyPackageFragmentScopeForJavaPackage@95
    deserializedPackageScope = Empty@109 // through LazyPackageFragmentScopeForJavaPackage@95
    functions('Exception': Name@98) = EmptyList@110[empty] // through LazyPackageFragmentScopeForJavaPackage@95
    functions('compareTo': Name@104) = EmptyList@110[empty] // through LazyPackageFragmentScopeForJavaPackage@95
    functions('plus': Name@105) = EmptyList@110[empty] // through LazyPackageFragmentScopeForJavaPackage@95
    functions('plusAssign': Name@106) = EmptyList@110[empty] // through LazyPackageFragmentScopeForJavaPackage@95
    functions('returnNothing': Name@107) = EmptyList@110[empty] // through LazyPackageFragmentScopeForJavaPackage@95
    functions('toChar': Name@108) = EmptyList@110[empty] // through LazyPackageFragmentScopeForJavaPackage@95
    memberIndex = computeMemberIndex$1@111 // through LazyPackageFragmentScopeForJavaPackage@95
}

LazyJavaPackageFragment@70['java'] {
    classes('lang': Name@112) = null // through LazyPackageFragmentScopeForJavaPackage@113
    deserializedPackageScope = Empty@109 // through LazyPackageFragmentScopeForJavaPackage@113
    functions('lang': Name@114) = EmptyList@110[empty] // through LazyPackageFragmentScopeForJavaPackage@113
    memberIndex = computeMemberIndex$1@115 // through LazyPackageFragmentScopeForJavaPackage@113
}

LazyJavaPackageFragment@72['lang'] {
    classes('Exception': Name@98) = LazyJavaClassDescriptor@5['Exception'] // through LazyPackageFragmentScopeForJavaPackage@116
    classes('StringBuilder': Name@102) = LazyJavaClassDescriptor@13['StringBuilder'] // through LazyPackageFragmentScopeForJavaPackage@116
    classes('compareTo': Name@104) = null // through LazyPackageFragmentScopeForJavaPackage@116
    classes('plus': Name@105) = null // through LazyPackageFragmentScopeForJavaPackage@116
    classes('plusAssign': Name@106) = null // through LazyPackageFragmentScopeForJavaPackage@116
    classes('returnNothing': Name@107) = null // through LazyPackageFragmentScopeForJavaPackage@116
    classes('toChar': Name@108) = null // through LazyPackageFragmentScopeForJavaPackage@116
    deserializedPackageScope = Empty@109 // through LazyPackageFragmentScopeForJavaPackage@116
    functions('Exception': Name@98) = EmptyList@110[empty] // through LazyPackageFragmentScopeForJavaPackage@116
    functions('compareTo': Name@104) = EmptyList@110[empty] // through LazyPackageFragmentScopeForJavaPackage@116
    functions('plus': Name@105) = EmptyList@110[empty] // through LazyPackageFragmentScopeForJavaPackage@116
    functions('plusAssign': Name@106) = EmptyList@110[empty] // through LazyPackageFragmentScopeForJavaPackage@116
    functions('returnNothing': Name@107) = EmptyList@110[empty] // through LazyPackageFragmentScopeForJavaPackage@116
    functions('toChar': Name@108) = EmptyList@110[empty] // through LazyPackageFragmentScopeForJavaPackage@116
    memberIndex = computeMemberIndex$1@117 // through LazyPackageFragmentScopeForJavaPackage@116
}
