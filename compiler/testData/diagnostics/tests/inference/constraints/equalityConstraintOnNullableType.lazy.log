DescriptorResolver@0 {
    <name not found> = JetTypeImpl@1['Function1<2>']
    <name not found> = null
    <name not found> = null
    <name not found> = null
}

LazyJavaClassDescriptor@2['Exception'] {
    _constructors = ArrayList@3[5] { JavaConstructorDescriptor@4['<init>'], JavaConstructorDescriptor@5['<init>'], JavaConstructorDescriptor@6['<init>'], ... } // through LazyJavaClassMemberScope@7
    _functionTypeForSamInterface = null
    _typeConstructor = LazyJavaClassTypeConstructor@8['Exception']
    defaultType = JetTypeImpl@9['Exception']
}

LazyJavaClassTypeConstructor@8['Exception'] {
    _parameters = ArrayList@10[empty]
    _supertypes = ArrayList@11[1] { LazyJavaClassifierType@12['Throwable'] }
}

LazyJavaClassifierType@13['String'] {
    _arguments = ArrayList@14[empty]
    _nullable = 'false': Boolean@15
    _typeConstructor = DeserializedClassTypeConstructor@16
    classifier = JavaClassImpl@17['String']
}

LazyJavaClassifierType@18['String'] {
    _arguments = ArrayList@19[empty]
    _nullable = 'false': Boolean@15
    _typeConstructor = DeserializedClassTypeConstructor@16
    classifier = JavaClassImpl@20['String']
}

LazyJavaClassifierType@21['String'] {
    _arguments = ArrayList@22[empty]
    _nullable = 'false': Boolean@15
    _typeConstructor = DeserializedClassTypeConstructor@16
    classifier = JavaClassImpl@23['String']
}

LazyJavaClassifierType@24['String'] {
    _arguments = ArrayList@25[empty]
    _nullable = 'true': Boolean@26
    _typeConstructor = DeserializedClassTypeConstructor@16
    classifier = JavaClassImpl@23['String']
}

LazyJavaClassifierType@27['String'] {
    _arguments = ArrayList@28[empty]
    _nullable = 'true': Boolean@26
    _typeConstructor = DeserializedClassTypeConstructor@16
    classifier = JavaClassImpl@20['String']
}

LazyJavaClassifierType@29['String'] {
    _arguments = ArrayList@30[empty]
    _nullable = 'true': Boolean@26
    _typeConstructor = DeserializedClassTypeConstructor@16
    classifier = JavaClassImpl@17['String']
}

LazyJavaClassifierType@31['Throwable'] {
    _arguments = ArrayList@32[empty]
    _nullable = 'false': Boolean@15
    _typeConstructor = DeserializedClassTypeConstructor@33
    classifier = JavaClassImpl@34['Throwable']
}

LazyJavaClassifierType@35['Throwable'] {
    _arguments = ArrayList@36[empty]
    _nullable = 'false': Boolean@15
    _typeConstructor = DeserializedClassTypeConstructor@33
    classifier = JavaClassImpl@37['Throwable']
}

LazyJavaClassifierType@38['Throwable'] {
    _arguments = ArrayList@39[empty]
    _nullable = 'false': Boolean@15
    _typeConstructor = DeserializedClassTypeConstructor@33
    classifier = JavaClassImpl@40['Throwable']
}

LazyJavaClassifierType@41['Throwable'] {
    _arguments = ArrayList@42[empty]
    _nullable = 'true': Boolean@26
    _typeConstructor = DeserializedClassTypeConstructor@33
    classifier = JavaClassImpl@37['Throwable']
}

LazyJavaClassifierType@43['Throwable'] {
    _arguments = ArrayList@44[empty]
    _nullable = 'true': Boolean@26
    _typeConstructor = DeserializedClassTypeConstructor@33
    classifier = JavaClassImpl@40['Throwable']
}

LazyJavaClassifierType@45['Throwable'] {
    _arguments = ArrayList@46[empty]
    _nullable = 'true': Boolean@26
    _typeConstructor = DeserializedClassTypeConstructor@33
    classifier = JavaClassImpl@34['Throwable']
}

LazyJavaClassifierType@12['Throwable'] {
    _arguments = ArrayList@47[empty]
    _typeConstructor = DeserializedClassTypeConstructor@33
    classifier = JavaClassImpl@48['Throwable']
}

LazyJavaPackageFragmentProvider@49 {
    _packageFragments('<root>': FqName@50) = LazyJavaPackageFragment@51['<root>']
    _packageFragments('A': FqName@52) = null
    _packageFragments('Int': FqName@53) = null
    _packageFragments('T': FqName@54) = null
    _packageFragments('Unit': FqName@55) = null
    _packageFragments('_': FqName@56) = null
    _packageFragments('java': FqName@57) = LazyJavaPackageFragment@58['java']
    _packageFragments('java.lang': FqName@59) = LazyJavaPackageFragment@60['lang']
    _packageFragments('java.lang.A': FqName@61) = null
    _packageFragments('java.lang.Int': FqName@62) = null
    _packageFragments('java.lang.T': FqName@63) = null
    _packageFragments('java.lang.Unit': FqName@64) = null
    _packageFragments('java.lang._': FqName@65) = null
    _packageFragments('kotlin': FqName@66) = null
    _packageFragments('kotlin.A': FqName@67) = null
    _packageFragments('kotlin.Int': FqName@68) = null
    _packageFragments('kotlin.T': FqName@69) = null
    _packageFragments('kotlin.Unit': FqName@70) = null
    _packageFragments('kotlin._': FqName@71) = null
    _packageFragments('kotlin.io': FqName@72) = null
    _packageFragments('kotlin.jvm': FqName@73) = null
    _packageFragments('tests': FqName@74) = null
    _packageFragments('tests._checkType': FqName@75) = null
    _packageFragments('tests._checkType.A': FqName@76) = null
    _packageFragments('tests._checkType.Int': FqName@77) = null
    _packageFragments('tests._checkType.T': FqName@78) = null
    _packageFragments('tests._checkType.Unit': FqName@79) = null
    _packageFragments('tests._checkType._': FqName@80) = null
    topLevelClasses(JavaClassImpl@81['Exception']) = LazyJavaClassDescriptor@2['Exception']
}

LazyJavaPackageFragment@51['<root>'] {
    _functions('Exception': Name@82) = EmptyList@83[empty] // through LazyPackageFragmentScopeForJavaPackage@84
    _functions('checkType': Name@85) = EmptyList@83[empty] // through LazyPackageFragmentScopeForJavaPackage@84
    _functions('doA': Name@86) = EmptyList@83[empty] // through LazyPackageFragmentScopeForJavaPackage@84
    _functions('foo': Name@87) = EmptyList@83[empty] // through LazyPackageFragmentScopeForJavaPackage@84
    _functions('tests': Name@88) = EmptyList@83[empty] // through LazyPackageFragmentScopeForJavaPackage@84
    classes('Exception': Name@82) = null // through LazyPackageFragmentScopeForJavaPackage@84
    classes('Int': Name@89) = null // through LazyPackageFragmentScopeForJavaPackage@84
    classes('_': Name@90) = null // through LazyPackageFragmentScopeForJavaPackage@84
    classes('checkType': Name@85) = null // through LazyPackageFragmentScopeForJavaPackage@84
    classes('doA': Name@86) = null // through LazyPackageFragmentScopeForJavaPackage@84
    classes('foo': Name@87) = null // through LazyPackageFragmentScopeForJavaPackage@84
    classes('tests': Name@91) = null // through LazyPackageFragmentScopeForJavaPackage@84
    deserializedPackageScope = Empty@92 // through LazyPackageFragmentScopeForJavaPackage@84
    memberIndex = computeMemberIndex$1@93 // through LazyPackageFragmentScopeForJavaPackage@84
}

LazyJavaPackageFragment@58['java'] {
    _functions('lang': Name@94) = EmptyList@83[empty] // through LazyPackageFragmentScopeForJavaPackage@95
    classes('lang': Name@96) = null // through LazyPackageFragmentScopeForJavaPackage@95
    deserializedPackageScope = Empty@92 // through LazyPackageFragmentScopeForJavaPackage@95
    memberIndex = computeMemberIndex$1@97 // through LazyPackageFragmentScopeForJavaPackage@95
}

LazyJavaPackageFragment@60['lang'] {
    _functions('Exception': Name@82) = EmptyList@83[empty] // through LazyPackageFragmentScopeForJavaPackage@98
    _functions('checkType': Name@85) = EmptyList@83[empty] // through LazyPackageFragmentScopeForJavaPackage@98
    _functions('doA': Name@86) = EmptyList@83[empty] // through LazyPackageFragmentScopeForJavaPackage@98
    _functions('foo': Name@87) = EmptyList@83[empty] // through LazyPackageFragmentScopeForJavaPackage@98
    classes('Exception': Name@82) = LazyJavaClassDescriptor@2['Exception'] // through LazyPackageFragmentScopeForJavaPackage@98
    classes('checkType': Name@85) = null // through LazyPackageFragmentScopeForJavaPackage@98
    classes('doA': Name@86) = null // through LazyPackageFragmentScopeForJavaPackage@98
    classes('foo': Name@87) = null // through LazyPackageFragmentScopeForJavaPackage@98
    deserializedPackageScope = Empty@92 // through LazyPackageFragmentScopeForJavaPackage@98
    memberIndex = computeMemberIndex$1@99 // through LazyPackageFragmentScopeForJavaPackage@98
}
