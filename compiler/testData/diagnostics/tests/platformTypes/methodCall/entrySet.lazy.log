LazyJavaClassDescriptor@0['MultiMap'] {
    _constructors = ArrayList@1[1] { JavaConstructorDescriptor@2['<init>'] } // through LazyJavaClassMemberScope@3
    _functionTypeForSamInterface = null
    _functions('entrySet': Name@4) = ArrayList@5[1] { JavaMethodDescriptor@6['entrySet'] } // through LazyJavaClassMemberScope@3
    _properties('entrySet': Name@4) = EmptyList@7[empty] // through LazyJavaClassMemberScope@3
    _typeConstructor = LazyJavaClassTypeConstructor@8['MultiMap']
    defaultType = JetTypeImpl@9['MultiMap<2>']
    enumEntryIndex = LinkedHashMap@10 // through LazyJavaClassMemberScope@3
    memberIndex = computeMemberIndex$1@11 // through LazyJavaClassMemberScope@3
    nestedClassIndex = LinkedHashMap@12 // through LazyJavaClassMemberScope@3
    nestedClasses('entrySet': Name@4) = null // through LazyJavaClassMemberScope@3
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@13['<this>']
}

LazyJavaClassTypeConstructor@8['MultiMap'] {
    _parameters = ArrayList@14[2] { LazyJavaTypeParameterDescriptor@15['K'], LazyJavaTypeParameterDescriptor@16['V'] }
    _supertypes = ArrayList@17[1] { JetTypeImpl@18['Any'] }
}

LazyJavaClassifierType@19['Collection<V>'] {
    _arguments = ArrayList@20[1] { TypeProjectionImpl@21 }
    _memberScope = SubstitutingScope@22
    _nullable = 'false': Boolean@23
    _typeConstructor = DeserializedClassTypeConstructor@24
    classifier = JavaClassImpl@25['Collection']
}

LazyJavaClassifierType@26['Collection<V>'] {
    _arguments = ArrayList@27[1] { TypeProjectionImpl@28 }
    _memberScope = SubstitutingScope@29
    _nullable = 'false': Boolean@23
    _typeConstructor = DeserializedClassTypeConstructor@24
    classifier = JavaClassImpl@30['Collection']
}

LazyJavaClassifierType@31['Collection<V>'] {
    _arguments = ArrayList@32[1] { TypeProjectionImpl@33 }
    _memberScope = SubstitutingScope@34
    _nullable = 'true': Boolean@35
    _typeConstructor = DeserializedClassTypeConstructor@36
    classifier = JavaClassImpl@30['Collection']
}

LazyJavaClassifierType@37['Collection<V>'] {
    _arguments = ArrayList@38[1] { TypeProjectionImpl@39 }
    _memberScope = SubstitutingScope@40
    _nullable = 'true': Boolean@35
    _typeConstructor = DeserializedClassTypeConstructor@36
    classifier = JavaClassImpl@25['Collection']
}

LazyJavaClassifierType@41['Object'] {
    _typeConstructor = DeserializedClassTypeConstructor@42
    classifier = JavaClassImpl@43['Object']
}

LazyJavaClassifierType@44['Set<Collection<V>>'] {
    _arguments = ArrayList@45[1] { TypeProjectionImpl@46 }
    _memberScope = SubstitutingScope@47
    _nullable = 'false': Boolean@23
    _typeConstructor = DeserializedClassTypeConstructor@48
    classifier = JavaClassImpl@49['Set']
}

LazyJavaClassifierType@50['Set<Collection<V>>'] {
    _arguments = ArrayList@51[1] { TypeProjectionImpl@52 }
    _memberScope = SubstitutingScope@53
    _nullable = 'true': Boolean@35
    _typeConstructor = DeserializedClassTypeConstructor@54
    classifier = JavaClassImpl@49['Set']
}

LazyJavaClassifierType@55['V'] {
    _arguments = ArrayList@56[empty]
    _nullable = 'false': Boolean@23
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@57
    classifier = JavaTypeParameterImpl@58['V']
}

LazyJavaClassifierType@59['V'] {
    _arguments = ArrayList@60[empty]
    _nullable = 'false': Boolean@23
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@57
    classifier = JavaTypeParameterImpl@61['V']
}

LazyJavaClassifierType@62['V'] {
    _arguments = ArrayList@63[empty]
    _nullable = 'false': Boolean@23
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@57
    classifier = JavaTypeParameterImpl@64['V']
}

LazyJavaClassifierType@65['V'] {
    _arguments = ArrayList@66[empty]
    _nullable = 'false': Boolean@23
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@57
    classifier = JavaTypeParameterImpl@67['V']
}

LazyJavaClassifierType@68['V'] {
    _arguments = ArrayList@69[empty]
    _nullable = 'true': Boolean@35
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@57
    classifier = JavaTypeParameterImpl@67['V']
}

LazyJavaClassifierType@70['V'] {
    _arguments = ArrayList@71[empty]
    _nullable = 'true': Boolean@35
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@57
    classifier = JavaTypeParameterImpl@61['V']
}

LazyJavaClassifierType@72['V'] {
    _arguments = ArrayList@73[empty]
    _nullable = 'true': Boolean@35
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@57
    classifier = JavaTypeParameterImpl@64['V']
}

LazyJavaClassifierType@74['V'] {
    _arguments = ArrayList@75[empty]
    _nullable = 'true': Boolean@35
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@57
    classifier = JavaTypeParameterImpl@58['V']
}

LazyJavaPackageFragmentProvider@76 {
    _packageFragments('<root>': FqName@77) = LazyJavaPackageFragment@78['<root>']
    _packageFragments('Int': FqName@79) = null
    _packageFragments('String': FqName@80) = null
    _packageFragments('java': FqName@81) = LazyJavaPackageFragment@82['java']
    _packageFragments('java.lang': FqName@83) = LazyJavaPackageFragment@84['lang']
    _packageFragments('java.lang.Int': FqName@85) = null
    _packageFragments('java.lang.String': FqName@86) = null
    _packageFragments('kotlin': FqName@87) = null
    _packageFragments('kotlin.Int': FqName@88) = null
    _packageFragments('kotlin.String': FqName@89) = null
    _packageFragments('kotlin.io': FqName@90) = null
    _packageFragments('kotlin.jvm': FqName@91) = null
    _packageFragments('p': FqName@92) = LazyJavaPackageFragment@93['p']
    _packageFragments('p.Int': FqName@94) = null
    _packageFragments('p.String': FqName@95) = null
    topLevelClasses(JavaClassImpl@96['MultiMap']) = LazyJavaClassDescriptor@0['MultiMap']
}

LazyJavaPackageFragment@78['<root>'] {
    _functions('MultiMap': Name@97) = EmptyList@7[empty] // through LazyPackageFragmentScopeForJavaPackage@98
    _functions('entrySet': Name@4) = EmptyList@7[empty] // through LazyPackageFragmentScopeForJavaPackage@98
    _functions('iterator': Name@99) = EmptyList@7[empty] // through LazyPackageFragmentScopeForJavaPackage@98
    _functions('p': Name@100) = EmptyList@7[empty] // through LazyPackageFragmentScopeForJavaPackage@98
    classes('Int': Name@101) = null // through LazyPackageFragmentScopeForJavaPackage@98
    classes('MultiMap': Name@97) = null // through LazyPackageFragmentScopeForJavaPackage@98
    classes('String': Name@102) = null // through LazyPackageFragmentScopeForJavaPackage@98
    classes('entrySet': Name@4) = null // through LazyPackageFragmentScopeForJavaPackage@98
    classes('iterator': Name@99) = null // through LazyPackageFragmentScopeForJavaPackage@98
    classes('p': Name@103) = null // through LazyPackageFragmentScopeForJavaPackage@98
    deserializedPackageScope = Empty@104 // through LazyPackageFragmentScopeForJavaPackage@98
    memberIndex = computeMemberIndex$1@105 // through LazyPackageFragmentScopeForJavaPackage@98
}

LazyJavaPackageFragment@82['java'] {
    _functions('lang': Name@106) = EmptyList@7[empty] // through LazyPackageFragmentScopeForJavaPackage@107
    classes('lang': Name@108) = null // through LazyPackageFragmentScopeForJavaPackage@107
    deserializedPackageScope = Empty@104 // through LazyPackageFragmentScopeForJavaPackage@107
    memberIndex = computeMemberIndex$1@109 // through LazyPackageFragmentScopeForJavaPackage@107
}

LazyJavaPackageFragment@84['lang'] {
    _functions('MultiMap': Name@97) = EmptyList@7[empty] // through LazyPackageFragmentScopeForJavaPackage@110
    _functions('entrySet': Name@4) = EmptyList@7[empty] // through LazyPackageFragmentScopeForJavaPackage@110
    _functions('iterator': Name@99) = EmptyList@7[empty] // through LazyPackageFragmentScopeForJavaPackage@110
    classes('MultiMap': Name@97) = null // through LazyPackageFragmentScopeForJavaPackage@110
    classes('entrySet': Name@4) = null // through LazyPackageFragmentScopeForJavaPackage@110
    classes('iterator': Name@99) = null // through LazyPackageFragmentScopeForJavaPackage@110
    deserializedPackageScope = Empty@104 // through LazyPackageFragmentScopeForJavaPackage@110
    memberIndex = computeMemberIndex$1@111 // through LazyPackageFragmentScopeForJavaPackage@110
}

LazyJavaPackageFragment@93['p'] {
    _functions('MultiMap': Name@97) = EmptyList@7[empty] // through LazyPackageFragmentScopeForJavaPackage@112
    _functions('entrySet': Name@4) = EmptyList@7[empty] // through LazyPackageFragmentScopeForJavaPackage@112
    _functions('iterator': Name@99) = EmptyList@7[empty] // through LazyPackageFragmentScopeForJavaPackage@112
    classes('Int': Name@101) = null // through LazyPackageFragmentScopeForJavaPackage@112
    classes('MultiMap': Name@97) = LazyJavaClassDescriptor@0['MultiMap'] // through LazyPackageFragmentScopeForJavaPackage@112
    classes('String': Name@102) = null // through LazyPackageFragmentScopeForJavaPackage@112
    classes('entrySet': Name@4) = null // through LazyPackageFragmentScopeForJavaPackage@112
    classes('iterator': Name@99) = null // through LazyPackageFragmentScopeForJavaPackage@112
    deserializedPackageScope = Empty@104 // through LazyPackageFragmentScopeForJavaPackage@112
    memberIndex = computeMemberIndex$1@113 // through LazyPackageFragmentScopeForJavaPackage@112
}

LazyJavaTypeParameterDescriptor@15['K'] {
    defaultType = JetTypeImpl@114['K']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@115
    upperBounds = LinkedHashSet@116[1] { NullableType@117 }
}

LazyJavaTypeParameterDescriptor@16['V'] {
    defaultType = JetTypeImpl@118['V']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@57
    upperBounds = LinkedHashSet@119[1] { NullableType@120 }
}

LazyJavaTypeParameterResolver@121 {
    resolve(JavaTypeParameterImpl@122['K']) = LazyJavaTypeParameterDescriptor@15['K']
    resolve(JavaTypeParameterImpl@123['V']) = LazyJavaTypeParameterDescriptor@16['V']
}

LazyJavaTypeParameterResolver@124 {
    resolve(JavaTypeParameterImpl@61['V']) = null
}
