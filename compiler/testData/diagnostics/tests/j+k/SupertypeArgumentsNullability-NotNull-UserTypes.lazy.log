LazyJavaClassDescriptor@0['A'] {
    typeConstructor = LazyJavaClassTypeConstructor@1['A']
}

LazyJavaClassDescriptor@2['X'] {
    defaultType = JetTypeImpl@3['X<1>']
    functions('barN': Name@4) = ArrayList@5[1] { JavaMethodDescriptor@6['barN'] } // through LazyJavaClassMemberScope@7
    functions('fooN': Name@8) = ArrayList@9[1] { JavaMethodDescriptor@10['fooN'] } // through LazyJavaClassMemberScope@7
    memberIndex = computeMemberIndex$1@11 // through LazyJavaClassMemberScope@7
    properties('barN': Name@4) = EmptyList@12[empty] // through LazyJavaClassMemberScope@7
    properties('fooN': Name@8) = EmptyList@12[empty] // through LazyJavaClassMemberScope@7
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@13['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@14['X']
}

LazyJavaClassDescriptor@15['Y'] {
    constructors = ArrayList@16[1] { JavaConstructorDescriptor@17['<init>'] } // through LazyJavaClassMemberScope@18
    defaultType = JetTypeImpl@19['Y']
    enumEntryIndex = LinkedHashMap@20 // through LazyJavaClassMemberScope@18
    functionTypeForSamInterface = null
    functions('barN': Name@4) = ArrayList@21[1] { JavaMethodDescriptor@22['barN'] } // through LazyJavaClassMemberScope@18
    functions('fooN': Name@8) = ArrayList@23[1] { JavaMethodDescriptor@24['fooN'] } // through LazyJavaClassMemberScope@18
    memberIndex = computeMemberIndex$1@25 // through LazyJavaClassMemberScope@18
    nestedClassIndex = LinkedHashMap@26 // through LazyJavaClassMemberScope@18
    nestedClasses('barN': Name@4) = null // through LazyJavaClassMemberScope@18
    nestedClasses('fooN': Name@8) = null // through LazyJavaClassMemberScope@18
    properties('barN': Name@4) = EmptyList@12[empty] // through LazyJavaClassMemberScope@18
    properties('fooN': Name@8) = EmptyList@12[empty] // through LazyJavaClassMemberScope@18
    typeConstructor = LazyJavaClassTypeConstructor@27['Y']
}

LazyJavaClassTypeConstructor@1['A'] {
    parameters = ArrayList@28[empty]
    supertypes = ArrayList@29[1] { JetTypeImpl@30['Any'] }
}

LazyJavaClassTypeConstructor@14['X'] {
    parameters = ArrayList@31[1] { LazyJavaTypeParameterDescriptor@32['T'] }
    supertypes = ArrayList@33[1] { JetTypeImpl@30['Any'] }
}

LazyJavaClassTypeConstructor@27['Y'] {
    parameters = ArrayList@34[empty]
    supertypes = ArrayList@35[1] { LazyJavaClassifierType@36['X<A>'] }
}

LazyJavaClassifierType@37['A'] {
    arguments = ArrayList@38[empty]
    classifier = JavaClassImpl@39['A']
    nullable = 'false': Boolean@40
    typeConstructor = LazyJavaClassTypeConstructor@1['A']
}

LazyJavaClassifierType@41['A'] {
    arguments = ArrayList@42[empty]
    classifier = JavaClassImpl@39['A']
    nullable = 'true': Boolean@43
    typeConstructor = LazyJavaClassTypeConstructor@1['A']
}

LazyJavaClassifierType@44['Object'] {
    classifier = JavaClassImpl@45['Object']
    typeConstructor = DeserializedClassTypeConstructor@46
}

LazyJavaClassifierType@47['Object'] {
    classifier = JavaClassImpl@48['Object']
    typeConstructor = DeserializedClassTypeConstructor@46
}

LazyJavaClassifierType@49['T'] {
    arguments = ArrayList@50[empty]
    classifier = JavaTypeParameterImpl@51['T']
    nullable = 'false': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@52
}

LazyJavaClassifierType@53['T'] {
    arguments = ArrayList@54[empty]
    classifier = JavaTypeParameterImpl@55['T']
    nullable = 'false': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@52
}

LazyJavaClassifierType@56['T'] {
    arguments = ArrayList@57[empty]
    classifier = JavaTypeParameterImpl@51['T']
    nullable = 'true': Boolean@43
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@52
}

LazyJavaClassifierType@58['T'] {
    arguments = ArrayList@59[empty]
    classifier = JavaTypeParameterImpl@55['T']
    nullable = 'true': Boolean@43
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@52
}

LazyJavaClassifierType@36['X<A>'] {
    arguments = ArrayList@60[1] { TypeProjectionImpl@61 }
    classifier = JavaClassImpl@62['X']
    memberScope = SubstitutingScope@63
    typeConstructor = LazyJavaClassTypeConstructor@14['X']
}

LazyJavaPackageFragmentProvider@64 {
    packageFragments('<root>': FqName@65) = LazyJavaPackageFragment@66['<root>']
    packageFragments('Any': FqName@67) = null
    packageFragments('java': FqName@68) = LazyJavaPackageFragment@69['java']
    packageFragments('java.lang': FqName@70) = LazyJavaPackageFragment@71['lang']
    packageFragments('java.lang.Any': FqName@72) = null
    packageFragments('kotlin': FqName@73) = null
    packageFragments('kotlin.Any': FqName@74) = null
    packageFragments('kotlin.io': FqName@75) = null
    packageFragments('kotlin.jvm': FqName@76) = null
    topLevelClasses(JavaClassImpl@39['A']) = LazyJavaClassDescriptor@0['A']
    topLevelClasses(JavaClassImpl@62['X']) = LazyJavaClassDescriptor@2['X']
    topLevelClasses(JavaClassImpl@77['Y']) = LazyJavaClassDescriptor@15['Y']
}

LazyJavaPackageFragment@66['<root>'] {
    classes('Any': Name@78) = null // through LazyPackageFragmentScopeForJavaPackage@79
    classes('Y': Name@80) = LazyJavaClassDescriptor@15['Y'] // through LazyPackageFragmentScopeForJavaPackage@79
    classes('barN': Name@4) = null // through LazyPackageFragmentScopeForJavaPackage@79
    classes('fooN': Name@8) = null // through LazyPackageFragmentScopeForJavaPackage@79
    deserializedPackageScope = Empty@81 // through LazyPackageFragmentScopeForJavaPackage@79
    functions('Y': Name@80) = EmptyList@12[empty] // through LazyPackageFragmentScopeForJavaPackage@79
    functions('barN': Name@4) = EmptyList@12[empty] // through LazyPackageFragmentScopeForJavaPackage@79
    functions('fooN': Name@8) = EmptyList@12[empty] // through LazyPackageFragmentScopeForJavaPackage@79
    memberIndex = computeMemberIndex$1@82 // through LazyPackageFragmentScopeForJavaPackage@79
}

LazyJavaPackageFragment@69['java'] {
    classes('lang': Name@83) = null // through LazyPackageFragmentScopeForJavaPackage@84
    deserializedPackageScope = Empty@81 // through LazyPackageFragmentScopeForJavaPackage@84
    functions('lang': Name@85) = EmptyList@12[empty] // through LazyPackageFragmentScopeForJavaPackage@84
    memberIndex = computeMemberIndex$1@86 // through LazyPackageFragmentScopeForJavaPackage@84
}

LazyJavaPackageFragment@71['lang'] {
    classes('Y': Name@80) = null // through LazyPackageFragmentScopeForJavaPackage@87
    classes('barN': Name@4) = null // through LazyPackageFragmentScopeForJavaPackage@87
    classes('fooN': Name@8) = null // through LazyPackageFragmentScopeForJavaPackage@87
    deserializedPackageScope = Empty@81 // through LazyPackageFragmentScopeForJavaPackage@87
    functions('Y': Name@80) = EmptyList@12[empty] // through LazyPackageFragmentScopeForJavaPackage@87
    functions('barN': Name@4) = EmptyList@12[empty] // through LazyPackageFragmentScopeForJavaPackage@87
    functions('fooN': Name@8) = EmptyList@12[empty] // through LazyPackageFragmentScopeForJavaPackage@87
    memberIndex = computeMemberIndex$1@88 // through LazyPackageFragmentScopeForJavaPackage@87
}

LazyJavaTypeParameterDescriptor@32['T'] {
    defaultType = JetTypeImpl@89['T']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@52
    upperBounds = LinkedHashSet@90[1] { NullableType@91 }
}

LazyJavaTypeParameterResolver@92 {
    resolve(JavaTypeParameterImpl@93['T']) = LazyJavaTypeParameterDescriptor@32['T']
}

LazyJavaTypeParameterResolver@94 {
    resolve(JavaTypeParameterImpl@55['T']) = null
}

LazyJavaTypeParameterResolver@95 {
    resolve(JavaTypeParameterImpl@51['T']) = null
}
