LazyJavaClassDescriptor@0['J'] {
    defaultType = JetTypeImpl@1['J']
    enumEntryIndex = LinkedHashMap@2 // through LazyJavaClassMemberScope@3
    functions('foo': Name@4) = ArrayList@5[1] { JavaMethodDescriptor@6['foo'] } // through LazyJavaClassMemberScope@3
    functions('j': Name@7) = ArrayList@8[1] { JavaMethodDescriptor@9['j'] } // through LazyJavaClassMemberScope@3
    memberIndex = computeMemberIndex$1@10 // through LazyJavaClassMemberScope@3
    nestedClassIndex = LinkedHashMap@11 // through LazyJavaClassMemberScope@3
    nestedClasses('foo': Name@4) = null // through LazyJavaClassMemberScope@3
    nestedClasses('j': Name@7) = null // through LazyJavaClassMemberScope@3
    properties('foo': Name@4) = EmptyList@12[empty] // through LazyJavaClassMemberScope@3
    properties('j': Name@7) = EmptyList@12[empty] // through LazyJavaClassMemberScope@3
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@13['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@14['J']
}

LazyJavaClassTypeConstructor@14['J'] {
    parameters = ArrayList@15[empty]
    supertypes = ArrayList@16[1] { JetTypeImpl@17['Any'] }
}

LazyJavaClassifierType@18['J'] {
    arguments = ArrayList@19[empty]
    classifier = JavaClassImpl@20['J']
    memberScope = LazyJavaClassMemberScope@3
    nullable = 'false': Boolean@21
    typeConstructor = LazyJavaClassTypeConstructor@14['J']
}

LazyJavaClassifierType@22['J'] {
    arguments = ArrayList@23[empty]
    classifier = JavaClassImpl@20['J']
    nullable = 'true': Boolean@24
    typeConstructor = LazyJavaClassTypeConstructor@14['J']
}

LazyJavaClassifierType@25['Object'] {
    classifier = JavaClassImpl@26['Object']
    typeConstructor = DeserializedClassTypeConstructor@27
}

LazyJavaClassifierType@28['T'] {
    arguments = ArrayList@29[empty]
    classifier = JavaTypeParameterImpl@30['T']
    nullable = 'false': Boolean@21
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@31
}

LazyJavaClassifierType@32['T'] {
    arguments = ArrayList@33[empty]
    classifier = JavaTypeParameterImpl@30['T']
    nullable = 'true': Boolean@24
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@31
}

LazyJavaPackageFragmentProvider@34 {
    packageFragments('<root>': FqName@35) = LazyJavaPackageFragment@36['<root>']
    packageFragments('J': FqName@37) = null
    packageFragments('String': FqName@38) = null
    packageFragments('java': FqName@39) = LazyJavaPackageFragment@40['java']
    packageFragments('java.lang': FqName@41) = LazyJavaPackageFragment@42['lang']
    packageFragments('java.lang.J': FqName@43) = null
    packageFragments('java.lang.String': FqName@44) = null
    packageFragments('kotlin': FqName@45) = null
    packageFragments('kotlin.J': FqName@46) = null
    packageFragments('kotlin.String': FqName@47) = null
    packageFragments('kotlin.io': FqName@48) = null
    packageFragments('kotlin.jvm': FqName@49) = null
    packageFragments('p': FqName@50) = LazyJavaPackageFragment@51['p']
    packageFragments('p.J': FqName@52) = null
    packageFragments('p.String': FqName@53) = null
    topLevelClasses(JavaClassImpl@54['J']) = LazyJavaClassDescriptor@0['J']
}

LazyJavaPackageFragment@36['<root>'] {
    classes('J': Name@55) = null // through LazyPackageFragmentScopeForJavaPackage@56
    classes('String': Name@57) = null // through LazyPackageFragmentScopeForJavaPackage@56
    classes('foo': Name@4) = null // through LazyPackageFragmentScopeForJavaPackage@56
    classes('j': Name@7) = null // through LazyPackageFragmentScopeForJavaPackage@56
    classes('p': Name@58) = null // through LazyPackageFragmentScopeForJavaPackage@56
    deserializedPackageScope = Empty@59 // through LazyPackageFragmentScopeForJavaPackage@56
    functions('foo': Name@4) = EmptyList@12[empty] // through LazyPackageFragmentScopeForJavaPackage@56
    functions('j': Name@7) = EmptyList@12[empty] // through LazyPackageFragmentScopeForJavaPackage@56
    functions('p': Name@60) = EmptyList@12[empty] // through LazyPackageFragmentScopeForJavaPackage@56
    memberIndex = computeMemberIndex$1@61 // through LazyPackageFragmentScopeForJavaPackage@56
}

LazyJavaPackageFragment@40['java'] {
    classes('lang': Name@62) = null // through LazyPackageFragmentScopeForJavaPackage@63
    deserializedPackageScope = Empty@59 // through LazyPackageFragmentScopeForJavaPackage@63
    functions('lang': Name@64) = EmptyList@12[empty] // through LazyPackageFragmentScopeForJavaPackage@63
    memberIndex = computeMemberIndex$1@65 // through LazyPackageFragmentScopeForJavaPackage@63
}

LazyJavaPackageFragment@42['lang'] {
    classes('foo': Name@4) = null // through LazyPackageFragmentScopeForJavaPackage@66
    classes('j': Name@7) = null // through LazyPackageFragmentScopeForJavaPackage@66
    deserializedPackageScope = Empty@59 // through LazyPackageFragmentScopeForJavaPackage@66
    functions('foo': Name@4) = EmptyList@12[empty] // through LazyPackageFragmentScopeForJavaPackage@66
    functions('j': Name@7) = EmptyList@12[empty] // through LazyPackageFragmentScopeForJavaPackage@66
    memberIndex = computeMemberIndex$1@67 // through LazyPackageFragmentScopeForJavaPackage@66
}

LazyJavaPackageFragment@51['p'] {
    classes('J': Name@55) = LazyJavaClassDescriptor@0['J'] // through LazyPackageFragmentScopeForJavaPackage@68
    classes('String': Name@57) = null // through LazyPackageFragmentScopeForJavaPackage@68
    classes('foo': Name@4) = null // through LazyPackageFragmentScopeForJavaPackage@68
    classes('j': Name@7) = null // through LazyPackageFragmentScopeForJavaPackage@68
    deserializedPackageScope = Empty@59 // through LazyPackageFragmentScopeForJavaPackage@68
    functions('foo': Name@4) = EmptyList@12[empty] // through LazyPackageFragmentScopeForJavaPackage@68
    functions('j': Name@7) = EmptyList@12[empty] // through LazyPackageFragmentScopeForJavaPackage@68
    memberIndex = computeMemberIndex$1@69 // through LazyPackageFragmentScopeForJavaPackage@68
}

LazyJavaTypeParameterDescriptor@70['T'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@31
    upperBounds = LinkedHashSet@71[1] { NullableType@72 }
}

LazyJavaTypeParameterResolver@73 {
    resolve(JavaTypeParameterImpl@74['T']) = LazyJavaTypeParameterDescriptor@70['T']
}
