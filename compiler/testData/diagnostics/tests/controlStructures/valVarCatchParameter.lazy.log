LazyJavaClassDescriptor@0['Exception'] {
    typeConstructor = LazyJavaClassTypeConstructor@1['Exception']
}

LazyJavaClassTypeConstructor@1['Exception'] {
    parameters = ArrayList@2[empty]
    supertypes = ArrayList@3[1] { LazyJavaClassifierType@4['Throwable'] }
}

LazyJavaClassifierType@4['Throwable'] {
    arguments = ArrayList@5[empty]
    classifier = JavaClassImpl@6['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@7
}

LazyJavaPackageFragmentProvider@8 {
    packageFragments('<root>': FqName@9) = LazyJavaPackageFragment@10['<root>']
    packageFragments('Exception': FqName@11) = null
    packageFragments('java': FqName@12) = LazyJavaPackageFragment@13['java']
    packageFragments('java.lang': FqName@14) = LazyJavaPackageFragment@15['lang']
    packageFragments('java.lang.Exception': FqName@16) = null
    packageFragments('kotlin': FqName@17) = null
    packageFragments('kotlin.Exception': FqName@18) = null
    packageFragments('kotlin.io': FqName@19) = null
    packageFragments('kotlin.jvm': FqName@20) = null
    topLevelClasses(JavaClassImpl@21['Exception']) = LazyJavaClassDescriptor@0['Exception']
}

LazyJavaPackageFragment@10['<root>'] {
    classes('Exception': Name@22) = null // through LazyPackageFragmentScopeForJavaPackage@23
}

LazyJavaPackageFragment@13['java'] {
    classes('lang': Name@24) = null // through LazyPackageFragmentScopeForJavaPackage@25
    deserializedPackageScope = Empty@26 // through LazyPackageFragmentScopeForJavaPackage@25
    functions('lang': Name@27) = EmptyList@28[empty] // through LazyPackageFragmentScopeForJavaPackage@25
    memberIndex = computeMemberIndex$1@29 // through LazyPackageFragmentScopeForJavaPackage@25
}

LazyJavaPackageFragment@15['lang'] {
    classes('Exception': Name@22) = LazyJavaClassDescriptor@0['Exception'] // through LazyPackageFragmentScopeForJavaPackage@30
}
