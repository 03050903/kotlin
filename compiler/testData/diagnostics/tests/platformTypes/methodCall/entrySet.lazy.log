LazyJavaClassDescriptor@0['MultiMap'] {
    constructors = ArrayList@1[1] { JavaConstructorDescriptor@2['<init>'] } // through LazyJavaClassMemberScope@3
    defaultType = JetTypeImpl@4['MultiMap<2>']
    enumEntryIndex = LinkedHashMap@5 // through LazyJavaClassMemberScope@3
    functionTypeForSamInterface = null
    functions('entrySet': Name@6) = ArrayList@7[1] { JavaMethodDescriptor@8['entrySet'] } // through LazyJavaClassMemberScope@3
    memberIndex = computeMemberIndex$1@9 // through LazyJavaClassMemberScope@3
    nestedClassIndex = LinkedHashMap@10 // through LazyJavaClassMemberScope@3
    nestedClasses('entrySet': Name@6) = null // through LazyJavaClassMemberScope@3
    properties('entrySet': Name@6) = EmptyList@11[empty] // through LazyJavaClassMemberScope@3
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@12['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@13['MultiMap']
}

LazyJavaClassTypeConstructor@13['MultiMap'] {
    parameters = ArrayList@14[2] { LazyJavaTypeParameterDescriptor@15['K'], LazyJavaTypeParameterDescriptor@16['V'] }
    supertypes = ArrayList@17[1] { JetTypeImpl@18['Any'] }
}

LazyJavaClassifierType@19['Collection<V>'] {
    arguments = ArrayList@20[1] { TypeProjectionImpl@21 }
    classifier = JavaClassImpl@22['Collection']
    memberScope = SubstitutingScope@23
    nullable = 'false': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@25
}

LazyJavaClassifierType@26['Collection<V>'] {
    arguments = ArrayList@27[1] { TypeProjectionImpl@28 }
    classifier = JavaClassImpl@29['Collection']
    memberScope = SubstitutingScope@30
    nullable = 'false': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@25
}

LazyJavaClassifierType@31['Collection<V>'] {
    arguments = ArrayList@32[1] { TypeProjectionImpl@33 }
    classifier = JavaClassImpl@29['Collection']
    memberScope = SubstitutingScope@34
    nullable = 'true': Boolean@35
    typeConstructor = DeserializedClassTypeConstructor@36
}

LazyJavaClassifierType@37['Collection<V>'] {
    arguments = ArrayList@38[1] { TypeProjectionImpl@39 }
    classifier = JavaClassImpl@22['Collection']
    memberScope = SubstitutingScope@40
    nullable = 'true': Boolean@35
    typeConstructor = DeserializedClassTypeConstructor@36
}

LazyJavaClassifierType@41['Object'] {
    classifier = JavaClassImpl@42['Object']
    typeConstructor = DeserializedClassTypeConstructor@43
}

LazyJavaClassifierType@44['Set<Collection<V>>'] {
    arguments = ArrayList@45[1] { TypeProjectionImpl@46 }
    classifier = JavaClassImpl@47['Set']
    memberScope = SubstitutingScope@48
    nullable = 'false': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@49
}

LazyJavaClassifierType@50['Set<Collection<V>>'] {
    arguments = ArrayList@51[1] { TypeProjectionImpl@52 }
    classifier = JavaClassImpl@47['Set']
    memberScope = SubstitutingScope@53
    nullable = 'true': Boolean@35
    typeConstructor = DeserializedClassTypeConstructor@54
}

LazyJavaClassifierType@55['V'] {
    arguments = ArrayList@56[empty]
    classifier = JavaTypeParameterImpl@57['V']
    nullable = 'false': Boolean@24
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@58
}

LazyJavaClassifierType@59['V'] {
    arguments = ArrayList@60[empty]
    classifier = JavaTypeParameterImpl@61['V']
    nullable = 'false': Boolean@24
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@58
}

LazyJavaClassifierType@62['V'] {
    arguments = ArrayList@63[empty]
    classifier = JavaTypeParameterImpl@64['V']
    nullable = 'false': Boolean@24
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@58
}

LazyJavaClassifierType@65['V'] {
    arguments = ArrayList@66[empty]
    classifier = JavaTypeParameterImpl@67['V']
    nullable = 'false': Boolean@24
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@58
}

LazyJavaClassifierType@68['V'] {
    arguments = ArrayList@69[empty]
    classifier = JavaTypeParameterImpl@57['V']
    nullable = 'true': Boolean@35
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@58
}

LazyJavaClassifierType@70['V'] {
    arguments = ArrayList@71[empty]
    classifier = JavaTypeParameterImpl@67['V']
    nullable = 'true': Boolean@35
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@58
}

LazyJavaClassifierType@72['V'] {
    arguments = ArrayList@73[empty]
    classifier = JavaTypeParameterImpl@61['V']
    nullable = 'true': Boolean@35
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@58
}

LazyJavaClassifierType@74['V'] {
    arguments = ArrayList@75[empty]
    classifier = JavaTypeParameterImpl@64['V']
    nullable = 'true': Boolean@35
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@58
}

LazyJavaPackageFragmentProvider@76 {
    packageFragments('<root>': FqName@77) = LazyJavaPackageFragment@78['<root>']
    packageFragments('Int': FqName@79) = null
    packageFragments('String': FqName@80) = null
    packageFragments('java': FqName@81) = LazyJavaPackageFragment@82['java']
    packageFragments('java.lang': FqName@83) = LazyJavaPackageFragment@84['lang']
    packageFragments('java.lang.Int': FqName@85) = null
    packageFragments('java.lang.String': FqName@86) = null
    packageFragments('kotlin': FqName@87) = null
    packageFragments('kotlin.Int': FqName@88) = null
    packageFragments('kotlin.String': FqName@89) = null
    packageFragments('kotlin.io': FqName@90) = null
    packageFragments('kotlin.jvm': FqName@91) = null
    packageFragments('p': FqName@92) = LazyJavaPackageFragment@93['p']
    packageFragments('p.Int': FqName@94) = null
    packageFragments('p.String': FqName@95) = null
    topLevelClasses(JavaClassImpl@96['MultiMap']) = LazyJavaClassDescriptor@0['MultiMap']
}

LazyJavaPackageFragment@78['<root>'] {
    classes('Int': Name@97) = null // through LazyPackageFragmentScopeForJavaPackage@98
    classes('MultiMap': Name@99) = null // through LazyPackageFragmentScopeForJavaPackage@98
    classes('String': Name@100) = null // through LazyPackageFragmentScopeForJavaPackage@98
    classes('entrySet': Name@6) = null // through LazyPackageFragmentScopeForJavaPackage@98
    classes('iterator': Name@101) = null // through LazyPackageFragmentScopeForJavaPackage@98
    classes('p': Name@102) = null // through LazyPackageFragmentScopeForJavaPackage@98
    deserializedPackageScope = Empty@103 // through LazyPackageFragmentScopeForJavaPackage@98
    functions('MultiMap': Name@99) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@98
    functions('entrySet': Name@6) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@98
    functions('iterator': Name@101) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@98
    functions('p': Name@104) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@98
    memberIndex = computeMemberIndex$1@105 // through LazyPackageFragmentScopeForJavaPackage@98
}

LazyJavaPackageFragment@82['java'] {
    classes('lang': Name@106) = null // through LazyPackageFragmentScopeForJavaPackage@107
    deserializedPackageScope = Empty@103 // through LazyPackageFragmentScopeForJavaPackage@107
    functions('lang': Name@108) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@107
    memberIndex = computeMemberIndex$1@109 // through LazyPackageFragmentScopeForJavaPackage@107
}

LazyJavaPackageFragment@84['lang'] {
    classes('MultiMap': Name@99) = null // through LazyPackageFragmentScopeForJavaPackage@110
    classes('entrySet': Name@6) = null // through LazyPackageFragmentScopeForJavaPackage@110
    classes('iterator': Name@101) = null // through LazyPackageFragmentScopeForJavaPackage@110
    deserializedPackageScope = Empty@103 // through LazyPackageFragmentScopeForJavaPackage@110
    functions('MultiMap': Name@99) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@110
    functions('entrySet': Name@6) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@110
    functions('iterator': Name@101) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@110
    memberIndex = computeMemberIndex$1@111 // through LazyPackageFragmentScopeForJavaPackage@110
}

LazyJavaPackageFragment@93['p'] {
    classes('Int': Name@97) = null // through LazyPackageFragmentScopeForJavaPackage@112
    classes('MultiMap': Name@99) = LazyJavaClassDescriptor@0['MultiMap'] // through LazyPackageFragmentScopeForJavaPackage@112
    classes('String': Name@100) = null // through LazyPackageFragmentScopeForJavaPackage@112
    classes('entrySet': Name@6) = null // through LazyPackageFragmentScopeForJavaPackage@112
    classes('iterator': Name@101) = null // through LazyPackageFragmentScopeForJavaPackage@112
    deserializedPackageScope = Empty@103 // through LazyPackageFragmentScopeForJavaPackage@112
    functions('MultiMap': Name@99) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@112
    functions('entrySet': Name@6) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@112
    functions('iterator': Name@101) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@112
    memberIndex = computeMemberIndex$1@113 // through LazyPackageFragmentScopeForJavaPackage@112
}

LazyJavaTypeParameterDescriptor@15['K'] {
    defaultType = JetTypeImpl@114['K']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@115
    upperBounds = LinkedHashSet@116[1] { NullableType@117 }
}

LazyJavaTypeParameterDescriptor@16['V'] {
    defaultType = JetTypeImpl@118['V']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@58
    upperBounds = LinkedHashSet@119[1] { NullableType@120 }
}

LazyJavaTypeParameterResolver@121 {
    resolve(JavaTypeParameterImpl@122['K']) = LazyJavaTypeParameterDescriptor@15['K']
    resolve(JavaTypeParameterImpl@123['V']) = LazyJavaTypeParameterDescriptor@16['V']
}

LazyJavaTypeParameterResolver@124 {
    resolve(JavaTypeParameterImpl@64['V']) = null
}
