LazyJavaClassDescriptor@0['AutoCloseable'] {
    defaultType = JetTypeImpl@1['AutoCloseable']
    functions('block': Name@2) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('clone': Name@5) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('close': Name@6) = ArrayList@7[1] { JavaMethodDescriptor@8['close'] } // through LazyJavaClassMemberScope@4
    functions('equals': Name@9) = ArrayList@10[1] { DeserializedSimpleFunctionDescriptor@11['equals'] } // through LazyJavaClassMemberScope@4
    functions('finalize': Name@12) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('getClass': Name@13) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('hashCode': Name@14) = ArrayList@15[1] { DeserializedSimpleFunctionDescriptor@16['hashCode'] } // through LazyJavaClassMemberScope@4
    functions('invoke': Name@17) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('notify': Name@18) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('notifyAll': Name@19) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('toString': Name@20) = ArrayList@21[1] { DeserializedSimpleFunctionDescriptor@22['toString'] } // through LazyJavaClassMemberScope@4
    functions('wait': Name@23) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    memberIndex = computeMemberIndex$1@24 // through LazyJavaClassMemberScope@4
    properties('block': Name@2) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@25['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@26['AutoCloseable']
}

LazyJavaClassDescriptor@27['Closeable'] {
    allDescriptors = ArrayList@28[4] { DeserializedSimpleFunctionDescriptor@29['hashCode'], JavaMethodDescriptor@30['close'], DeserializedSimpleFunctionDescriptor@31['toString'], ... } // through LazyJavaClassMemberScope@32
    annotations = LazyJavaAnnotations@33
    defaultType = JetTypeImpl@34['Closeable']
    enumEntryIndex = LinkedHashMap@35 // through LazyJavaClassMemberScope@32
    functionTypeForSamInterface = JetTypeImpl@36['Function0<1>']
    functions('block': Name@2) = EmptyList@3[empty] // through LazyJavaClassMemberScope@32
    functions('clone': Name@5) = EmptyList@3[empty] // through LazyJavaClassMemberScope@32
    functions('close': Name@37) = ArrayList@38[1] { JavaMethodDescriptor@30['close'] } // through LazyJavaClassMemberScope@32
    functions('equals': Name@9) = ArrayList@39[1] { DeserializedSimpleFunctionDescriptor@40['equals'] } // through LazyJavaClassMemberScope@32
    functions('finalize': Name@12) = EmptyList@3[empty] // through LazyJavaClassMemberScope@32
    functions('getClass': Name@13) = EmptyList@3[empty] // through LazyJavaClassMemberScope@32
    functions('hashCode': Name@14) = ArrayList@41[1] { DeserializedSimpleFunctionDescriptor@29['hashCode'] } // through LazyJavaClassMemberScope@32
    functions('invoke': Name@17) = EmptyList@3[empty] // through LazyJavaClassMemberScope@32
    functions('notify': Name@18) = EmptyList@3[empty] // through LazyJavaClassMemberScope@32
    functions('notifyAll': Name@19) = EmptyList@3[empty] // through LazyJavaClassMemberScope@32
    functions('toString': Name@20) = ArrayList@42[1] { DeserializedSimpleFunctionDescriptor@31['toString'] } // through LazyJavaClassMemberScope@32
    functions('wait': Name@23) = EmptyList@3[empty] // through LazyJavaClassMemberScope@32
    memberIndex = computeMemberIndex$1@43 // through LazyJavaClassMemberScope@32
    nestedClassIndex = LinkedHashMap@44 // through LazyJavaClassMemberScope@32
    nestedClasses('block': Name@2) = null // through LazyJavaClassMemberScope@32
    properties('block': Name@2) = EmptyList@3[empty] // through LazyJavaClassMemberScope@32
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@45['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@46['Closeable']
}

LazyJavaClassDescriptor@47['Runnable'] {
    functionTypeForSamInterface = JetTypeImpl@48['Function0<1>']
    functions('block': Name@49) = EmptyList@3[empty] // through LazyJavaClassMemberScope@50
    functions('invoke': Name@51) = EmptyList@3[empty] // through LazyJavaClassMemberScope@50
    functions('plus': Name@52) = EmptyList@3[empty] // through LazyJavaClassMemberScope@50
    functions('use': Name@53) = EmptyList@3[empty] // through LazyJavaClassMemberScope@50
    memberIndex = computeMemberIndex$1@54 // through LazyJavaClassMemberScope@50
    properties('block': Name@49) = EmptyList@3[empty] // through LazyJavaClassMemberScope@50
    properties('plus': Name@52) = EmptyList@3[empty] // through LazyJavaClassMemberScope@50
    properties('use': Name@53) = EmptyList@3[empty] // through LazyJavaClassMemberScope@50
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@55['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@56['Runnable']
}

LazyJavaClassDescriptor@57['Thread'] {
    constructors = ArrayList@58[13] { JavaConstructorDescriptor@59['<init>'], JavaConstructorDescriptor@60['<init>'], SamAdapterConstructorDescriptor@61['<init>'], ... } // through LazyJavaClassMemberScope@62
    defaultType = JetTypeImpl@63['Thread']
    enumEntryIndex = LinkedHashMap@64 // through LazyJavaClassMemberScope@62
    functionTypeForSamInterface = null
    functions('block': Name@49) = EmptyList@3[empty] // through LazyJavaClassMemberScope@62
    functions('invoke': Name@51) = EmptyList@3[empty] // through LazyJavaClassMemberScope@62
    functions('plus': Name@52) = EmptyList@3[empty] // through LazyJavaClassMemberScope@62
    functions('use': Name@53) = EmptyList@3[empty] // through LazyJavaClassMemberScope@62
    memberIndex = computeMemberIndex$1@65 // through LazyJavaClassMemberScope@62
    nestedClassIndex = LinkedHashMap@66 // through LazyJavaClassMemberScope@62
    nestedClasses('block': Name@49) = null // through LazyJavaClassMemberScope@62
    nestedClasses('use': Name@53) = null // through LazyJavaClassMemberScope@62
    properties('block': Name@49) = EmptyList@3[empty] // through LazyJavaClassMemberScope@62
    properties('plus': Name@52) = EmptyList@3[empty] // through LazyJavaClassMemberScope@62
    properties('use': Name@53) = EmptyList@3[empty] // through LazyJavaClassMemberScope@62
    typeConstructor = LazyJavaClassTypeConstructor@67['Thread']
}

LazyJavaClassTypeConstructor@26['AutoCloseable'] {
    parameters = ArrayList@68[empty]
    supertypes = ArrayList@69[1] { JetTypeImpl@70['Any'] }
}

LazyJavaClassTypeConstructor@46['Closeable'] {
    parameters = ArrayList@71[empty]
    supertypes = ArrayList@72[1] { LazyJavaClassifierType@73['AutoCloseable'] }
}

LazyJavaClassTypeConstructor@56['Runnable'] {
    parameters = ArrayList@74[empty]
    supertypes = ArrayList@75[1] { JetTypeImpl@70['Any'] }
}

LazyJavaClassTypeConstructor@67['Thread'] {
    parameters = ArrayList@76[empty]
    supertypes = ArrayList@77[1] { LazyJavaClassifierType@78['Runnable'] }
}

LazyJavaClassifierType@73['AutoCloseable'] {
    arguments = ArrayList@79[empty]
    classifier = JavaClassImpl@80['AutoCloseable']
    memberScope = LazyJavaClassMemberScope@4
    typeConstructor = LazyJavaClassTypeConstructor@26['AutoCloseable']
}

LazyJavaClassifierType@81['Object'] {
    classifier = JavaClassImpl@82['Object']
    typeConstructor = DeserializedClassTypeConstructor@83
}

LazyJavaClassifierType@84['Object'] {
    classifier = JavaClassImpl@85['Object']
    typeConstructor = DeserializedClassTypeConstructor@83
}

LazyJavaClassifierType@86['Object'] {
    classifier = JavaClassImpl@87['Object']
    typeConstructor = DeserializedClassTypeConstructor@83
}

LazyJavaClassifierType@78['Runnable'] {
    arguments = ArrayList@88[empty]
    classifier = JavaClassImpl@89['Runnable']
    memberScope = LazyJavaClassMemberScope@50
    typeConstructor = LazyJavaClassTypeConstructor@56['Runnable']
}

LazyJavaClassifierType@90['Runnable'] {
    arguments = ArrayList@91[empty]
    classifier = JavaClassImpl@92['Runnable']
    nullable = 'false': Boolean@93
    typeConstructor = LazyJavaClassTypeConstructor@56['Runnable']
}

LazyJavaClassifierType@94['Runnable'] {
    arguments = ArrayList@95[empty]
    classifier = JavaClassImpl@96['Runnable']
    nullable = 'false': Boolean@93
    typeConstructor = LazyJavaClassTypeConstructor@56['Runnable']
}

LazyJavaClassifierType@97['Runnable'] {
    arguments = ArrayList@98[empty]
    classifier = JavaClassImpl@99['Runnable']
    nullable = 'false': Boolean@93
    typeConstructor = LazyJavaClassTypeConstructor@56['Runnable']
}

LazyJavaClassifierType@100['Runnable'] {
    arguments = ArrayList@101[empty]
    classifier = JavaClassImpl@102['Runnable']
    nullable = 'false': Boolean@93
    typeConstructor = LazyJavaClassTypeConstructor@56['Runnable']
}

LazyJavaClassifierType@103['Runnable'] {
    arguments = ArrayList@104[empty]
    classifier = JavaClassImpl@105['Runnable']
    nullable = 'false': Boolean@93
    typeConstructor = LazyJavaClassTypeConstructor@56['Runnable']
}

LazyJavaClassifierType@106['Runnable'] {
    arguments = ArrayList@107[empty]
    classifier = JavaClassImpl@96['Runnable']
    nullable = 'true': Boolean@108
    typeConstructor = LazyJavaClassTypeConstructor@56['Runnable']
}

LazyJavaClassifierType@109['Runnable'] {
    arguments = ArrayList@110[empty]
    classifier = JavaClassImpl@105['Runnable']
    nullable = 'true': Boolean@108
    typeConstructor = LazyJavaClassTypeConstructor@56['Runnable']
}

LazyJavaClassifierType@111['Runnable'] {
    arguments = ArrayList@112[empty]
    classifier = JavaClassImpl@92['Runnable']
    nullable = 'true': Boolean@108
    typeConstructor = LazyJavaClassTypeConstructor@56['Runnable']
}

LazyJavaClassifierType@113['Runnable'] {
    arguments = ArrayList@114[empty]
    classifier = JavaClassImpl@102['Runnable']
    nullable = 'true': Boolean@108
    typeConstructor = LazyJavaClassTypeConstructor@56['Runnable']
}

LazyJavaClassifierType@115['Runnable'] {
    arguments = ArrayList@116[empty]
    classifier = JavaClassImpl@99['Runnable']
    nullable = 'true': Boolean@108
    typeConstructor = LazyJavaClassTypeConstructor@56['Runnable']
}

LazyJavaClassifierType@117['String'] {
    arguments = ArrayList@118[empty]
    classifier = JavaClassImpl@119['String']
    nullable = 'false': Boolean@93
    typeConstructor = DeserializedClassTypeConstructor@120
}

LazyJavaClassifierType@121['String'] {
    arguments = ArrayList@122[empty]
    classifier = JavaClassImpl@123['String']
    nullable = 'false': Boolean@93
    typeConstructor = DeserializedClassTypeConstructor@120
}

LazyJavaClassifierType@124['String'] {
    arguments = ArrayList@125[empty]
    classifier = JavaClassImpl@126['String']
    nullable = 'false': Boolean@93
    typeConstructor = DeserializedClassTypeConstructor@120
}

LazyJavaClassifierType@127['String'] {
    arguments = ArrayList@128[empty]
    classifier = JavaClassImpl@129['String']
    nullable = 'false': Boolean@93
    typeConstructor = DeserializedClassTypeConstructor@120
}

LazyJavaClassifierType@130['String'] {
    arguments = ArrayList@131[empty]
    classifier = JavaClassImpl@132['String']
    nullable = 'false': Boolean@93
    typeConstructor = DeserializedClassTypeConstructor@120
}

LazyJavaClassifierType@133['String'] {
    arguments = ArrayList@134[empty]
    classifier = JavaClassImpl@129['String']
    nullable = 'true': Boolean@108
    typeConstructor = DeserializedClassTypeConstructor@120
}

LazyJavaClassifierType@135['String'] {
    arguments = ArrayList@136[empty]
    classifier = JavaClassImpl@119['String']
    nullable = 'true': Boolean@108
    typeConstructor = DeserializedClassTypeConstructor@120
}

LazyJavaClassifierType@137['String'] {
    arguments = ArrayList@138[empty]
    classifier = JavaClassImpl@126['String']
    nullable = 'true': Boolean@108
    typeConstructor = DeserializedClassTypeConstructor@120
}

LazyJavaClassifierType@139['String'] {
    arguments = ArrayList@140[empty]
    classifier = JavaClassImpl@132['String']
    nullable = 'true': Boolean@108
    typeConstructor = DeserializedClassTypeConstructor@120
}

LazyJavaClassifierType@141['String'] {
    arguments = ArrayList@142[empty]
    classifier = JavaClassImpl@123['String']
    nullable = 'true': Boolean@108
    typeConstructor = DeserializedClassTypeConstructor@120
}

LazyJavaClassifierType@143['ThreadGroup'] {
    classifier = null
    nullable = 'false': Boolean@93
    typeConstructor = TypeConstructorImpl$1@144
}

LazyJavaClassifierType@145['ThreadGroup'] {
    classifier = null
    nullable = 'false': Boolean@93
    typeConstructor = TypeConstructorImpl$1@146
}

LazyJavaClassifierType@147['ThreadGroup'] {
    classifier = null
    nullable = 'false': Boolean@93
    typeConstructor = TypeConstructorImpl$1@148
}

LazyJavaClassifierType@149['ThreadGroup'] {
    classifier = null
    nullable = 'false': Boolean@93
    typeConstructor = TypeConstructorImpl$1@150
}

LazyJavaClassifierType@151['ThreadGroup'] {
    nullable = 'true': Boolean@108
}

LazyJavaClassifierType@152['ThreadGroup'] {
    nullable = 'true': Boolean@108
}

LazyJavaClassifierType@153['ThreadGroup'] {
    nullable = 'true': Boolean@108
}

LazyJavaClassifierType@154['ThreadGroup'] {
    nullable = 'true': Boolean@108
}

LazyJavaPackageFragmentProvider@155 {
    packageFragments('<root>': FqName@156) = LazyJavaPackageFragment@157['<root>']
    packageFragments('Array': FqName@158) = null
    packageFragments('Closeable': FqName@159) = null
    packageFragments('Int': FqName@160) = null
    packageFragments('R': FqName@161) = null
    packageFragments('String': FqName@162) = null
    packageFragments('T': FqName@163) = null
    packageFragments('Thread': FqName@164) = null
    packageFragments('Unit': FqName@165) = null
    packageFragments('java': FqName@166) = LazyJavaPackageFragment@167['java']
    packageFragments('java.io': FqName@168) = LazyJavaPackageFragment@169['io']
    packageFragments('java.io.Closeable': FqName@170) = null
    packageFragments('java.lang': FqName@171) = LazyJavaPackageFragment@172['lang']
    packageFragments('java.lang.Array': FqName@173) = null
    packageFragments('java.lang.Closeable': FqName@174) = null
    packageFragments('java.lang.Int': FqName@175) = null
    packageFragments('java.lang.R': FqName@176) = null
    packageFragments('java.lang.String': FqName@177) = null
    packageFragments('java.lang.T': FqName@178) = null
    packageFragments('java.lang.Thread': FqName@179) = null
    packageFragments('java.lang.Unit': FqName@180) = null
    packageFragments('kotlin': FqName@181) = null
    packageFragments('kotlin.Array': FqName@182) = null
    packageFragments('kotlin.Closeable': FqName@183) = null
    packageFragments('kotlin.Int': FqName@184) = null
    packageFragments('kotlin.R': FqName@185) = null
    packageFragments('kotlin.String': FqName@186) = null
    packageFragments('kotlin.T': FqName@187) = null
    packageFragments('kotlin.Thread': FqName@188) = null
    packageFragments('kotlin.Unit': FqName@189) = null
    packageFragments('kotlin.io': FqName@190) = null
    packageFragments('kotlin.jvm': FqName@191) = null
    packageFragments('kt2514': FqName@192) = null
    packageFragments('kt2514.Array': FqName@193) = null
    packageFragments('kt2514.Closeable': FqName@194) = null
    packageFragments('kt2514.Int': FqName@195) = null
    packageFragments('kt2514.R': FqName@196) = null
    packageFragments('kt2514.String': FqName@197) = null
    packageFragments('kt2514.T': FqName@198) = null
    packageFragments('kt2514.Thread': FqName@199) = null
    packageFragments('kt2514.Unit': FqName@200) = null
    topLevelClasses(JavaClassImpl@80['AutoCloseable']) = LazyJavaClassDescriptor@0['AutoCloseable']
    topLevelClasses(JavaClassImpl@201['Closeable']) = LazyJavaClassDescriptor@27['Closeable']
    topLevelClasses(JavaClassImpl@89['Runnable']) = LazyJavaClassDescriptor@47['Runnable']
    topLevelClasses(JavaClassImpl@202['Thread']) = LazyJavaClassDescriptor@57['Thread']
}

LazyJavaPackageFragment@169['io'] {
    classes('Closeable': Name@203) = LazyJavaClassDescriptor@27['Closeable'] // through LazyPackageFragmentScopeForJavaPackage@204
    deserializedPackageScope = Empty@205 // through LazyPackageFragmentScopeForJavaPackage@204
    functions('Closeable': Name@206) = ArrayList@207[1] { SamConstructorDescriptor@208['Closeable'] } // through LazyPackageFragmentScopeForJavaPackage@204
    memberIndex = computeMemberIndex$1@209 // through LazyPackageFragmentScopeForJavaPackage@204
}

LazyJavaPackageFragment@167['java'] {
    classes('io': Name@210) = null // through LazyPackageFragmentScopeForJavaPackage@211
    classes('lang': Name@212) = null // through LazyPackageFragmentScopeForJavaPackage@211
    deserializedPackageScope = Empty@205 // through LazyPackageFragmentScopeForJavaPackage@211
    functions('io': Name@213) = EmptyList@3[empty] // through LazyPackageFragmentScopeForJavaPackage@211
    functions('lang': Name@214) = EmptyList@3[empty] // through LazyPackageFragmentScopeForJavaPackage@211
    memberIndex = computeMemberIndex$1@215 // through LazyPackageFragmentScopeForJavaPackage@211
}

LazyJavaPackageFragment@172['lang'] {
    classes('Thread': Name@216) = LazyJavaClassDescriptor@57['Thread'] // through LazyPackageFragmentScopeForJavaPackage@217
    classes('block': Name@49) = null // through LazyPackageFragmentScopeForJavaPackage@217
    classes('invoke': Name@51) = null // through LazyPackageFragmentScopeForJavaPackage@217
    classes('plus': Name@52) = null // through LazyPackageFragmentScopeForJavaPackage@217
    classes('use': Name@53) = null // through LazyPackageFragmentScopeForJavaPackage@217
    deserializedPackageScope = Empty@205 // through LazyPackageFragmentScopeForJavaPackage@217
    functions('Thread': Name@218) = EmptyList@3[empty] // through LazyPackageFragmentScopeForJavaPackage@217
    functions('block': Name@49) = EmptyList@3[empty] // through LazyPackageFragmentScopeForJavaPackage@217
    functions('invoke': Name@51) = EmptyList@3[empty] // through LazyPackageFragmentScopeForJavaPackage@217
    functions('plus': Name@52) = EmptyList@3[empty] // through LazyPackageFragmentScopeForJavaPackage@217
    functions('use': Name@53) = EmptyList@3[empty] // through LazyPackageFragmentScopeForJavaPackage@217
    memberIndex = computeMemberIndex$1@219 // through LazyPackageFragmentScopeForJavaPackage@217
}
