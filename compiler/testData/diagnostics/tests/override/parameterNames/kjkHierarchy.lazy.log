LazyJavaClassDescriptor@0['Sub'] {
    allDescriptors = ArrayList@1[4] { DeserializedSimpleFunctionDescriptor@2['hashCode'], SimpleFunctionDescriptorImpl@3['foo'], DeserializedSimpleFunctionDescriptor@4['toString'], ... } // through LazyJavaClassMemberScope@5
    constructors = stdlib_emptyListClass@6[empty] // through LazyJavaClassMemberScope@5
    defaultType = JetTypeImpl@7['Sub']
    enumEntryIndex = LinkedHashMap@8 // through LazyJavaClassMemberScope@5
    functions('clone': Name@9) = EmptyList@10[empty] // through LazyJavaClassMemberScope@5
    functions('equals': Name@11) = ArrayList@12[1] { DeserializedSimpleFunctionDescriptor@13['equals'] } // through LazyJavaClassMemberScope@5
    functions('finalize': Name@14) = EmptyList@10[empty] // through LazyJavaClassMemberScope@5
    functions('foo': Name@15) = ArrayList@16[1] { SimpleFunctionDescriptorImpl@3['foo'] } // through LazyJavaClassMemberScope@5
    functions('getClass': Name@17) = EmptyList@10[empty] // through LazyJavaClassMemberScope@5
    functions('hashCode': Name@18) = ArrayList@19[1] { DeserializedSimpleFunctionDescriptor@2['hashCode'] } // through LazyJavaClassMemberScope@5
    functions('notify': Name@20) = EmptyList@10[empty] // through LazyJavaClassMemberScope@5
    functions('notifyAll': Name@21) = EmptyList@10[empty] // through LazyJavaClassMemberScope@5
    functions('toString': Name@22) = ArrayList@23[1] { DeserializedSimpleFunctionDescriptor@4['toString'] } // through LazyJavaClassMemberScope@5
    functions('wait': Name@24) = EmptyList@10[empty] // through LazyJavaClassMemberScope@5
    memberIndex = computeMemberIndex$1@25 // through LazyJavaClassMemberScope@5
    nestedClassIndex = LinkedHashMap@26 // through LazyJavaClassMemberScope@5
    typeConstructor = LazyJavaClassTypeConstructor@27['Sub']
}

LazyJavaClassTypeConstructor@27['Sub'] {
    parameters = ArrayList@28[empty]
    supertypes = ArrayList@29[1] { LazyJavaClassifierType@30['Super'] }
}

LazyJavaClassifierType@30['Super'] {
    arguments = ArrayList@31[empty]
    classifier = JavaClassImpl@32['Super']
    memberScope = WritableScopeImpl@33
    nullable = 'false': Boolean@34
    typeConstructor = TypeConstructorImpl$1@35
}

LazyJavaPackageFragmentProvider@36 {
    packageFragments('<root>': FqName@37) = LazyJavaPackageFragment@38['<root>']
    packageFragments('Int': FqName@39) = null
    packageFragments('Sub': FqName@40) = null
    packageFragments('SubSub': FqName@41) = null
    packageFragments('Super': FqName@42) = null
    packageFragments('java': FqName@43) = LazyJavaPackageFragment@44['java']
    packageFragments('java.lang': FqName@45) = LazyJavaPackageFragment@46['lang']
    packageFragments('java.lang.Int': FqName@47) = null
    packageFragments('java.lang.Sub': FqName@48) = null
    packageFragments('kotlin': FqName@49) = null
    packageFragments('kotlin.Int': FqName@50) = null
    packageFragments('kotlin.Sub': FqName@51) = null
    packageFragments('kotlin.io': FqName@52) = null
    packageFragments('kotlin.jvm': FqName@53) = null
    topLevelClasses(JavaClassImpl@54['Sub']) = LazyJavaClassDescriptor@0['Sub']
}

LazyJavaPackageFragment@38['<root>'] {
    classes('Int': Name@55) = null // through LazyPackageFragmentScopeForJavaPackage@56
    classes('Sub': Name@57) = LazyJavaClassDescriptor@0['Sub'] // through LazyPackageFragmentScopeForJavaPackage@56
}

LazyJavaPackageFragment@44['java'] {
    classes('lang': Name@58) = null // through LazyPackageFragmentScopeForJavaPackage@59
    deserializedPackageScope = Empty@60 // through LazyPackageFragmentScopeForJavaPackage@59
    functions('lang': Name@61) = EmptyList@10[empty] // through LazyPackageFragmentScopeForJavaPackage@59
    memberIndex = computeMemberIndex$1@62 // through LazyPackageFragmentScopeForJavaPackage@59
}
