/*
 * Copyright 2010-2014 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.jetbrains.k2js.test.semantics;

import com.intellij.testFramework.TestDataPath;
import junit.framework.Test;
import junit.framework.TestSuite;
import org.junit.runner.RunWith;
import org.jetbrains.jet.JetTestUtils;
import org.jetbrains.jet.test.InnerTestClasses;
import org.jetbrains.jet.test.TestMetadata;
import org.jetbrains.jet.JUnit3RunnerWithInners;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.jet.generators.tests.TestsPackage}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("js/js.translator/testData/reservedWords/cases")
@TestDataPath("$PROJECT_ROOT")
@RunWith(org.jetbrains.jet.JUnit3RunnerWithInners.class)
public class ReservedWordTestGenerated extends AbstractReservedWordTest {
    public void testAllFilesPresentInCases() throws Exception {
        JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("js/js.translator/testData/reservedWords/cases"), Pattern.compile("^(.+)\\.kt$"), true);
    }
    
    @TestMetadata("dataClassParamArguments.kt")
    public void testDataClassParamArguments() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/dataClassParamArguments.kt");
        doTest(fileName);
    }
    
    @TestMetadata("dataClassParamAwait.kt")
    public void testDataClassParamAwait() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/dataClassParamAwait.kt");
        doTest(fileName);
    }
    
    @TestMetadata("dataClassParamPackage.kt")
    public void testDataClassParamPackage() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/dataClassParamPackage.kt");
        doTest(fileName);
    }
    
    @TestMetadata("dataClassParamReturn.kt")
    public void testDataClassParamReturn() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/dataClassParamReturn.kt");
        doTest(fileName);
    }
    
    @TestMetadata("dataClassValFalse.kt")
    public void testDataClassValFalse() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/dataClassValFalse.kt");
        doTest(fileName);
    }
    
    @TestMetadata("dataClassValFinally.kt")
    public void testDataClassValFinally() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/dataClassValFinally.kt");
        doTest(fileName);
    }
    
    @TestMetadata("dataClassValVoid.kt")
    public void testDataClassValVoid() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/dataClassValVoid.kt");
        doTest(fileName);
    }
    
    @TestMetadata("dataClassValWith.kt")
    public void testDataClassValWith() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/dataClassValWith.kt");
        doTest(fileName);
    }
    
    @TestMetadata("dataClassVarIf.kt")
    public void testDataClassVarIf() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/dataClassVarIf.kt");
        doTest(fileName);
    }
    
    @TestMetadata("dataClassVarIn.kt")
    public void testDataClassVarIn() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/dataClassVarIn.kt");
        doTest(fileName);
    }
    
    @TestMetadata("dataClassVarInfinity.kt")
    public void testDataClassVarInfinity() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/dataClassVarInfinity.kt");
        doTest(fileName);
    }
    
    @TestMetadata("dataClassVarKotlin.kt")
    public void testDataClassVarKotlin() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/dataClassVarKotlin.kt");
        doTest(fileName);
    }
    
    @TestMetadata("delegatedFunBreak.kt")
    public void testDelegatedFunBreak() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedFunBreak.kt");
        doTest(fileName);
    }
    
    @TestMetadata("delegatedFunCatch.kt")
    public void testDelegatedFunCatch() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedFunCatch.kt");
        doTest(fileName);
    }
    
    @TestMetadata("delegatedFunExport.kt")
    public void testDelegatedFunExport() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedFunExport.kt");
        doTest(fileName);
    }
    
    @TestMetadata("delegatedFunExtends.kt")
    public void testDelegatedFunExtends() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedFunExtends.kt");
        doTest(fileName);
    }
    
    @TestMetadata("delegatedFunParamContinue.kt")
    public void testDelegatedFunParamContinue() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedFunParamContinue.kt");
        doTest(fileName);
    }
    
    @TestMetadata("delegatedFunParamDo.kt")
    public void testDelegatedFunParamDo() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedFunParamDo.kt");
        doTest(fileName);
    }
    
    @TestMetadata("delegatedFunParamImplements.kt")
    public void testDelegatedFunParamImplements() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedFunParamImplements.kt");
        doTest(fileName);
    }
    
    @TestMetadata("delegatedFunParamImport.kt")
    public void testDelegatedFunParamImport() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedFunParamImport.kt");
        doTest(fileName);
    }
    
    @TestMetadata("delegatedLabelFalse.kt")
    public void testDelegatedLabelFalse() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedLabelFalse.kt");
        doTest(fileName);
    }
    
    @TestMetadata("delegatedLabelFinally.kt")
    public void testDelegatedLabelFinally() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedLabelFinally.kt");
        doTest(fileName);
    }
    
    @TestMetadata("delegatedLabelInterface.kt")
    public void testDelegatedLabelInterface() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedLabelInterface.kt");
        doTest(fileName);
    }
    
    @TestMetadata("delegatedLabelLet.kt")
    public void testDelegatedLabelLet() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedLabelLet.kt");
        doTest(fileName);
    }
    
    @TestMetadata("delegatedValConst.kt")
    public void testDelegatedValConst() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedValConst.kt");
        doTest(fileName);
    }
    
    @TestMetadata("delegatedValDebugger.kt")
    public void testDelegatedValDebugger() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedValDebugger.kt");
        doTest(fileName);
    }
    
    @TestMetadata("delegatedValThis.kt")
    public void testDelegatedValThis() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedValThis.kt");
        doTest(fileName);
    }
    
    @TestMetadata("delegatedValThrow.kt")
    public void testDelegatedValThrow() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedValThrow.kt");
        doTest(fileName);
    }
    
    @TestMetadata("delegatedVarDelete.kt")
    public void testDelegatedVarDelete() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedVarDelete.kt");
        doTest(fileName);
    }
    
    @TestMetadata("delegatedVarEnum.kt")
    public void testDelegatedVarEnum() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedVarEnum.kt");
        doTest(fileName);
    }
    
    @TestMetadata("delegatedVarTry.kt")
    public void testDelegatedVarTry() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedVarTry.kt");
        doTest(fileName);
    }
    
    @TestMetadata("delegatedVarVar.kt")
    public void testDelegatedVarVar() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedVarVar.kt");
        doTest(fileName);
    }
    
    @TestMetadata("enumEntryCase.kt")
    public void testEnumEntryCase() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumEntryCase.kt");
        doTest(fileName);
    }
    
    @TestMetadata("enumEntryConst.kt")
    public void testEnumEntryConst() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumEntryConst.kt");
        doTest(fileName);
    }
    
    @TestMetadata("enumEntryContinue.kt")
    public void testEnumEntryContinue() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumEntryContinue.kt");
        doTest(fileName);
    }
    
    @TestMetadata("enumEntryDo.kt")
    public void testEnumEntryDo() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumEntryDo.kt");
        doTest(fileName);
    }
    
    @TestMetadata("enumFunParamInfinity.kt")
    public void testEnumFunParamInfinity() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumFunParamInfinity.kt");
        doTest(fileName);
    }
    
    @TestMetadata("enumFunParamTry.kt")
    public void testEnumFunParamTry() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumFunParamTry.kt");
        doTest(fileName);
    }
    
    @TestMetadata("enumFunParamVar.kt")
    public void testEnumFunParamVar() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumFunParamVar.kt");
        doTest(fileName);
    }
    
    @TestMetadata("enumFunParamYield.kt")
    public void testEnumFunParamYield() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumFunParamYield.kt");
        doTest(fileName);
    }
    
    @TestMetadata("enumFunThis.kt")
    public void testEnumFunThis() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumFunThis.kt");
        doTest(fileName);
    }
    
    @TestMetadata("enumFunThrow.kt")
    public void testEnumFunThrow() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumFunThrow.kt");
        doTest(fileName);
    }
    
    @TestMetadata("enumFunUndefined.kt")
    public void testEnumFunUndefined() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumFunUndefined.kt");
        doTest(fileName);
    }
    
    @TestMetadata("enumFunVoid.kt")
    public void testEnumFunVoid() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumFunVoid.kt");
        doTest(fileName);
    }
    
    @TestMetadata("enumLabelArguments.kt")
    public void testEnumLabelArguments() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumLabelArguments.kt");
        doTest(fileName);
    }
    
    @TestMetadata("enumLabelBreak.kt")
    public void testEnumLabelBreak() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumLabelBreak.kt");
        doTest(fileName);
    }
    
    @TestMetadata("enumLabelCatch.kt")
    public void testEnumLabelCatch() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumLabelCatch.kt");
        doTest(fileName);
    }
    
    @TestMetadata("enumLabelNaN.kt")
    public void testEnumLabelNaN() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumLabelNaN.kt");
        doTest(fileName);
    }
    
    @TestMetadata("enumValIf.kt")
    public void testEnumValIf() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumValIf.kt");
        doTest(fileName);
    }
    
    @TestMetadata("enumValIn.kt")
    public void testEnumValIn() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumValIn.kt");
        doTest(fileName);
    }
    
    @TestMetadata("enumValPrivate.kt")
    public void testEnumValPrivate() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumValPrivate.kt");
        doTest(fileName);
    }
    
    @TestMetadata("enumValProtected.kt")
    public void testEnumValProtected() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumValProtected.kt");
        doTest(fileName);
    }
    
    @TestMetadata("enumVarPackage.kt")
    public void testEnumVarPackage() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumVarPackage.kt");
        doTest(fileName);
    }
    
    @TestMetadata("enumVarReturn.kt")
    public void testEnumVarReturn() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumVarReturn.kt");
        doTest(fileName);
    }
    
    @TestMetadata("enumVarStatic.kt")
    public void testEnumVarStatic() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumVarStatic.kt");
        doTest(fileName);
    }
    
    @TestMetadata("enumVarSwitch.kt")
    public void testEnumVarSwitch() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumVarSwitch.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassFunIf.kt")
    public void testInsideClassFunIf() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassFunIf.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassFunIn.kt")
    public void testInsideClassFunIn() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassFunIn.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassFunNew.kt")
    public void testInsideClassFunNew() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassFunNew.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassFunParamPackage.kt")
    public void testInsideClassFunParamPackage() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassFunParamPackage.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassFunParamPublic.kt")
    public void testInsideClassFunParamPublic() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassFunParamPublic.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassFunParamReturn.kt")
    public void testInsideClassFunParamReturn() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassFunParamReturn.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassFunParamStatic.kt")
    public void testInsideClassFunParamStatic() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassFunParamStatic.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassFunPrivate.kt")
    public void testInsideClassFunPrivate() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassFunPrivate.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassLabelThis.kt")
    public void testInsideClassLabelThis() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassLabelThis.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassLabelThrow.kt")
    public void testInsideClassLabelThrow() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassLabelThrow.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassLabelTypeof.kt")
    public void testInsideClassLabelTypeof() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassLabelTypeof.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassLabelUndefined.kt")
    public void testInsideClassLabelUndefined() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassLabelUndefined.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassObjectFunAwait.kt")
    public void testInsideClassObjectFunAwait() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectFunAwait.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassObjectFunCase.kt")
    public void testInsideClassObjectFunCase() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectFunCase.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassObjectFunContinue.kt")
    public void testInsideClassObjectFunContinue() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectFunContinue.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassObjectFunDo.kt")
    public void testInsideClassObjectFunDo() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectFunDo.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassObjectFunParamDebugger.kt")
    public void testInsideClassObjectFunParamDebugger() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectFunParamDebugger.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassObjectFunParamDefault.kt")
    public void testInsideClassObjectFunParamDefault() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectFunParamDefault.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassObjectFunParamFalse.kt")
    public void testInsideClassObjectFunParamFalse() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectFunParamFalse.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassObjectFunParamFinally.kt")
    public void testInsideClassObjectFunParamFinally() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectFunParamFinally.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassObjectLabelEnum.kt")
    public void testInsideClassObjectLabelEnum() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectLabelEnum.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassObjectLabelEval.kt")
    public void testInsideClassObjectLabelEval() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectLabelEval.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassObjectLabelIf.kt")
    public void testInsideClassObjectLabelIf() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectLabelIf.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassObjectLabelIn.kt")
    public void testInsideClassObjectLabelIn() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectLabelIn.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassObjectValTry.kt")
    public void testInsideClassObjectValTry() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectValTry.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassObjectValVar.kt")
    public void testInsideClassObjectValVar() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectValVar.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassObjectValWith.kt")
    public void testInsideClassObjectValWith() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectValWith.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassObjectValYield.kt")
    public void testInsideClassObjectValYield() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectValYield.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassObjectVarBreak.kt")
    public void testInsideClassObjectVarBreak() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectVarBreak.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassObjectVarCatch.kt")
    public void testInsideClassObjectVarCatch() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectVarCatch.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassObjectVarKotlin.kt")
    public void testInsideClassObjectVarKotlin() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectVarKotlin.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassObjectVarNaN.kt")
    public void testInsideClassObjectVarNaN() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectVarNaN.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassValContinue.kt")
    public void testInsideClassValContinue() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassValContinue.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassValDo.kt")
    public void testInsideClassValDo() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassValDo.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassValFunction.kt")
    public void testInsideClassValFunction() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassValFunction.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassValImplements.kt")
    public void testInsideClassValImplements() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassValImplements.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassVarFalse.kt")
    public void testInsideClassVarFalse() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassVarFalse.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassVarFinally.kt")
    public void testInsideClassVarFinally() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassVarFinally.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassVarInstanceof.kt")
    public void testInsideClassVarInstanceof() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassVarInstanceof.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideClassVarInterface.kt")
    public void testInsideClassVarInterface() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassVarInterface.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideObjectFunLet.kt")
    public void testInsideObjectFunLet() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectFunLet.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideObjectFunNew.kt")
    public void testInsideObjectFunNew() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectFunNew.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideObjectFunParamBreak.kt")
    public void testInsideObjectFunParamBreak() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectFunParamBreak.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideObjectFunParamCatch.kt")
    public void testInsideObjectFunParamCatch() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectFunParamCatch.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideObjectFunParamProtected.kt")
    public void testInsideObjectFunParamProtected() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectFunParamProtected.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideObjectFunParamPublic.kt")
    public void testInsideObjectFunParamPublic() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectFunParamPublic.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideObjectFunTry.kt")
    public void testInsideObjectFunTry() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectFunTry.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideObjectFunVar.kt")
    public void testInsideObjectFunVar() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectFunVar.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideObjectLabelContinue.kt")
    public void testInsideObjectLabelContinue() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectLabelContinue.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideObjectLabelDo.kt")
    public void testInsideObjectLabelDo() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectLabelDo.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideObjectLabelSwitch.kt")
    public void testInsideObjectLabelSwitch() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectLabelSwitch.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideObjectLabelTypeof.kt")
    public void testInsideObjectLabelTypeof() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectLabelTypeof.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideObjectValExtends.kt")
    public void testInsideObjectValExtends() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectValExtends.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideObjectValFunction.kt")
    public void testInsideObjectValFunction() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectValFunction.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideObjectValPackage.kt")
    public void testInsideObjectValPackage() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectValPackage.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideObjectValReturn.kt")
    public void testInsideObjectValReturn() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectValReturn.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideObjectVarImport.kt")
    public void testInsideObjectVarImport() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectVarImport.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideObjectVarInstanceof.kt")
    public void testInsideObjectVarInstanceof() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectVarInstanceof.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideObjectVarThis.kt")
    public void testInsideObjectVarThis() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectVarThis.kt");
        doTest(fileName);
    }
    
    @TestMetadata("insideObjectVarThrow.kt")
    public void testInsideObjectVarThrow() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectVarThrow.kt");
        doTest(fileName);
    }
    
    @TestMetadata("localCatchBreak.kt")
    public void testLocalCatchBreak() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localCatchBreak.kt");
        doTest(fileName);
    }
    
    @TestMetadata("localCatchCatch.kt")
    public void testLocalCatchCatch() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localCatchCatch.kt");
        doTest(fileName);
    }
    
    @TestMetadata("localCatchEval.kt")
    public void testLocalCatchEval() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localCatchEval.kt");
        doTest(fileName);
    }
    
    @TestMetadata("localCatchExport.kt")
    public void testLocalCatchExport() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localCatchExport.kt");
        doTest(fileName);
    }
    
    @TestMetadata("localFunArguments.kt")
    public void testLocalFunArguments() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localFunArguments.kt");
        doTest(fileName);
    }
    
    @TestMetadata("localFunNaN.kt")
    public void testLocalFunNaN() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localFunNaN.kt");
        doTest(fileName);
    }
    
    @TestMetadata("localFunPackage.kt")
    public void testLocalFunPackage() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localFunPackage.kt");
        doTest(fileName);
    }
    
    @TestMetadata("localFunParamCase.kt")
    public void testLocalFunParamCase() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localFunParamCase.kt");
        doTest(fileName);
    }
    
    @TestMetadata("localFunParamConst.kt")
    public void testLocalFunParamConst() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localFunParamConst.kt");
        doTest(fileName);
    }
    
    @TestMetadata("localFunParamThis.kt")
    public void testLocalFunParamThis() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localFunParamThis.kt");
        doTest(fileName);
    }
    
    @TestMetadata("localFunParamThrow.kt")
    public void testLocalFunParamThrow() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localFunParamThrow.kt");
        doTest(fileName);
    }
    
    @TestMetadata("localFunReturn.kt")
    public void testLocalFunReturn() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localFunReturn.kt");
        doTest(fileName);
    }
    
    @TestMetadata("localLabelDefault.kt")
    public void testLocalLabelDefault() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localLabelDefault.kt");
        doTest(fileName);
    }
    
    @TestMetadata("localLabelDelete.kt")
    public void testLocalLabelDelete() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localLabelDelete.kt");
        doTest(fileName);
    }
    
    @TestMetadata("localLabelTry.kt")
    public void testLocalLabelTry() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localLabelTry.kt");
        doTest(fileName);
    }
    
    @TestMetadata("localLabelVar.kt")
    public void testLocalLabelVar() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localLabelVar.kt");
        doTest(fileName);
    }
    
    @TestMetadata("localValFalse.kt")
    public void testLocalValFalse() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localValFalse.kt");
        doTest(fileName);
    }
    
    @TestMetadata("localValFinally.kt")
    public void testLocalValFinally() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localValFinally.kt");
        doTest(fileName);
    }
    
    @TestMetadata("localValUndefined.kt")
    public void testLocalValUndefined() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localValUndefined.kt");
        doTest(fileName);
    }
    
    @TestMetadata("localValVoid.kt")
    public void testLocalValVoid() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localValVoid.kt");
        doTest(fileName);
    }
    
    @TestMetadata("localVarIf.kt")
    public void testLocalVarIf() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localVarIf.kt");
        doTest(fileName);
    }
    
    @TestMetadata("localVarIn.kt")
    public void testLocalVarIn() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localVarIn.kt");
        doTest(fileName);
    }
    
    @TestMetadata("localVarInfinity.kt")
    public void testLocalVarInfinity() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localVarInfinity.kt");
        doTest(fileName);
    }
    
    @TestMetadata("localVarYield.kt")
    public void testLocalVarYield() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localVarYield.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelClassImplements.kt")
    public void testToplevelClassImplements() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelClassImplements.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelClassImport.kt")
    public void testToplevelClassImport() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelClassImport.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelClassThis.kt")
    public void testToplevelClassThis() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelClassThis.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelClassThrow.kt")
    public void testToplevelClassThrow() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelClassThrow.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelEnumBreak.kt")
    public void testToplevelEnumBreak() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelEnumBreak.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelEnumCatch.kt")
    public void testToplevelEnumCatch() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelEnumCatch.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelEnumPrivate.kt")
    public void testToplevelEnumPrivate() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelEnumPrivate.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelEnumProtected.kt")
    public void testToplevelEnumProtected() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelEnumProtected.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelFunConst.kt")
    public void testToplevelFunConst() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelFunConst.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelFunDebugger.kt")
    public void testToplevelFunDebugger() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelFunDebugger.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelFunFalse.kt")
    public void testToplevelFunFalse() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelFunFalse.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelFunFinally.kt")
    public void testToplevelFunFinally() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelFunFinally.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelFunParamDelete.kt")
    public void testToplevelFunParamDelete() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelFunParamDelete.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelFunParamEnum.kt")
    public void testToplevelFunParamEnum() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelFunParamEnum.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelFunParamIf.kt")
    public void testToplevelFunParamIf() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelFunParamIf.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelFunParamIn.kt")
    public void testToplevelFunParamIn() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelFunParamIn.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelLabelExport.kt")
    public void testToplevelLabelExport() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelLabelExport.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelLabelExtends.kt")
    public void testToplevelLabelExtends() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelLabelExtends.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelLabelPackage.kt")
    public void testToplevelLabelPackage() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelLabelPackage.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelLabelReturn.kt")
    public void testToplevelLabelReturn() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelLabelReturn.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelObjectContinue.kt")
    public void testToplevelObjectContinue() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelObjectContinue.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelObjectDo.kt")
    public void testToplevelObjectDo() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelObjectDo.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelObjectStatic.kt")
    public void testToplevelObjectStatic() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelObjectStatic.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelObjectSwitch.kt")
    public void testToplevelObjectSwitch() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelObjectSwitch.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelTraitInterface.kt")
    public void testToplevelTraitInterface() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelTraitInterface.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelTraitLet.kt")
    public void testToplevelTraitLet() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelTraitLet.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelTraitTry.kt")
    public void testToplevelTraitTry() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelTraitTry.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelTraitVar.kt")
    public void testToplevelTraitVar() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelTraitVar.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelValBreak.kt")
    public void testToplevelValBreak() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelValBreak.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelValCatch.kt")
    public void testToplevelValCatch() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelValCatch.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelValInfinity.kt")
    public void testToplevelValInfinity() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelValInfinity.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelValKotlin.kt")
    public void testToplevelValKotlin() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelValKotlin.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelVarArguments.kt")
    public void testToplevelVarArguments() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelVarArguments.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelVarAwait.kt")
    public void testToplevelVarAwait() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelVarAwait.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelVarContinue.kt")
    public void testToplevelVarContinue() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelVarContinue.kt");
        doTest(fileName);
    }
    
    @TestMetadata("toplevelVarDo.kt")
    public void testToplevelVarDo() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelVarDo.kt");
        doTest(fileName);
    }
    
}
