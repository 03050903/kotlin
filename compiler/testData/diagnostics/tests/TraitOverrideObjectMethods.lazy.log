LazyJavaClassDescriptor@0['Class'] {
    typeConstructor = LazyJavaClassTypeConstructor@1['Class']
}

LazyJavaClassDescriptor@2['Object'] {
    allDescriptors = ArrayList@3[11] { JavaMethodDescriptor@4['notifyAll'], JavaMethodDescriptor@5['notify'], JavaMethodDescriptor@6['hashCode'], ... } // through LazyJavaClassMemberScope@7
    defaultType = JetTypeImpl@8['Object']
    enumEntryIndex = LinkedHashMap@9 // through LazyJavaClassMemberScope@7
    functions('clone': Name@10) = ArrayList@11[1] { JavaMethodDescriptor@12['clone'] } // through LazyJavaClassMemberScope@7
    functions('equals': Name@13) = ArrayList@14[1] { JavaMethodDescriptor@15['equals'] } // through LazyJavaClassMemberScope@7
    functions('finalize': Name@16) = ArrayList@17[1] { JavaMethodDescriptor@18['finalize'] } // through LazyJavaClassMemberScope@7
    functions('getClass': Name@19) = ArrayList@20[1] { JavaMethodDescriptor@21['getClass'] } // through LazyJavaClassMemberScope@7
    functions('hashCode': Name@22) = ArrayList@23[1] { JavaMethodDescriptor@6['hashCode'] } // through LazyJavaClassMemberScope@7
    functions('notify': Name@24) = ArrayList@25[1] { JavaMethodDescriptor@5['notify'] } // through LazyJavaClassMemberScope@7
    functions('notifyAll': Name@26) = ArrayList@27[1] { JavaMethodDescriptor@4['notifyAll'] } // through LazyJavaClassMemberScope@7
    functions('toString': Name@28) = ArrayList@29[1] { JavaMethodDescriptor@30['toString'] } // through LazyJavaClassMemberScope@7
    functions('wait': Name@31) = ArrayList@32[3] { JavaMethodDescriptor@33['wait'], JavaMethodDescriptor@34['wait'], JavaMethodDescriptor@35['wait'] } // through LazyJavaClassMemberScope@7
    memberIndex = computeMemberIndex$1@36 // through LazyJavaClassMemberScope@7
    nestedClassIndex = LinkedHashMap@37 // through LazyJavaClassMemberScope@7
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@38['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@39['Object']
}

LazyJavaClassTypeConstructor@1['Class'] {
    parameters = ArrayList@40[1] { LazyJavaTypeParameterDescriptor@41['T'] }
}

LazyJavaClassTypeConstructor@39['Object'] {
    parameters = ArrayList@42[empty]
    supertypes = ArrayList@43[1] { JetTypeImpl@44['Any'] }
}

LazyJavaClassifierType@45['Class<?>'] {
    arguments = ArrayList@46[1] { LazyStarProjection@47 }
    classifier = JavaClassImpl@48['Class']
    nullable = 'false': Boolean@49
    typeConstructor = LazyJavaClassTypeConstructor@1['Class']
}

LazyJavaClassifierType@50['Class<?>'] {
    arguments = ArrayList@51[1] { LazyStarProjection@52 }
    classifier = JavaClassImpl@48['Class']
    nullable = 'true': Boolean@53
    typeConstructor = LazyJavaClassTypeConstructor@1['Class']
}

LazyJavaClassifierType@54['Object'] {
    arguments = ArrayList@55[empty]
    classifier = JavaClassImpl@56['Object']
    nullable = 'false': Boolean@49
    typeConstructor = DeserializedClassTypeConstructor@57
}

LazyJavaClassifierType@58['Object'] {
    arguments = ArrayList@59[empty]
    classifier = JavaClassImpl@60['Object']
    nullable = 'false': Boolean@49
    typeConstructor = DeserializedClassTypeConstructor@57
}

LazyJavaClassifierType@61['Object'] {
    arguments = ArrayList@62[empty]
    classifier = JavaClassImpl@56['Object']
    nullable = 'true': Boolean@53
    typeConstructor = DeserializedClassTypeConstructor@57
}

LazyJavaClassifierType@63['Object'] {
    arguments = ArrayList@64[empty]
    classifier = JavaClassImpl@60['Object']
    nullable = 'true': Boolean@53
    typeConstructor = DeserializedClassTypeConstructor@57
}

LazyJavaClassifierType@65['String'] {
    arguments = ArrayList@66[empty]
    classifier = JavaClassImpl@67['String']
    nullable = 'false': Boolean@49
    typeConstructor = DeserializedClassTypeConstructor@68
}

LazyJavaClassifierType@69['String'] {
    arguments = ArrayList@70[empty]
    classifier = JavaClassImpl@67['String']
    nullable = 'true': Boolean@53
    typeConstructor = DeserializedClassTypeConstructor@68
}

LazyJavaPackageFragmentProvider@71 {
    packageFragments('<root>': FqName@72) = LazyJavaPackageFragment@73['<root>']
    packageFragments('MyTrait': FqName@74) = null
    packageFragments('Object': FqName@75) = null
    packageFragments('String': FqName@76) = null
    packageFragments('java': FqName@77) = LazyJavaPackageFragment@78['java']
    packageFragments('java.lang': FqName@79) = LazyJavaPackageFragment@80['lang']
    packageFragments('java.lang.Object': FqName@81) = null
    packageFragments('java.lang.String': FqName@82) = null
    packageFragments('kotlin': FqName@83) = null
    packageFragments('kotlin.Object': FqName@84) = null
    packageFragments('kotlin.String': FqName@85) = null
    packageFragments('kotlin.io': FqName@86) = null
    packageFragments('kotlin.jvm': FqName@87) = null
    topLevelClasses(JavaClassImpl@48['Class']) = LazyJavaClassDescriptor@0['Class']
    topLevelClasses(JavaClassImpl@88['Object']) = LazyJavaClassDescriptor@2['Object']
}

LazyJavaPackageFragment@73['<root>'] {
    classes('Object': Name@89) = null // through LazyPackageFragmentScopeForJavaPackage@90
    classes('String': Name@91) = null // through LazyPackageFragmentScopeForJavaPackage@90
}

LazyJavaPackageFragment@78['java'] {
    classes('lang': Name@92) = null // through LazyPackageFragmentScopeForJavaPackage@93
    deserializedPackageScope = Empty@94 // through LazyPackageFragmentScopeForJavaPackage@93
    functions('lang': Name@95) = EmptyList@96[empty] // through LazyPackageFragmentScopeForJavaPackage@93
    memberIndex = computeMemberIndex$1@97 // through LazyPackageFragmentScopeForJavaPackage@93
}

LazyJavaPackageFragment@80['lang'] {
    classes('Object': Name@89) = LazyJavaClassDescriptor@2['Object'] // through LazyPackageFragmentScopeForJavaPackage@98
}

LazyJavaTypeParameterDescriptor@41['T'] {
    upperBounds = LinkedHashSet@99[1] { NullableType@100 }
    upperBoundsAsType = NullableType@100
}

LazyJavaTypeParameterResolver@101 {
    resolve(JavaTypeParameterImpl@102['T']) = LazyJavaTypeParameterDescriptor@41['T']
}
