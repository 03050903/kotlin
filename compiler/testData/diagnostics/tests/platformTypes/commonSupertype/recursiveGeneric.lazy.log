LazyJavaClassDescriptor@9['A'] {
    _typeConstructor = LazyJavaClassTypeConstructor@10['A']
}

LazyJavaClassDescriptor@7['B'] {
    _typeConstructor = LazyJavaClassTypeConstructor@8['B']
}

LazyJavaClassDescriptor@17['Rec'] {
    _typeConstructor = LazyJavaClassTypeConstructor@13['Rec']
}

LazyJavaClassTypeConstructor@10['A'] {
    _parameters = ArrayList@71[empty]
    _supertypes = ArrayList@72[1] { LazyJavaClassifierType@20['Rec<A>'] }
}

LazyJavaClassTypeConstructor@8['B'] {
    _parameters = ArrayList@35[empty]
    _supertypes = ArrayList@36[1] { LazyJavaClassifierType@11['Rec<B>'] }
}

LazyJavaClassTypeConstructor@13['Rec'] {
    _parameters = ArrayList@31[1] { LazyJavaTypeParameterDescriptor@18['T'] }
    _supertypes = ArrayList@29[1] { JetTypeImpl@30 }
}

LazyJavaClassifierType@32['A'] {
    _arguments = ArrayList@34[empty]
    _nullable = Boolean@16
    _typeConstructor = LazyJavaClassTypeConstructor@10['A']
    classifier = JavaClassImpl@33['A']
}

LazyJavaClassifierType@39['A'] {
    _arguments = ArrayList@41[empty]
    _nullable = Boolean@40
    _typeConstructor = LazyJavaClassTypeConstructor@10['A']
    classifier = JavaClassImpl@33['A']
}

LazyJavaClassifierType@66['B'] {
    _arguments = ArrayList@68[empty]
    _nullable = Boolean@16
    _typeConstructor = LazyJavaClassTypeConstructor@8['B']
    classifier = JavaClassImpl@67['B']
}

LazyJavaClassifierType@69['B'] {
    _arguments = ArrayList@70[empty]
    _nullable = Boolean@40
    _typeConstructor = LazyJavaClassTypeConstructor@8['B']
    classifier = JavaClassImpl@67['B']
}

LazyJavaClassifierType@73['Object'] {
    _typeConstructor = DeserializedClassTypeConstructor@75
    classifier = JavaClassImpl@74['Object']
}

LazyJavaClassifierType@20['Rec<A>'] {
    _arguments = ArrayList@22[1] { TypeProjectionImpl@23 }
    _nullable = Boolean@16
    _typeConstructor = LazyJavaClassTypeConstructor@13['Rec']
    classifier = JavaClassImpl@21['Rec']
}

LazyJavaClassifierType@11['Rec<B>'] {
    _arguments = ArrayList@14[1] { TypeProjectionImpl@15 }
    _nullable = Boolean@16
    _typeConstructor = LazyJavaClassTypeConstructor@13['Rec']
    classifier = JavaClassImpl@12['Rec']
}

LazyJavaPackageFragmentProvider@42 {
    _packageFragments('<root>': FqName@43) = LazyJavaPackageFragment@44['<root>']
    _packageFragments('A': FqName@52) = null
    _packageFragments('B': FqName@57) = null
    _packageFragments('Boolean': FqName@62) = null
    _packageFragments('java': FqName@45) = LazyJavaPackageFragment@0['java']
    _packageFragments('java.lang': FqName@46) = LazyJavaPackageFragment@47['lang']
    _packageFragments('java.lang.A': FqName@55) = null
    _packageFragments('java.lang.B': FqName@60) = null
    _packageFragments('java.lang.Boolean': FqName@65) = null
    _packageFragments('kotlin': FqName@48) = null
    _packageFragments('kotlin.A': FqName@54) = null
    _packageFragments('kotlin.B': FqName@59) = null
    _packageFragments('kotlin.Boolean': FqName@64) = null
    _packageFragments('kotlin.io': FqName@50) = null
    _packageFragments('kotlin.jvm': FqName@49) = null
    _packageFragments('p': FqName@51) = LazyJavaPackageFragment@24['p']
    _packageFragments('p.A': FqName@53) = null
    _packageFragments('p.B': FqName@58) = null
    _packageFragments('p.Boolean': FqName@63) = null
    topLevelClasses(JavaClassImpl@56['A']) = LazyJavaClassDescriptor@9['A']
    topLevelClasses(JavaClassImpl@61['B']) = LazyJavaClassDescriptor@7['B']
    topLevelClasses(JavaClassImpl@21['Rec']) = LazyJavaClassDescriptor@17['Rec']
}

LazyJavaPackageFragment@44['<root>'] {
    _functions('p': Name@79) = EmptyList@6[empty] // through LazyPackageFragmentScopeForJavaPackage@77
    classes('A': Name@25) = null // through LazyPackageFragmentScopeForJavaPackage@77
    classes('B': Name@27) = null // through LazyPackageFragmentScopeForJavaPackage@77
    classes('Boolean': Name@28) = null // through LazyPackageFragmentScopeForJavaPackage@77
    classes('p': Name@76) = null // through LazyPackageFragmentScopeForJavaPackage@77
    deserializedPackageScope = JetScope$1@3 // through LazyPackageFragmentScopeForJavaPackage@77
    memberIndex = computeMemberIndex$1@78 // through LazyPackageFragmentScopeForJavaPackage@77
}

LazyJavaPackageFragment@0['java'] {
    _functions('lang': Name@5) = EmptyList@6[empty] // through LazyPackageFragmentScopeForJavaPackage@2
    classes('lang': Name@1) = null // through LazyPackageFragmentScopeForJavaPackage@2
    deserializedPackageScope = JetScope$1@3 // through LazyPackageFragmentScopeForJavaPackage@2
    memberIndex = computeMemberIndex$1@4 // through LazyPackageFragmentScopeForJavaPackage@2
}

LazyJavaPackageFragment@24['p'] {
    classes('A': Name@25) = LazyJavaClassDescriptor@9['A'] // through LazyPackageFragmentScopeForJavaPackage@26
    classes('B': Name@27) = LazyJavaClassDescriptor@7['B'] // through LazyPackageFragmentScopeForJavaPackage@26
    classes('Boolean': Name@28) = null // through LazyPackageFragmentScopeForJavaPackage@26
}

LazyJavaTypeParameterDescriptor@18['T'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@19
}

LazyJavaTypeParameterResolver@37 {
    resolve(JavaTypeParameterImpl@38['T']) = LazyJavaTypeParameterDescriptor@18['T']
}
