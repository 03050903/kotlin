LazyJavaClassDescriptor@38['AbstractMap'] {
    _typeConstructor = LazyJavaClassTypeConstructor@139['AbstractMap']
}

LazyJavaClassDescriptor@14['HashMap'] {
    _constructors = ArrayList@134[4] { JavaConstructorDescriptor@135['<init>'], JavaConstructorDescriptor@136['<init>'], JavaConstructorDescriptor@137['<init>'], ... } // through LazyJavaClassMemberScope@138
    _functionTypeForSamInterface = null
    _typeConstructor = LazyJavaClassTypeConstructor@132['HashMap']
    defaultType = JetTypeImpl@133
}

LazyJavaClassDescriptor@42['Serializable'] {
    _typeConstructor = LazyJavaClassTypeConstructor@67['Serializable']
}

LazyJavaClassTypeConstructor@139['AbstractMap'] {
    _parameters = ArrayList@172[2] { LazyJavaTypeParameterDescriptor@96['K'], LazyJavaTypeParameterDescriptor@77['V'] }
    _supertypes = ArrayList@171[1] { LazyJavaClassifierType@87['Map<K, V>'] }
}

LazyJavaClassTypeConstructor@132['HashMap'] {
    _parameters = ArrayList@158[2] { LazyJavaTypeParameterDescriptor@74['K'], LazyJavaTypeParameterDescriptor@76['V'] }
    _supertypes = ArrayList@159[4] { LazyJavaClassifierType@160['AbstractMap<K, V>'], LazyJavaClassifierType@100['Map<K, V>'], LazyJavaClassifierType@140['Cloneable'], ... }
}

LazyJavaClassTypeConstructor@67['Serializable'] {
    _supertypes = ArrayList@143[1] { JetTypeImpl@144 }
}

LazyJavaClassifierType@160['AbstractMap<K, V>'] {
    _arguments = ArrayList@163[2] { TypeProjectionImpl@164, TypeProjectionImpl@165 }
    _typeConstructor = LazyJavaClassTypeConstructor@139['AbstractMap']
    classifier = JavaClassImpl@37['AbstractMap']
}

LazyJavaClassifierType@140['Cloneable'] {
    _typeConstructor = DeserializedClassTypeConstructor@142
    classifier = JavaClassImpl@141['Cloneable']
}

LazyJavaClassifierType@57['K'] {
    _arguments = ArrayList@61[empty]
    _nullable = Boolean@58
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@60
    classifier = JavaTypeParameterImpl@59['K']
}

LazyJavaClassifierType@68['K'] {
    _arguments = ArrayList@71[empty]
    _nullable = Boolean@50
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@70
    classifier = JavaTypeParameterImpl@69['K']
}

LazyJavaClassifierType@79['K'] {
    _arguments = ArrayList@81[empty]
    _nullable = Boolean@50
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@60
    classifier = JavaTypeParameterImpl@80['K']
}

LazyJavaClassifierType@92['K'] {
    _arguments = ArrayList@94[empty]
    _nullable = Boolean@58
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@60
    classifier = JavaTypeParameterImpl@93['K']
}

LazyJavaClassifierType@105['K'] {
    _arguments = ArrayList@106[empty]
    _nullable = Boolean@50
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@60
    classifier = JavaTypeParameterImpl@93['K']
}

LazyJavaClassifierType@145['K'] {
    _arguments = ArrayList@146[empty]
    _nullable = Boolean@58
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@70
    classifier = JavaTypeParameterImpl@69['K']
}

LazyJavaClassifierType@156['K'] {
    _arguments = ArrayList@157[empty]
    _nullable = Boolean@58
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@60
    classifier = JavaTypeParameterImpl@80['K']
}

LazyJavaClassifierType@161['K'] {
    _arguments = ArrayList@162[empty]
    _nullable = Boolean@50
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@60
    classifier = JavaTypeParameterImpl@59['K']
}

LazyJavaClassifierType@49['Map<? extends K, ? extends V>'] {
    _arguments = ArrayList@53[2] { TypeProjectionImpl@54, TypeProjectionImpl@55 }
    _memberScope = SubstitutingScope@56
    _nullable = Boolean@50
    _typeConstructor = DeserializedClassTypeConstructor@52
    classifier = JavaClassImpl@51['Map']
}

LazyJavaClassifierType@117['Map<? extends K, ? extends V>'] {
    _arguments = ArrayList@119[2] { TypeProjectionImpl@120, TypeProjectionImpl@121 }
    _memberScope = SubstitutingScope@122
    _nullable = Boolean@58
    _typeConstructor = DeserializedClassTypeConstructor@118
    classifier = JavaClassImpl@51['Map']
}

LazyJavaClassifierType@87['Map<K, V>'] {
    _arguments = ArrayList@89[2] { TypeProjectionImpl@90, TypeProjectionImpl@91 }
    _typeConstructor = DeserializedClassTypeConstructor@52
    classifier = JavaClassImpl@88['Map']
}

LazyJavaClassifierType@100['Map<K, V>'] {
    _typeConstructor = DeserializedClassTypeConstructor@52
    classifier = JavaClassImpl@101['Map']
}

LazyJavaClassifierType@153['Object'] {
    _typeConstructor = DeserializedClassTypeConstructor@155
    classifier = JavaClassImpl@154['Object']
}

LazyJavaClassifierType@173['Object'] {
    _typeConstructor = DeserializedClassTypeConstructor@155
    classifier = JavaClassImpl@174['Object']
}

LazyJavaClassifierType@82['Serializable'] {
    _typeConstructor = LazyJavaClassTypeConstructor@67['Serializable']
    classifier = JavaClassImpl@41['Serializable']
}

LazyJavaClassifierType@83['V'] {
    _arguments = ArrayList@86[empty]
    _nullable = Boolean@50
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@85
    classifier = JavaTypeParameterImpl@84['V']
}

LazyJavaClassifierType@98['V'] {
    _arguments = ArrayList@99[empty]
    _nullable = Boolean@58
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@85
    classifier = JavaTypeParameterImpl@84['V']
}

LazyJavaClassifierType@102['V'] {
    _arguments = ArrayList@104[empty]
    _nullable = Boolean@58
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@85
    classifier = JavaTypeParameterImpl@103['V']
}

LazyJavaClassifierType@107['V'] {
    _arguments = ArrayList@109[empty]
    _nullable = Boolean@58
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@85
    classifier = JavaTypeParameterImpl@108['V']
}

LazyJavaClassifierType@123['V'] {
    _arguments = ArrayList@124[empty]
    _nullable = Boolean@50
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@85
    classifier = JavaTypeParameterImpl@108['V']
}

LazyJavaClassifierType@128['V'] {
    _arguments = ArrayList@129[empty]
    _nullable = Boolean@50
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@78
    classifier = JavaTypeParameterImpl@97['V']
}

LazyJavaClassifierType@130['V'] {
    _arguments = ArrayList@131[empty]
    _nullable = Boolean@58
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@78
    classifier = JavaTypeParameterImpl@97['V']
}

LazyJavaClassifierType@166['V'] {
    _arguments = ArrayList@167[empty]
    _nullable = Boolean@50
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@85
    classifier = JavaTypeParameterImpl@103['V']
}

LazyJavaPackageFragmentProvider@0 {
    _packageFragments('<root>': FqName@1) = LazyJavaPackageFragment@2['<root>']
    _packageFragments('M': FqName@18) = null
    _packageFragments('M1': FqName@33) = null
    _packageFragments('M2': FqName@30) = null
    _packageFragments('Map': FqName@21) = null
    _packageFragments('ResolverForProject': FqName@15) = null
    _packageFragments('ResolverForProjectImpl': FqName@36) = null
    _packageFragments('String': FqName@24) = null
    _packageFragments('WithFoo': FqName@27) = null
    _packageFragments('java': FqName@3) = LazyJavaPackageFragment@4['java']
    _packageFragments('java.io': FqName@39) = LazyJavaPackageFragment@40['io']
    _packageFragments('java.lang': FqName@5) = LazyJavaPackageFragment@6['lang']
    _packageFragments('java.lang.M': FqName@20) = null
    _packageFragments('java.lang.M1': FqName@35) = null
    _packageFragments('java.lang.M2': FqName@32) = null
    _packageFragments('java.lang.Map': FqName@23) = null
    _packageFragments('java.lang.ResolverForProject': FqName@17) = null
    _packageFragments('java.lang.String': FqName@26) = null
    _packageFragments('java.lang.WithFoo': FqName@29) = null
    _packageFragments('java.util': FqName@10) = LazyJavaPackageFragment@11['util']
    _packageFragments('java.util.HashMap': FqName@12) = null
    _packageFragments('kotlin': FqName@7) = null
    _packageFragments('kotlin.M': FqName@19) = null
    _packageFragments('kotlin.M1': FqName@34) = null
    _packageFragments('kotlin.M2': FqName@31) = null
    _packageFragments('kotlin.Map': FqName@22) = null
    _packageFragments('kotlin.ResolverForProject': FqName@16) = null
    _packageFragments('kotlin.String': FqName@25) = null
    _packageFragments('kotlin.WithFoo': FqName@28) = null
    _packageFragments('kotlin.io': FqName@9) = null
    _packageFragments('kotlin.jvm': FqName@8) = null
    topLevelClasses(JavaClassImpl@37['AbstractMap']) = LazyJavaClassDescriptor@38['AbstractMap']
    topLevelClasses(JavaClassImpl@13['HashMap']) = LazyJavaClassDescriptor@14['HashMap']
    topLevelClasses(JavaClassImpl@41['Serializable']) = LazyJavaClassDescriptor@42['Serializable']
}

LazyJavaPackageFragment@2['<root>'] {
    _functions('HashMap': Name@64) = EmptyList@48[empty] // through LazyPackageFragmentScopeForJavaPackage@111
    _functions('ResolverForProjectImpl': Name@65) = EmptyList@48[empty] // through LazyPackageFragmentScopeForJavaPackage@111
    _functions('foo': Name@66) = EmptyList@48[empty] // through LazyPackageFragmentScopeForJavaPackage@111
    _functions('java': Name@115) = EmptyList@48[empty] // through LazyPackageFragmentScopeForJavaPackage@111
    classes('HashMap': Name@116) = null // through LazyPackageFragmentScopeForJavaPackage@111
    classes('Map': Name@112) = null // through LazyPackageFragmentScopeForJavaPackage@111
    classes('ResolverForProjectImpl': Name@65) = null // through LazyPackageFragmentScopeForJavaPackage@111
    classes('String': Name@113) = null // through LazyPackageFragmentScopeForJavaPackage@111
    classes('foo': Name@66) = null // through LazyPackageFragmentScopeForJavaPackage@111
    classes('java': Name@110) = null // through LazyPackageFragmentScopeForJavaPackage@111
    deserializedPackageScope = JetScope$1@45 // through LazyPackageFragmentScopeForJavaPackage@111
    memberIndex = computeMemberIndex$1@114 // through LazyPackageFragmentScopeForJavaPackage@111
}

LazyJavaPackageFragment@4['java'] {
    _functions('lang': Name@151) = EmptyList@48[empty] // through LazyPackageFragmentScopeForJavaPackage@148
    _functions('util': Name@152) = EmptyList@48[empty] // through LazyPackageFragmentScopeForJavaPackage@148
    classes('lang': Name@147) = null // through LazyPackageFragmentScopeForJavaPackage@148
    classes('util': Name@149) = null // through LazyPackageFragmentScopeForJavaPackage@148
    deserializedPackageScope = JetScope$1@45 // through LazyPackageFragmentScopeForJavaPackage@148
    memberIndex = computeMemberIndex$1@150 // through LazyPackageFragmentScopeForJavaPackage@148
}

LazyJavaPackageFragment@6['lang'] {
    _functions('HashMap': Name@64) = EmptyList@48[empty] // through LazyPackageFragmentScopeForJavaPackage@62
    _functions('ResolverForProjectImpl': Name@65) = EmptyList@48[empty] // through LazyPackageFragmentScopeForJavaPackage@62
    _functions('foo': Name@66) = EmptyList@48[empty] // through LazyPackageFragmentScopeForJavaPackage@62
    classes('HashMap': Name@64) = null // through LazyPackageFragmentScopeForJavaPackage@62
    classes('ResolverForProjectImpl': Name@65) = null // through LazyPackageFragmentScopeForJavaPackage@62
    classes('foo': Name@66) = null // through LazyPackageFragmentScopeForJavaPackage@62
    deserializedPackageScope = JetScope$1@45 // through LazyPackageFragmentScopeForJavaPackage@62
    memberIndex = computeMemberIndex$1@63 // through LazyPackageFragmentScopeForJavaPackage@62
}

LazyJavaPackageFragment@11['util'] {
    _functions('HashMap': Name@47) = EmptyList@48[empty] // through LazyPackageFragmentScopeForJavaPackage@44
    classes('HashMap': Name@43) = LazyJavaClassDescriptor@14['HashMap'] // through LazyPackageFragmentScopeForJavaPackage@44
    deserializedPackageScope = JetScope$1@45 // through LazyPackageFragmentScopeForJavaPackage@44
    memberIndex = computeMemberIndex$1@46 // through LazyPackageFragmentScopeForJavaPackage@44
}

LazyJavaTypeParameterDescriptor@74['K'] {
    defaultType = JetTypeImpl@168
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@60
    upperBounds = LinkedHashSet@169[1] { NullableType@170 }
}

LazyJavaTypeParameterDescriptor@96['K'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@70
}

LazyJavaTypeParameterDescriptor@76['V'] {
    defaultType = JetTypeImpl@125
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@85
    upperBounds = LinkedHashSet@126[1] { NullableType@127 }
}

LazyJavaTypeParameterDescriptor@77['V'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@78
}

LazyJavaTypeParameterResolver@72 {
    resolve(JavaTypeParameterImpl@73['K']) = LazyJavaTypeParameterDescriptor@74['K']
    resolve(JavaTypeParameterImpl@75['V']) = LazyJavaTypeParameterDescriptor@76['V']
}

LazyJavaTypeParameterResolver@95 {
    resolve(JavaTypeParameterImpl@69['K']) = LazyJavaTypeParameterDescriptor@96['K']
    resolve(JavaTypeParameterImpl@97['V']) = LazyJavaTypeParameterDescriptor@77['V']
}
