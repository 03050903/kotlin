DescriptorResolver@0 {
    <name not found> = JetTypeImpl@1['MyProperty1<2>']
    <name not found> = JetTypeImpl@2['MyProperty2<2>']
    <name not found> = NullableType@3
}

LazyJavaClassDescriptor@4['Exception'] {
    constructors = ArrayList@5[5] { JavaConstructorDescriptor@6['<init>'], JavaConstructorDescriptor@7['<init>'], JavaConstructorDescriptor@8['<init>'], ... } // through LazyJavaClassMemberScope@9
    defaultType = JetTypeImpl@10['Exception']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@11['Exception']
}

LazyJavaClassTypeConstructor@11['Exception'] {
    parameters = ArrayList@12[empty]
    supertypes = ArrayList@13[1] { LazyJavaClassifierType@14['Throwable'] }
}

LazyJavaClassifierType@15['String'] {
    arguments = ArrayList@16[empty]
    classifier = JavaClassImpl@17['String']
    nullable = 'false': Boolean@18
    typeConstructor = DeserializedClassTypeConstructor@19
}

LazyJavaClassifierType@20['String'] {
    arguments = ArrayList@21[empty]
    classifier = JavaClassImpl@22['String']
    nullable = 'false': Boolean@18
    typeConstructor = DeserializedClassTypeConstructor@19
}

LazyJavaClassifierType@23['String'] {
    arguments = ArrayList@24[empty]
    classifier = JavaClassImpl@25['String']
    nullable = 'false': Boolean@18
    typeConstructor = DeserializedClassTypeConstructor@19
}

LazyJavaClassifierType@26['String'] {
    arguments = ArrayList@27[empty]
    classifier = JavaClassImpl@25['String']
    nullable = 'true': Boolean@28
    typeConstructor = DeserializedClassTypeConstructor@19
}

LazyJavaClassifierType@29['String'] {
    arguments = ArrayList@30[empty]
    classifier = JavaClassImpl@22['String']
    nullable = 'true': Boolean@28
    typeConstructor = DeserializedClassTypeConstructor@19
}

LazyJavaClassifierType@31['String'] {
    arguments = ArrayList@32[empty]
    classifier = JavaClassImpl@17['String']
    nullable = 'true': Boolean@28
    typeConstructor = DeserializedClassTypeConstructor@19
}

LazyJavaClassifierType@33['Throwable'] {
    arguments = ArrayList@34[empty]
    classifier = JavaClassImpl@35['Throwable']
    nullable = 'false': Boolean@18
    typeConstructor = DeserializedClassTypeConstructor@36
}

LazyJavaClassifierType@37['Throwable'] {
    arguments = ArrayList@38[empty]
    classifier = JavaClassImpl@39['Throwable']
    nullable = 'false': Boolean@18
    typeConstructor = DeserializedClassTypeConstructor@36
}

LazyJavaClassifierType@40['Throwable'] {
    arguments = ArrayList@41[empty]
    classifier = JavaClassImpl@42['Throwable']
    nullable = 'false': Boolean@18
    typeConstructor = DeserializedClassTypeConstructor@36
}

LazyJavaClassifierType@43['Throwable'] {
    arguments = ArrayList@44[empty]
    classifier = JavaClassImpl@35['Throwable']
    nullable = 'true': Boolean@28
    typeConstructor = DeserializedClassTypeConstructor@36
}

LazyJavaClassifierType@45['Throwable'] {
    arguments = ArrayList@46[empty]
    classifier = JavaClassImpl@39['Throwable']
    nullable = 'true': Boolean@28
    typeConstructor = DeserializedClassTypeConstructor@36
}

LazyJavaClassifierType@47['Throwable'] {
    arguments = ArrayList@48[empty]
    classifier = JavaClassImpl@42['Throwable']
    nullable = 'true': Boolean@28
    typeConstructor = DeserializedClassTypeConstructor@36
}

LazyJavaClassifierType@14['Throwable'] {
    arguments = ArrayList@49[empty]
    classifier = JavaClassImpl@50['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@36
}

LazyJavaPackageFragmentProvider@51 {
    packageFragments('<root>': FqName@52) = LazyJavaPackageFragment@53['<root>']
    packageFragments('A': FqName@54) = null
    packageFragments('Any': FqName@55) = null
    packageFragments('B': FqName@56) = null
    packageFragments('Int': FqName@57) = null
    packageFragments('PropertyMetadata': FqName@58) = null
    packageFragments('R': FqName@59) = null
    packageFragments('String': FqName@60) = null
    packageFragments('T': FqName@61) = null
    packageFragments('foo': FqName@62) = null
    packageFragments('foo.A': FqName@63) = null
    packageFragments('foo.Any': FqName@64) = null
    packageFragments('foo.B': FqName@65) = null
    packageFragments('foo.Int': FqName@66) = null
    packageFragments('foo.MyProperty1': FqName@67) = null
    packageFragments('foo.MyProperty2': FqName@68) = null
    packageFragments('foo.PropertyMetadata': FqName@69) = null
    packageFragments('foo.R': FqName@70) = null
    packageFragments('foo.String': FqName@71) = null
    packageFragments('foo.T': FqName@72) = null
    packageFragments('java': FqName@73) = LazyJavaPackageFragment@74['java']
    packageFragments('java.lang': FqName@75) = LazyJavaPackageFragment@76['lang']
    packageFragments('java.lang.A': FqName@77) = null
    packageFragments('java.lang.Any': FqName@78) = null
    packageFragments('java.lang.B': FqName@79) = null
    packageFragments('java.lang.Int': FqName@80) = null
    packageFragments('java.lang.PropertyMetadata': FqName@81) = null
    packageFragments('java.lang.R': FqName@82) = null
    packageFragments('java.lang.String': FqName@83) = null
    packageFragments('java.lang.T': FqName@84) = null
    packageFragments('kotlin': FqName@85) = null
    packageFragments('kotlin.A': FqName@86) = null
    packageFragments('kotlin.Any': FqName@87) = null
    packageFragments('kotlin.B': FqName@88) = null
    packageFragments('kotlin.Int': FqName@89) = null
    packageFragments('kotlin.PropertyMetadata': FqName@90) = null
    packageFragments('kotlin.R': FqName@91) = null
    packageFragments('kotlin.String': FqName@92) = null
    packageFragments('kotlin.T': FqName@93) = null
    packageFragments('kotlin.io': FqName@94) = null
    packageFragments('kotlin.jvm': FqName@95) = null
    topLevelClasses(JavaClassImpl@96['Exception']) = LazyJavaClassDescriptor@4['Exception']
}

LazyJavaPackageFragment@74['java'] {
    classes('lang': Name@97) = null // through LazyPackageFragmentScopeForJavaPackage@98
    deserializedPackageScope = Empty@99 // through LazyPackageFragmentScopeForJavaPackage@98
    functions('lang': Name@100) = EmptyList@101[empty] // through LazyPackageFragmentScopeForJavaPackage@98
    memberIndex = computeMemberIndex$1@102 // through LazyPackageFragmentScopeForJavaPackage@98
}

LazyJavaPackageFragment@76['lang'] {
    classes('Exception': Name@103) = LazyJavaClassDescriptor@4['Exception'] // through LazyPackageFragmentScopeForJavaPackage@104
    classes('MyProperty1': Name@105) = null // through LazyPackageFragmentScopeForJavaPackage@104
    classes('MyProperty2': Name@106) = null // through LazyPackageFragmentScopeForJavaPackage@104
    classes('PropertyMetadataImpl': Name@107) = null // through LazyPackageFragmentScopeForJavaPackage@104
    classes('get': Name@108) = null // through LazyPackageFragmentScopeForJavaPackage@104
    classes('getMyProperty1': Name@109) = null // through LazyPackageFragmentScopeForJavaPackage@104
    classes('getMyProperty2': Name@110) = null // through LazyPackageFragmentScopeForJavaPackage@104
    classes('println': Name@111) = null // through LazyPackageFragmentScopeForJavaPackage@104
    classes('propertyDelegated': Name@112) = null // through LazyPackageFragmentScopeForJavaPackage@104
    classes('set': Name@113) = null // through LazyPackageFragmentScopeForJavaPackage@104
    deserializedPackageScope = Empty@99 // through LazyPackageFragmentScopeForJavaPackage@104
    functions('Exception': Name@103) = EmptyList@101[empty] // through LazyPackageFragmentScopeForJavaPackage@104
    functions('MyProperty1': Name@105) = EmptyList@101[empty] // through LazyPackageFragmentScopeForJavaPackage@104
    functions('MyProperty2': Name@106) = EmptyList@101[empty] // through LazyPackageFragmentScopeForJavaPackage@104
    functions('PropertyMetadataImpl': Name@107) = EmptyList@101[empty] // through LazyPackageFragmentScopeForJavaPackage@104
    functions('get': Name@108) = EmptyList@101[empty] // through LazyPackageFragmentScopeForJavaPackage@104
    functions('getMyProperty1': Name@109) = EmptyList@101[empty] // through LazyPackageFragmentScopeForJavaPackage@104
    functions('getMyProperty2': Name@110) = EmptyList@101[empty] // through LazyPackageFragmentScopeForJavaPackage@104
    functions('println': Name@111) = EmptyList@101[empty] // through LazyPackageFragmentScopeForJavaPackage@104
    functions('propertyDelegated': Name@112) = EmptyList@101[empty] // through LazyPackageFragmentScopeForJavaPackage@104
    functions('set': Name@113) = EmptyList@101[empty] // through LazyPackageFragmentScopeForJavaPackage@104
    memberIndex = computeMemberIndex$1@114 // through LazyPackageFragmentScopeForJavaPackage@104
}
