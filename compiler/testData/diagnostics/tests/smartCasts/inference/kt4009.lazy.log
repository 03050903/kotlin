DescriptorResolver@0 {
    <name not found> = JetTypeImpl@1['Nothing']
}

LazyJavaClassDescriptor@2['Exception'] {
    constructors = ArrayList@3[5] { JavaConstructorDescriptor@4['<init>'], JavaConstructorDescriptor@5['<init>'], JavaConstructorDescriptor@6['<init>'], ... } // through LazyJavaClassMemberScope@7
    defaultType = JetTypeImpl@8['Exception']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@9['Exception']
}

LazyJavaClassTypeConstructor@9['Exception'] {
    parameters = ArrayList@10[empty]
    supertypes = ArrayList@11[1] { LazyJavaClassifierType@12['Throwable'] }
}

LazyJavaClassifierType@13['String'] {
    arguments = ArrayList@14[empty]
    classifier = JavaClassImpl@15['String']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@18['String'] {
    arguments = ArrayList@19[empty]
    classifier = JavaClassImpl@20['String']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@21['String'] {
    arguments = ArrayList@22[empty]
    classifier = JavaClassImpl@23['String']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@24['String'] {
    arguments = ArrayList@25[empty]
    classifier = JavaClassImpl@20['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@27['String'] {
    arguments = ArrayList@28[empty]
    classifier = JavaClassImpl@15['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@29['String'] {
    arguments = ArrayList@30[empty]
    classifier = JavaClassImpl@23['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@31['Throwable'] {
    arguments = ArrayList@32[empty]
    classifier = JavaClassImpl@33['Throwable']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@35['Throwable'] {
    arguments = ArrayList@36[empty]
    classifier = JavaClassImpl@37['Throwable']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@38['Throwable'] {
    arguments = ArrayList@39[empty]
    classifier = JavaClassImpl@40['Throwable']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@41['Throwable'] {
    arguments = ArrayList@42[empty]
    classifier = JavaClassImpl@37['Throwable']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@43['Throwable'] {
    arguments = ArrayList@44[empty]
    classifier = JavaClassImpl@40['Throwable']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@45['Throwable'] {
    arguments = ArrayList@46[empty]
    classifier = JavaClassImpl@33['Throwable']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@12['Throwable'] {
    arguments = ArrayList@47[empty]
    classifier = JavaClassImpl@48['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaPackageFragmentProvider@49 {
    packageFragments('<root>': FqName@50) = LazyJavaPackageFragment@51['<root>']
    packageFragments('Any': FqName@52) = null
    packageFragments('JetExpression': FqName@53) = null
    packageFragments('PsiElement': FqName@54) = null
    packageFragments('String': FqName@55) = null
    packageFragments('java': FqName@56) = LazyJavaPackageFragment@57['java']
    packageFragments('java.lang': FqName@58) = LazyJavaPackageFragment@59['lang']
    packageFragments('java.lang.Any': FqName@60) = null
    packageFragments('java.lang.JetExpression': FqName@61) = null
    packageFragments('java.lang.PsiElement': FqName@62) = null
    packageFragments('java.lang.String': FqName@63) = null
    packageFragments('kotlin': FqName@64) = null
    packageFragments('kotlin.Any': FqName@65) = null
    packageFragments('kotlin.JetExpression': FqName@66) = null
    packageFragments('kotlin.PsiElement': FqName@67) = null
    packageFragments('kotlin.String': FqName@68) = null
    packageFragments('kotlin.io': FqName@69) = null
    packageFragments('kotlin.jvm': FqName@70) = null
    topLevelClasses(JavaClassImpl@71['Exception']) = LazyJavaClassDescriptor@2['Exception']
}

LazyJavaPackageFragment@51['<root>'] {
    classes('Any': Name@72) = null // through LazyPackageFragmentScopeForJavaPackage@73
    classes('Exception': Name@74) = null // through LazyPackageFragmentScopeForJavaPackage@73
    classes('String': Name@75) = null // through LazyPackageFragmentScopeForJavaPackage@73
    classes('equals': Name@76) = null // through LazyPackageFragmentScopeForJavaPackage@73
    classes('getParent': Name@77) = null // through LazyPackageFragmentScopeForJavaPackage@73
    classes('getText': Name@78) = null // through LazyPackageFragmentScopeForJavaPackage@73
    classes('println': Name@79) = null // through LazyPackageFragmentScopeForJavaPackage@73
    deserializedPackageScope = Empty@80 // through LazyPackageFragmentScopeForJavaPackage@73
    functions('Exception': Name@74) = EmptyList@81[empty] // through LazyPackageFragmentScopeForJavaPackage@73
    functions('equals': Name@76) = EmptyList@81[empty] // through LazyPackageFragmentScopeForJavaPackage@73
    functions('getParent': Name@77) = EmptyList@81[empty] // through LazyPackageFragmentScopeForJavaPackage@73
    functions('getText': Name@78) = EmptyList@81[empty] // through LazyPackageFragmentScopeForJavaPackage@73
    functions('println': Name@79) = EmptyList@81[empty] // through LazyPackageFragmentScopeForJavaPackage@73
    memberIndex = computeMemberIndex$1@82 // through LazyPackageFragmentScopeForJavaPackage@73
}

LazyJavaPackageFragment@57['java'] {
    classes('lang': Name@83) = null // through LazyPackageFragmentScopeForJavaPackage@84
    deserializedPackageScope = Empty@80 // through LazyPackageFragmentScopeForJavaPackage@84
    functions('lang': Name@85) = EmptyList@81[empty] // through LazyPackageFragmentScopeForJavaPackage@84
    memberIndex = computeMemberIndex$1@86 // through LazyPackageFragmentScopeForJavaPackage@84
}

LazyJavaPackageFragment@59['lang'] {
    classes('Exception': Name@74) = LazyJavaClassDescriptor@2['Exception'] // through LazyPackageFragmentScopeForJavaPackage@87
    classes('equals': Name@76) = null // through LazyPackageFragmentScopeForJavaPackage@87
    classes('getParent': Name@77) = null // through LazyPackageFragmentScopeForJavaPackage@87
    classes('getText': Name@78) = null // through LazyPackageFragmentScopeForJavaPackage@87
    classes('println': Name@79) = null // through LazyPackageFragmentScopeForJavaPackage@87
    deserializedPackageScope = Empty@80 // through LazyPackageFragmentScopeForJavaPackage@87
    functions('Exception': Name@74) = EmptyList@81[empty] // through LazyPackageFragmentScopeForJavaPackage@87
    functions('equals': Name@76) = EmptyList@81[empty] // through LazyPackageFragmentScopeForJavaPackage@87
    functions('getParent': Name@77) = EmptyList@81[empty] // through LazyPackageFragmentScopeForJavaPackage@87
    functions('getText': Name@78) = EmptyList@81[empty] // through LazyPackageFragmentScopeForJavaPackage@87
    functions('println': Name@79) = EmptyList@81[empty] // through LazyPackageFragmentScopeForJavaPackage@87
    memberIndex = computeMemberIndex$1@88 // through LazyPackageFragmentScopeForJavaPackage@87
}
