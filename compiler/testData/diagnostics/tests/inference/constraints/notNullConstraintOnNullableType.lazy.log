DescriptorResolver@0 {
    <name not found> = JetTypeImpl@1['Function1<2>']
    <name not found> = null
}

LazyJavaClassDescriptor@2['Exception'] {
    _constructors = ArrayList@3[5] { JavaConstructorDescriptor@4['<init>'], JavaConstructorDescriptor@5['<init>'], JavaConstructorDescriptor@6['<init>'], ... } // through LazyJavaClassMemberScope@7
    _functionTypeForSamInterface = null
    _typeConstructor = LazyJavaClassTypeConstructor@8['Exception']
    defaultType = JetTypeImpl@9['Exception']
}

LazyJavaClassTypeConstructor@8['Exception'] {
    _parameters = ArrayList@10[empty]
    _supertypes = ArrayList@11[1] { LazyJavaClassifierType@12['Throwable'] }
}

LazyJavaClassifierType@13['String'] {
    _arguments = ArrayList@14[empty]
    _nullable = 'false': Boolean@15
    _typeConstructor = DeserializedClassTypeConstructor@16
    classifier = JavaClassImpl@17['String']
}

LazyJavaClassifierType@18['String'] {
    _arguments = ArrayList@19[empty]
    _nullable = 'false': Boolean@15
    _typeConstructor = DeserializedClassTypeConstructor@16
    classifier = JavaClassImpl@20['String']
}

LazyJavaClassifierType@21['String'] {
    _arguments = ArrayList@22[empty]
    _nullable = 'false': Boolean@15
    _typeConstructor = DeserializedClassTypeConstructor@16
    classifier = JavaClassImpl@23['String']
}

LazyJavaClassifierType@24['String'] {
    _arguments = ArrayList@25[empty]
    _nullable = 'true': Boolean@26
    _typeConstructor = DeserializedClassTypeConstructor@16
    classifier = JavaClassImpl@17['String']
}

LazyJavaClassifierType@27['String'] {
    _arguments = ArrayList@28[empty]
    _nullable = 'true': Boolean@26
    _typeConstructor = DeserializedClassTypeConstructor@16
    classifier = JavaClassImpl@23['String']
}

LazyJavaClassifierType@29['String'] {
    _arguments = ArrayList@30[empty]
    _nullable = 'true': Boolean@26
    _typeConstructor = DeserializedClassTypeConstructor@16
    classifier = JavaClassImpl@20['String']
}

LazyJavaClassifierType@31['Throwable'] {
    _arguments = ArrayList@32[empty]
    _nullable = 'false': Boolean@15
    _typeConstructor = DeserializedClassTypeConstructor@33
    classifier = JavaClassImpl@34['Throwable']
}

LazyJavaClassifierType@35['Throwable'] {
    _arguments = ArrayList@36[empty]
    _nullable = 'false': Boolean@15
    _typeConstructor = DeserializedClassTypeConstructor@33
    classifier = JavaClassImpl@37['Throwable']
}

LazyJavaClassifierType@38['Throwable'] {
    _arguments = ArrayList@39[empty]
    _nullable = 'false': Boolean@15
    _typeConstructor = DeserializedClassTypeConstructor@33
    classifier = JavaClassImpl@40['Throwable']
}

LazyJavaClassifierType@41['Throwable'] {
    _arguments = ArrayList@42[empty]
    _nullable = 'true': Boolean@26
    _typeConstructor = DeserializedClassTypeConstructor@33
    classifier = JavaClassImpl@34['Throwable']
}

LazyJavaClassifierType@43['Throwable'] {
    _arguments = ArrayList@44[empty]
    _nullable = 'true': Boolean@26
    _typeConstructor = DeserializedClassTypeConstructor@33
    classifier = JavaClassImpl@37['Throwable']
}

LazyJavaClassifierType@45['Throwable'] {
    _arguments = ArrayList@46[empty]
    _nullable = 'true': Boolean@26
    _typeConstructor = DeserializedClassTypeConstructor@33
    classifier = JavaClassImpl@40['Throwable']
}

LazyJavaClassifierType@12['Throwable'] {
    _arguments = ArrayList@47[empty]
    _typeConstructor = DeserializedClassTypeConstructor@33
    classifier = JavaClassImpl@48['Throwable']
}

LazyJavaPackageFragmentProvider@49 {
    _packageFragments('<root>': FqName@50) = LazyJavaPackageFragment@51['<root>']
    _packageFragments('A': FqName@52) = null
    _packageFragments('Any': FqName@53) = null
    _packageFragments('In': FqName@54) = null
    _packageFragments('Int': FqName@55) = null
    _packageFragments('Out': FqName@56) = null
    _packageFragments('T': FqName@57) = null
    _packageFragments('Unit': FqName@58) = null
    _packageFragments('_': FqName@59) = null
    _packageFragments('java': FqName@60) = LazyJavaPackageFragment@61['java']
    _packageFragments('java.lang': FqName@62) = LazyJavaPackageFragment@63['lang']
    _packageFragments('java.lang.A': FqName@64) = null
    _packageFragments('java.lang.Any': FqName@65) = null
    _packageFragments('java.lang.In': FqName@66) = null
    _packageFragments('java.lang.Int': FqName@67) = null
    _packageFragments('java.lang.Out': FqName@68) = null
    _packageFragments('java.lang.T': FqName@69) = null
    _packageFragments('java.lang.Unit': FqName@70) = null
    _packageFragments('java.lang._': FqName@71) = null
    _packageFragments('kotlin': FqName@72) = null
    _packageFragments('kotlin.A': FqName@73) = null
    _packageFragments('kotlin.Any': FqName@74) = null
    _packageFragments('kotlin.In': FqName@75) = null
    _packageFragments('kotlin.Int': FqName@76) = null
    _packageFragments('kotlin.Out': FqName@77) = null
    _packageFragments('kotlin.T': FqName@78) = null
    _packageFragments('kotlin.Unit': FqName@79) = null
    _packageFragments('kotlin._': FqName@80) = null
    _packageFragments('kotlin.io': FqName@81) = null
    _packageFragments('kotlin.jvm': FqName@82) = null
    _packageFragments('tests': FqName@83) = null
    _packageFragments('tests._checkType': FqName@84) = null
    _packageFragments('tests._checkType.A': FqName@85) = null
    _packageFragments('tests._checkType.Any': FqName@86) = null
    _packageFragments('tests._checkType.In': FqName@87) = null
    _packageFragments('tests._checkType.Int': FqName@88) = null
    _packageFragments('tests._checkType.Out': FqName@89) = null
    _packageFragments('tests._checkType.T': FqName@90) = null
    _packageFragments('tests._checkType.Unit': FqName@91) = null
    _packageFragments('tests._checkType._': FqName@92) = null
    topLevelClasses(JavaClassImpl@93['Exception']) = LazyJavaClassDescriptor@2['Exception']
}

LazyJavaPackageFragment@51['<root>'] {
    _functions('Exception': Name@94) = EmptyList@95[empty] // through LazyPackageFragmentScopeForJavaPackage@96
    _functions('checkType': Name@97) = EmptyList@95[empty] // through LazyPackageFragmentScopeForJavaPackage@96
    _functions('doA': Name@98) = EmptyList@95[empty] // through LazyPackageFragmentScopeForJavaPackage@96
    _functions('doIn': Name@99) = EmptyList@95[empty] // through LazyPackageFragmentScopeForJavaPackage@96
    _functions('doOut': Name@100) = EmptyList@95[empty] // through LazyPackageFragmentScopeForJavaPackage@96
    _functions('doT': Name@101) = EmptyList@95[empty] // through LazyPackageFragmentScopeForJavaPackage@96
    _functions('tests': Name@102) = EmptyList@95[empty] // through LazyPackageFragmentScopeForJavaPackage@96
    classes('Any': Name@103) = null // through LazyPackageFragmentScopeForJavaPackage@96
    classes('Exception': Name@94) = null // through LazyPackageFragmentScopeForJavaPackage@96
    classes('Int': Name@104) = null // through LazyPackageFragmentScopeForJavaPackage@96
    classes('_': Name@105) = null // through LazyPackageFragmentScopeForJavaPackage@96
    classes('checkType': Name@97) = null // through LazyPackageFragmentScopeForJavaPackage@96
    classes('doA': Name@98) = null // through LazyPackageFragmentScopeForJavaPackage@96
    classes('doIn': Name@99) = null // through LazyPackageFragmentScopeForJavaPackage@96
    classes('doOut': Name@100) = null // through LazyPackageFragmentScopeForJavaPackage@96
    classes('doT': Name@101) = null // through LazyPackageFragmentScopeForJavaPackage@96
    classes('tests': Name@106) = null // through LazyPackageFragmentScopeForJavaPackage@96
    deserializedPackageScope = Empty@107 // through LazyPackageFragmentScopeForJavaPackage@96
    memberIndex = computeMemberIndex$1@108 // through LazyPackageFragmentScopeForJavaPackage@96
}

LazyJavaPackageFragment@61['java'] {
    _functions('lang': Name@109) = EmptyList@95[empty] // through LazyPackageFragmentScopeForJavaPackage@110
    classes('lang': Name@111) = null // through LazyPackageFragmentScopeForJavaPackage@110
    deserializedPackageScope = Empty@107 // through LazyPackageFragmentScopeForJavaPackage@110
    memberIndex = computeMemberIndex$1@112 // through LazyPackageFragmentScopeForJavaPackage@110
}

LazyJavaPackageFragment@63['lang'] {
    _functions('Exception': Name@94) = EmptyList@95[empty] // through LazyPackageFragmentScopeForJavaPackage@113
    _functions('checkType': Name@97) = EmptyList@95[empty] // through LazyPackageFragmentScopeForJavaPackage@113
    _functions('doA': Name@98) = EmptyList@95[empty] // through LazyPackageFragmentScopeForJavaPackage@113
    _functions('doIn': Name@99) = EmptyList@95[empty] // through LazyPackageFragmentScopeForJavaPackage@113
    _functions('doOut': Name@100) = EmptyList@95[empty] // through LazyPackageFragmentScopeForJavaPackage@113
    _functions('doT': Name@101) = EmptyList@95[empty] // through LazyPackageFragmentScopeForJavaPackage@113
    classes('Exception': Name@94) = LazyJavaClassDescriptor@2['Exception'] // through LazyPackageFragmentScopeForJavaPackage@113
    classes('checkType': Name@97) = null // through LazyPackageFragmentScopeForJavaPackage@113
    classes('doA': Name@98) = null // through LazyPackageFragmentScopeForJavaPackage@113
    classes('doIn': Name@99) = null // through LazyPackageFragmentScopeForJavaPackage@113
    classes('doOut': Name@100) = null // through LazyPackageFragmentScopeForJavaPackage@113
    classes('doT': Name@101) = null // through LazyPackageFragmentScopeForJavaPackage@113
    deserializedPackageScope = Empty@107 // through LazyPackageFragmentScopeForJavaPackage@113
    memberIndex = computeMemberIndex$1@114 // through LazyPackageFragmentScopeForJavaPackage@113
}
