DescriptorResolver@0 {
    <name not found> = JetTypeImpl@1['ArrayList<1>']
    <name not found> = JetTypeImpl@2['HashMap<2>']
    <name not found> = MutableClassDescriptor$1@3
    <name not found> = MutableClassDescriptor$1@4
    <name not found> = MutableClassDescriptor$1@5
    <name not found> = MutableClassDescriptor$1@6
    <name not found> = MutableClassDescriptor$1@7
    <name not found> = MutableClassDescriptor$1@8
    <name not found> = MutableClassDescriptor$1@9
    <name not found> = MutableClassDescriptor$1@10
    <name not found> = NullableType@11
}

LazyJavaClassDescriptor@12['AbstractCollection'] {
    defaultType = JetTypeImpl@13['AbstractCollection<1>']
    functions('add': Name@14) = ArrayList@15[1] { JavaMethodDescriptor@16['add'] } // through LazyJavaClassMemberScope@17
    functions('iterator': Name@18) = ArrayList@19[1] { JavaMethodDescriptor@20['iterator'] } // through LazyJavaClassMemberScope@17
    memberIndex = computeMemberIndex$1@21 // through LazyJavaClassMemberScope@17
    properties('add': Name@22) = EmptyList@23[empty] // through LazyJavaClassMemberScope@17
    properties('iterator': Name@24) = EmptyList@23[empty] // through LazyJavaClassMemberScope@17
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@25['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@26['AbstractCollection']
}

LazyJavaClassDescriptor@27['AbstractList'] {
    defaultType = JetTypeImpl@28['AbstractList<1>']
    functions('add': Name@29) = ArrayList@30[2] { JavaMethodDescriptor@31['add'], JavaMethodDescriptor@32['add'] } // through LazyJavaClassMemberScope@33
    functions('iterator': Name@34) = ArrayList@35[1] { JavaMethodDescriptor@36['iterator'] } // through LazyJavaClassMemberScope@33
    memberIndex = computeMemberIndex$1@37 // through LazyJavaClassMemberScope@33
    properties('add': Name@22) = EmptyList@23[empty] // through LazyJavaClassMemberScope@33
    properties('iterator': Name@24) = EmptyList@23[empty] // through LazyJavaClassMemberScope@33
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@38['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@39['AbstractList']
}

LazyJavaClassDescriptor@40['AbstractMap'] {
    defaultType = JetTypeImpl@41['AbstractMap<2>']
    functions('get': Name@42) = ArrayList@43[1] { JavaMethodDescriptor@44['get'] } // through LazyJavaClassMemberScope@45
    functions('keySet': Name@46) = ArrayList@47[1] { JavaMethodDescriptor@48['keySet'] } // through LazyJavaClassMemberScope@45
    functions('put': Name@49) = ArrayList@50[1] { JavaMethodDescriptor@51['put'] } // through LazyJavaClassMemberScope@45
    memberIndex = computeMemberIndex$1@52 // through LazyJavaClassMemberScope@45
    properties('get': Name@53) = EmptyList@23[empty] // through LazyJavaClassMemberScope@45
    properties('keySet': Name@54) = ArrayList@55[1] { JavaPropertyDescriptor@56['keySet'] } // through LazyJavaClassMemberScope@45
    properties('put': Name@57) = EmptyList@23[empty] // through LazyJavaClassMemberScope@45
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@58['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@59['AbstractMap']
}

LazyJavaClassDescriptor@60['AbstractStringBuilder'] {
    defaultType = JetTypeImpl@61['AbstractStringBuilder']
    functions('append': Name@62) = ArrayList@63[13] { JavaMethodDescriptor@64['append'], JavaMethodDescriptor@65['append'], JavaMethodDescriptor@66['append'], ... } // through LazyJavaClassMemberScope@67
    functions('toString': Name@68) = ArrayList@69[1] { JavaMethodDescriptor@70['toString'] } // through LazyJavaClassMemberScope@67
    memberIndex = computeMemberIndex$1@71 // through LazyJavaClassMemberScope@67
    properties('append': Name@72) = EmptyList@23[empty] // through LazyJavaClassMemberScope@67
    properties('toString': Name@73) = EmptyList@23[empty] // through LazyJavaClassMemberScope@67
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@74['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassDescriptor@76['Appendable'] {
    defaultType = JetTypeImpl@77['Appendable']
    functions('append': Name@78) = ArrayList@79[3] { JavaMethodDescriptor@80['append'], JavaMethodDescriptor@81['append'], JavaMethodDescriptor@82['append'] } // through LazyJavaClassMemberScope@83
    functions('print': Name@84) = EmptyList@23[empty] // through LazyJavaClassMemberScope@83
    functions('println': Name@85) = EmptyList@23[empty] // through LazyJavaClassMemberScope@83
    functions('toString': Name@86) = ArrayList@87[1] { DeserializedSimpleFunctionDescriptor@88['toString'] } // through LazyJavaClassMemberScope@83
    memberIndex = computeMemberIndex$1@89 // through LazyJavaClassMemberScope@83
    properties('append': Name@72) = EmptyList@23[empty] // through LazyJavaClassMemberScope@83
    properties('print': Name@90) = EmptyList@23[empty] // through LazyJavaClassMemberScope@83
    properties('println': Name@91) = EmptyList@23[empty] // through LazyJavaClassMemberScope@83
    properties('toString': Name@73) = EmptyList@23[empty] // through LazyJavaClassMemberScope@83
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@92['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@93['Appendable']
}

LazyJavaClassDescriptor@94['ArrayList'] {
    constructors = ArrayList@95[3] { JavaConstructorDescriptor@96['<init>'], JavaConstructorDescriptor@97['<init>'], JavaConstructorDescriptor@98['<init>'] } // through LazyJavaClassMemberScope@99
    defaultType = JetTypeImpl@100['ArrayList<1>']
    enumEntryIndex = LinkedHashMap@101 // through LazyJavaClassMemberScope@99
    functionTypeForSamInterface = null
    functions('add': Name@22) = ArrayList@102[2] { JavaMethodDescriptor@103['add'], JavaMethodDescriptor@104['add'] } // through LazyJavaClassMemberScope@99
    functions('iterator': Name@24) = ArrayList@105[1] { JavaMethodDescriptor@106['iterator'] } // through LazyJavaClassMemberScope@99
    memberIndex = computeMemberIndex$1@107 // through LazyJavaClassMemberScope@99
    nestedClassIndex = LinkedHashMap@108 // through LazyJavaClassMemberScope@99
    nestedClasses('add': Name@22) = null // through LazyJavaClassMemberScope@99
    nestedClasses('iterator': Name@24) = null // through LazyJavaClassMemberScope@99
    properties('add': Name@22) = EmptyList@23[empty] // through LazyJavaClassMemberScope@99
    properties('iterator': Name@24) = EmptyList@23[empty] // through LazyJavaClassMemberScope@99
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@109['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@110['ArrayList']
}

LazyJavaClassDescriptor@111['AutoCloseable'] {
    functions('print': Name@84) = EmptyList@23[empty] // through LazyJavaClassMemberScope@112
    functions('println': Name@85) = EmptyList@23[empty] // through LazyJavaClassMemberScope@112
    memberIndex = computeMemberIndex$1@113 // through LazyJavaClassMemberScope@112
    properties('print': Name@90) = EmptyList@23[empty] // through LazyJavaClassMemberScope@112
    properties('println': Name@91) = EmptyList@23[empty] // through LazyJavaClassMemberScope@112
    typeConstructor = LazyJavaClassTypeConstructor@114['AutoCloseable']
}

LazyJavaClassDescriptor@115['Closeable'] {
    functions('print': Name@84) = EmptyList@23[empty] // through LazyJavaClassMemberScope@116
    functions('println': Name@85) = EmptyList@23[empty] // through LazyJavaClassMemberScope@116
    memberIndex = computeMemberIndex$1@117 // through LazyJavaClassMemberScope@116
    properties('print': Name@90) = EmptyList@23[empty] // through LazyJavaClassMemberScope@116
    properties('println': Name@91) = EmptyList@23[empty] // through LazyJavaClassMemberScope@116
    typeConstructor = LazyJavaClassTypeConstructor@118['Closeable']
}

LazyJavaClassDescriptor@119['FilterOutputStream'] {
    functions('print': Name@84) = EmptyList@23[empty] // through LazyJavaClassMemberScope@120
    functions('println': Name@85) = EmptyList@23[empty] // through LazyJavaClassMemberScope@120
    memberIndex = computeMemberIndex$1@121 // through LazyJavaClassMemberScope@120
    properties('print': Name@90) = EmptyList@23[empty] // through LazyJavaClassMemberScope@120
    properties('println': Name@91) = EmptyList@23[empty] // through LazyJavaClassMemberScope@120
    typeConstructor = LazyJavaClassTypeConstructor@122['FilterOutputStream']
}

LazyJavaClassDescriptor@123['HashMap'] {
    constructors = ArrayList@124[4] { JavaConstructorDescriptor@125['<init>'], JavaConstructorDescriptor@126['<init>'], JavaConstructorDescriptor@127['<init>'], ... } // through LazyJavaClassMemberScope@128
    defaultType = JetTypeImpl@129['HashMap<2>']
    enumEntryIndex = LinkedHashMap@130 // through LazyJavaClassMemberScope@128
    functionTypeForSamInterface = null
    functions('get': Name@53) = ArrayList@131[1] { JavaMethodDescriptor@132['get'] } // through LazyJavaClassMemberScope@128
    functions('keySet': Name@54) = ArrayList@133[1] { JavaMethodDescriptor@134['keySet'] } // through LazyJavaClassMemberScope@128
    functions('put': Name@57) = ArrayList@135[1] { JavaMethodDescriptor@136['put'] } // through LazyJavaClassMemberScope@128
    memberIndex = computeMemberIndex$1@137 // through LazyJavaClassMemberScope@128
    nestedClassIndex = LinkedHashMap@138 // through LazyJavaClassMemberScope@128
    nestedClasses('get': Name@53) = null // through LazyJavaClassMemberScope@128
    nestedClasses('keySet': Name@54) = null // through LazyJavaClassMemberScope@128
    nestedClasses('put': Name@57) = null // through LazyJavaClassMemberScope@128
    properties('get': Name@53) = EmptyList@23[empty] // through LazyJavaClassMemberScope@128
    properties('keySet': Name@54) = ArrayList@139[1] { PropertyDescriptorImpl@140['keySet'] } // through LazyJavaClassMemberScope@128
    properties('put': Name@57) = EmptyList@23[empty] // through LazyJavaClassMemberScope@128
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@141['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@142['HashMap']
}

LazyJavaClassDescriptor@143['OutputStream'] {
    functions('print': Name@84) = EmptyList@23[empty] // through LazyJavaClassMemberScope@144
    functions('println': Name@85) = EmptyList@23[empty] // through LazyJavaClassMemberScope@144
    memberIndex = computeMemberIndex$1@145 // through LazyJavaClassMemberScope@144
    properties('print': Name@90) = EmptyList@23[empty] // through LazyJavaClassMemberScope@144
    properties('println': Name@91) = EmptyList@23[empty] // through LazyJavaClassMemberScope@144
    typeConstructor = LazyJavaClassTypeConstructor@146['OutputStream']
}

LazyJavaClassDescriptor@147['PrintStream'] {
    defaultType = JetTypeImpl@148['PrintStream']
    enumEntryIndex = LinkedHashMap@149 // through LazyJavaClassMemberScope@150
    functions('print': Name@90) = ArrayList@151[9] { JavaMethodDescriptor@152['print'], JavaMethodDescriptor@153['print'], JavaMethodDescriptor@154['print'], ... } // through LazyJavaClassMemberScope@150
    functions('println': Name@91) = ArrayList@155[10] { JavaMethodDescriptor@156['println'], JavaMethodDescriptor@157['println'], JavaMethodDescriptor@158['println'], ... } // through LazyJavaClassMemberScope@150
    memberIndex = computeMemberIndex$1@159 // through LazyJavaClassMemberScope@150
    nestedClassIndex = LinkedHashMap@160 // through LazyJavaClassMemberScope@150
    nestedClasses('print': Name@90) = null // through LazyJavaClassMemberScope@150
    nestedClasses('println': Name@91) = null // through LazyJavaClassMemberScope@150
    properties('print': Name@90) = EmptyList@23[empty] // through LazyJavaClassMemberScope@150
    properties('println': Name@91) = EmptyList@23[empty] // through LazyJavaClassMemberScope@150
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@161['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@162['PrintStream']
}

LazyJavaClassDescriptor@163['RandomAccess'] {
    functions('add': Name@29) = EmptyList@23[empty] // through LazyJavaClassMemberScope@164
    functions('iterator': Name@34) = EmptyList@23[empty] // through LazyJavaClassMemberScope@164
    memberIndex = computeMemberIndex$1@165 // through LazyJavaClassMemberScope@164
    properties('add': Name@22) = EmptyList@23[empty] // through LazyJavaClassMemberScope@164
    properties('iterator': Name@24) = EmptyList@23[empty] // through LazyJavaClassMemberScope@164
    typeConstructor = LazyJavaClassTypeConstructor@166['RandomAccess']
}

LazyJavaClassDescriptor@167['Serializable'] {
    defaultType = JetTypeImpl@168['Serializable']
    functions('add': Name@29) = EmptyList@23[empty] // through LazyJavaClassMemberScope@169
    functions('append': Name@62) = EmptyList@23[empty] // through LazyJavaClassMemberScope@169
    functions('get': Name@42) = EmptyList@23[empty] // through LazyJavaClassMemberScope@169
    functions('iterator': Name@34) = EmptyList@23[empty] // through LazyJavaClassMemberScope@169
    functions('keySet': Name@46) = EmptyList@23[empty] // through LazyJavaClassMemberScope@169
    functions('put': Name@49) = EmptyList@23[empty] // through LazyJavaClassMemberScope@169
    functions('toString': Name@68) = ArrayList@170[1] { DeserializedSimpleFunctionDescriptor@171['toString'] } // through LazyJavaClassMemberScope@169
    memberIndex = computeMemberIndex$1@172 // through LazyJavaClassMemberScope@169
    properties('add': Name@22) = EmptyList@23[empty] // through LazyJavaClassMemberScope@169
    properties('append': Name@72) = EmptyList@23[empty] // through LazyJavaClassMemberScope@169
    properties('get': Name@53) = EmptyList@23[empty] // through LazyJavaClassMemberScope@169
    properties('iterator': Name@24) = EmptyList@23[empty] // through LazyJavaClassMemberScope@169
    properties('keySet': Name@54) = EmptyList@23[empty] // through LazyJavaClassMemberScope@169
    properties('put': Name@57) = EmptyList@23[empty] // through LazyJavaClassMemberScope@169
    properties('toString': Name@73) = EmptyList@23[empty] // through LazyJavaClassMemberScope@169
    typeConstructor = LazyJavaClassTypeConstructor@173['Serializable']
}

LazyJavaClassDescriptor@174['StringBuffer'] {
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@175['StringBuffer']
}

LazyJavaClassDescriptor@176['StringBuilder'] {
    constructors = ArrayList@177[4] { JavaConstructorDescriptor@178['<init>'], JavaConstructorDescriptor@179['<init>'], JavaConstructorDescriptor@180['<init>'], ... } // through LazyJavaClassMemberScope@181
    defaultType = JetTypeImpl@182['StringBuilder']
    enumEntryIndex = LinkedHashMap@183 // through LazyJavaClassMemberScope@181
    functionTypeForSamInterface = null
    functions('append': Name@72) = ArrayList@184[14] { JavaMethodDescriptor@185['append'], JavaMethodDescriptor@186['append'], JavaMethodDescriptor@187['append'], ... } // through LazyJavaClassMemberScope@181
    functions('toString': Name@73) = ArrayList@188[1] { JavaMethodDescriptor@189['toString'] } // through LazyJavaClassMemberScope@181
    memberIndex = computeMemberIndex$1@190 // through LazyJavaClassMemberScope@181
    nestedClassIndex = LinkedHashMap@191 // through LazyJavaClassMemberScope@181
    nestedClasses('append': Name@72) = null // through LazyJavaClassMemberScope@181
    nestedClasses('toString': Name@73) = null // through LazyJavaClassMemberScope@181
    properties('append': Name@72) = EmptyList@23[empty] // through LazyJavaClassMemberScope@181
    properties('toString': Name@73) = EmptyList@23[empty] // through LazyJavaClassMemberScope@181
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@192['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassDescriptor@194['System'] {
    enumEntryIndex = LinkedHashMap@195 // through LazyJavaClassMemberScope@196
    memberIndex = computeMemberIndex$1@197 // through LazyJavaClassMemberScope@196
    memberIndex = computeMemberIndex$1@198 // through LazyJavaStaticClassScope@199
    nestedClassIndex = LinkedHashMap@200 // through LazyJavaClassMemberScope@196
    nestedClasses('out': Name@201) = null // through LazyJavaClassMemberScope@196
    properties('out': Name@201) = ArrayList@202[1] { JavaPropertyDescriptor@203['out'] } // through LazyJavaStaticClassScope@199
    properties('out': Name@201) = EmptyList@23[empty] // through LazyJavaClassMemberScope@196
    typeConstructor = LazyJavaClassTypeConstructor@204['System']
}

LazyJavaClassTypeConstructor@26['AbstractCollection'] {
    parameters = ArrayList@205[1] { LazyJavaTypeParameterDescriptor@206['E'] }
    supertypes = ArrayList@207[1] { LazyJavaClassifierType@208['Collection<E>'] }
}

LazyJavaClassTypeConstructor@39['AbstractList'] {
    parameters = ArrayList@209[1] { LazyJavaTypeParameterDescriptor@210['E'] }
    supertypes = ArrayList@211[2] { LazyJavaClassifierType@212['AbstractCollection<E>'], LazyJavaClassifierType@213['List<E>'] }
}

LazyJavaClassTypeConstructor@59['AbstractMap'] {
    parameters = ArrayList@214[2] { LazyJavaTypeParameterDescriptor@215['K'], LazyJavaTypeParameterDescriptor@216['V'] }
    supertypes = ArrayList@217[1] { LazyJavaClassifierType@218['Map<K, V>'] }
}

LazyJavaClassTypeConstructor@75['AbstractStringBuilder'] {
    parameters = ArrayList@219[empty]
    supertypes = ArrayList@220[2] { LazyJavaClassifierType@221['Appendable'], LazyJavaClassifierType@222['CharSequence'] }
}

LazyJavaClassTypeConstructor@93['Appendable'] {
    parameters = ArrayList@223[empty]
    supertypes = ArrayList@224[1] { JetTypeImpl@225['Any'] }
}

LazyJavaClassTypeConstructor@110['ArrayList'] {
    parameters = ArrayList@226[1] { LazyJavaTypeParameterDescriptor@227['E'] }
    supertypes = ArrayList@228[5] { LazyJavaClassifierType@229['AbstractList<E>'], LazyJavaClassifierType@230['List<E>'], LazyJavaClassifierType@231['RandomAccess'], ... }
}

LazyJavaClassTypeConstructor@114['AutoCloseable'] {
    parameters = ArrayList@232[empty]
    supertypes = ArrayList@233[1] { JetTypeImpl@225['Any'] }
}

LazyJavaClassTypeConstructor@118['Closeable'] {
    parameters = ArrayList@234[empty]
    supertypes = ArrayList@235[1] { LazyJavaClassifierType@236['AutoCloseable'] }
}

LazyJavaClassTypeConstructor@122['FilterOutputStream'] {
    parameters = ArrayList@237[empty]
    supertypes = ArrayList@238[1] { LazyJavaClassifierType@239['OutputStream'] }
}

LazyJavaClassTypeConstructor@142['HashMap'] {
    parameters = ArrayList@240[2] { LazyJavaTypeParameterDescriptor@241['K'], LazyJavaTypeParameterDescriptor@242['V'] }
    supertypes = ArrayList@243[4] { LazyJavaClassifierType@244['AbstractMap<K, V>'], LazyJavaClassifierType@245['Map<K, V>'], LazyJavaClassifierType@246['Cloneable'], ... }
}

LazyJavaClassTypeConstructor@146['OutputStream'] {
    parameters = ArrayList@247[empty]
    supertypes = ArrayList@248[1] { LazyJavaClassifierType@249['Closeable'] }
}

LazyJavaClassTypeConstructor@162['PrintStream'] {
    parameters = ArrayList@250[empty]
    supertypes = ArrayList@251[3] { LazyJavaClassifierType@252['FilterOutputStream'], LazyJavaClassifierType@253['Appendable'], LazyJavaClassifierType@254['Closeable'] }
}

LazyJavaClassTypeConstructor@166['RandomAccess'] {
    parameters = ArrayList@255[empty]
    supertypes = ArrayList@256[1] { JetTypeImpl@225['Any'] }
}

LazyJavaClassTypeConstructor@173['Serializable'] {
    parameters = ArrayList@257[empty]
    supertypes = ArrayList@258[1] { JetTypeImpl@225['Any'] }
}

LazyJavaClassTypeConstructor@175['StringBuffer'] {
    parameters = ArrayList@259[empty]
    supertypes = ArrayList@260[3] { LazyJavaClassifierType@261['AbstractStringBuilder'], LazyJavaClassifierType@262['Serializable'], LazyJavaClassifierType@263['CharSequence'] }
}

LazyJavaClassTypeConstructor@193['StringBuilder'] {
    parameters = ArrayList@264[empty]
    supertypes = ArrayList@265[3] { LazyJavaClassifierType@266['AbstractStringBuilder'], LazyJavaClassifierType@267['Serializable'], LazyJavaClassifierType@268['CharSequence'] }
}

LazyJavaClassTypeConstructor@204['System'] {
    supertypes = ArrayList@269[1] { JetTypeImpl@225['Any'] }
}

LazyJavaClassifierType@212['AbstractCollection<E>'] {
    arguments = ArrayList@270[1] { TypeProjectionImpl@271 }
    classifier = JavaClassImpl@272['AbstractCollection']
    memberScope = SubstitutingScope@273
    typeConstructor = LazyJavaClassTypeConstructor@26['AbstractCollection']
}

LazyJavaClassifierType@229['AbstractList<E>'] {
    arguments = ArrayList@274[1] { TypeProjectionImpl@275 }
    classifier = JavaClassImpl@276['AbstractList']
    memberScope = SubstitutingScope@277
    typeConstructor = LazyJavaClassTypeConstructor@39['AbstractList']
}

LazyJavaClassifierType@244['AbstractMap<K, V>'] {
    arguments = ArrayList@278[2] { TypeProjectionImpl@279, TypeProjectionImpl@280 }
    classifier = JavaClassImpl@281['AbstractMap']
    memberScope = SubstitutingScope@282
    typeConstructor = LazyJavaClassTypeConstructor@59['AbstractMap']
}

LazyJavaClassifierType@266['AbstractStringBuilder'] {
    arguments = ArrayList@283[empty]
    classifier = JavaClassImpl@284['AbstractStringBuilder']
    memberScope = LazyJavaClassMemberScope@67
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@285['AbstractStringBuilder'] {
    arguments = ArrayList@286[empty]
    classifier = JavaClassImpl@287['AbstractStringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@289['AbstractStringBuilder'] {
    arguments = ArrayList@290[empty]
    classifier = JavaClassImpl@291['AbstractStringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@292['AbstractStringBuilder'] {
    arguments = ArrayList@293[empty]
    classifier = JavaClassImpl@294['AbstractStringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@295['AbstractStringBuilder'] {
    arguments = ArrayList@296[empty]
    classifier = JavaClassImpl@297['AbstractStringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@298['AbstractStringBuilder'] {
    arguments = ArrayList@299[empty]
    classifier = JavaClassImpl@300['AbstractStringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@301['AbstractStringBuilder'] {
    arguments = ArrayList@302[empty]
    classifier = JavaClassImpl@303['AbstractStringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@304['AbstractStringBuilder'] {
    arguments = ArrayList@305[empty]
    classifier = JavaClassImpl@306['AbstractStringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@307['AbstractStringBuilder'] {
    arguments = ArrayList@308[empty]
    classifier = JavaClassImpl@309['AbstractStringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@310['AbstractStringBuilder'] {
    arguments = ArrayList@311[empty]
    classifier = JavaClassImpl@312['AbstractStringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@313['AbstractStringBuilder'] {
    arguments = ArrayList@314[empty]
    classifier = JavaClassImpl@315['AbstractStringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@316['AbstractStringBuilder'] {
    arguments = ArrayList@317[empty]
    classifier = JavaClassImpl@318['AbstractStringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@319['AbstractStringBuilder'] {
    arguments = ArrayList@320[empty]
    classifier = JavaClassImpl@321['AbstractStringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@322['AbstractStringBuilder'] {
    arguments = ArrayList@323[empty]
    classifier = JavaClassImpl@324['AbstractStringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@325['AbstractStringBuilder'] {
    arguments = ArrayList@326[empty]
    classifier = JavaClassImpl@291['AbstractStringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@328['AbstractStringBuilder'] {
    arguments = ArrayList@329[empty]
    classifier = JavaClassImpl@303['AbstractStringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@330['AbstractStringBuilder'] {
    arguments = ArrayList@331[empty]
    classifier = JavaClassImpl@297['AbstractStringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@332['AbstractStringBuilder'] {
    arguments = ArrayList@333[empty]
    classifier = JavaClassImpl@287['AbstractStringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@334['AbstractStringBuilder'] {
    arguments = ArrayList@335[empty]
    classifier = JavaClassImpl@312['AbstractStringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@336['AbstractStringBuilder'] {
    arguments = ArrayList@337[empty]
    classifier = JavaClassImpl@321['AbstractStringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@338['AbstractStringBuilder'] {
    arguments = ArrayList@339[empty]
    classifier = JavaClassImpl@309['AbstractStringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@340['AbstractStringBuilder'] {
    arguments = ArrayList@341[empty]
    classifier = JavaClassImpl@306['AbstractStringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@342['AbstractStringBuilder'] {
    arguments = ArrayList@343[empty]
    classifier = JavaClassImpl@315['AbstractStringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@344['AbstractStringBuilder'] {
    arguments = ArrayList@345[empty]
    classifier = JavaClassImpl@324['AbstractStringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@346['AbstractStringBuilder'] {
    arguments = ArrayList@347[empty]
    classifier = JavaClassImpl@294['AbstractStringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@348['AbstractStringBuilder'] {
    arguments = ArrayList@349[empty]
    classifier = JavaClassImpl@300['AbstractStringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@350['AbstractStringBuilder'] {
    arguments = ArrayList@351[empty]
    classifier = JavaClassImpl@318['AbstractStringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@261['AbstractStringBuilder'] {
    arguments = ArrayList@352[empty]
    classifier = JavaClassImpl@353['AbstractStringBuilder']
    typeConstructor = LazyJavaClassTypeConstructor@75['AbstractStringBuilder']
}

LazyJavaClassifierType@221['Appendable'] {
    arguments = ArrayList@354[empty]
    classifier = JavaClassImpl@355['Appendable']
    memberScope = LazyJavaClassMemberScope@83
    typeConstructor = LazyJavaClassTypeConstructor@93['Appendable']
}

LazyJavaClassifierType@253['Appendable'] {
    arguments = ArrayList@356[empty]
    classifier = JavaClassImpl@357['Appendable']
    memberScope = LazyJavaClassMemberScope@83
    typeConstructor = LazyJavaClassTypeConstructor@93['Appendable']
}

LazyJavaClassifierType@358['Appendable'] {
    arguments = ArrayList@359[empty]
    classifier = JavaClassImpl@360['Appendable']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@93['Appendable']
}

LazyJavaClassifierType@361['Appendable'] {
    arguments = ArrayList@362[empty]
    classifier = JavaClassImpl@363['Appendable']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@93['Appendable']
}

LazyJavaClassifierType@364['Appendable'] {
    arguments = ArrayList@365[empty]
    classifier = JavaClassImpl@366['Appendable']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@93['Appendable']
}

LazyJavaClassifierType@367['Appendable'] {
    arguments = ArrayList@368[empty]
    classifier = JavaClassImpl@363['Appendable']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@93['Appendable']
}

LazyJavaClassifierType@369['Appendable'] {
    arguments = ArrayList@370[empty]
    classifier = JavaClassImpl@360['Appendable']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@93['Appendable']
}

LazyJavaClassifierType@371['Appendable'] {
    arguments = ArrayList@372[empty]
    classifier = JavaClassImpl@366['Appendable']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@93['Appendable']
}

LazyJavaClassifierType@236['AutoCloseable'] {
    arguments = ArrayList@373[empty]
    classifier = JavaClassImpl@374['AutoCloseable']
    memberScope = LazyJavaClassMemberScope@112
    typeConstructor = LazyJavaClassTypeConstructor@114['AutoCloseable']
}

LazyJavaClassifierType@222['CharSequence'] {
    arguments = ArrayList@375[empty]
    classifier = JavaClassImpl@376['CharSequence']
    memberScope = DeserializedClassMemberScope@377
    typeConstructor = DeserializedClassTypeConstructor@378
}

LazyJavaClassifierType@268['CharSequence'] {
    arguments = ArrayList@379[empty]
    classifier = JavaClassImpl@380['CharSequence']
    memberScope = DeserializedClassMemberScope@377
    typeConstructor = DeserializedClassTypeConstructor@378
}

LazyJavaClassifierType@381['CharSequence'] {
    arguments = ArrayList@382[empty]
    classifier = JavaClassImpl@383['CharSequence']
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@378
}

LazyJavaClassifierType@384['CharSequence'] {
    arguments = ArrayList@385[empty]
    classifier = JavaClassImpl@386['CharSequence']
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@378
}

LazyJavaClassifierType@387['CharSequence'] {
    arguments = ArrayList@388[empty]
    classifier = JavaClassImpl@389['CharSequence']
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@378
}

LazyJavaClassifierType@390['CharSequence'] {
    arguments = ArrayList@391[empty]
    classifier = JavaClassImpl@392['CharSequence']
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@378
}

LazyJavaClassifierType@393['CharSequence'] {
    arguments = ArrayList@394[empty]
    classifier = JavaClassImpl@395['CharSequence']
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@378
}

LazyJavaClassifierType@396['CharSequence'] {
    arguments = ArrayList@397[empty]
    classifier = JavaClassImpl@398['CharSequence']
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@378
}

LazyJavaClassifierType@399['CharSequence'] {
    arguments = ArrayList@400[empty]
    classifier = JavaClassImpl@401['CharSequence']
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@378
}

LazyJavaClassifierType@402['CharSequence'] {
    arguments = ArrayList@403[empty]
    classifier = JavaClassImpl@389['CharSequence']
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@378
}

LazyJavaClassifierType@404['CharSequence'] {
    arguments = ArrayList@405[empty]
    classifier = JavaClassImpl@383['CharSequence']
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@378
}

LazyJavaClassifierType@406['CharSequence'] {
    arguments = ArrayList@407[empty]
    classifier = JavaClassImpl@386['CharSequence']
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@378
}

LazyJavaClassifierType@408['CharSequence'] {
    arguments = ArrayList@409[empty]
    classifier = JavaClassImpl@392['CharSequence']
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@378
}

LazyJavaClassifierType@410['CharSequence'] {
    arguments = ArrayList@411[empty]
    classifier = JavaClassImpl@395['CharSequence']
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@378
}

LazyJavaClassifierType@412['CharSequence'] {
    arguments = ArrayList@413[empty]
    classifier = JavaClassImpl@401['CharSequence']
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@378
}

LazyJavaClassifierType@414['CharSequence'] {
    arguments = ArrayList@415[empty]
    classifier = JavaClassImpl@398['CharSequence']
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@378
}

LazyJavaClassifierType@263['CharSequence'] {
    classifier = JavaClassImpl@416['CharSequence']
    typeConstructor = DeserializedClassTypeConstructor@378
}

LazyJavaClassifierType@417['Cloneable'] {
    arguments = ArrayList@418[empty]
    classifier = JavaClassImpl@419['Cloneable']
    memberScope = DeserializedClassMemberScope@420
    typeConstructor = DeserializedClassTypeConstructor@421
}

LazyJavaClassifierType@246['Cloneable'] {
    arguments = ArrayList@422[empty]
    classifier = JavaClassImpl@423['Cloneable']
    memberScope = DeserializedClassMemberScope@420
    typeConstructor = DeserializedClassTypeConstructor@421
}

LazyJavaClassifierType@249['Closeable'] {
    arguments = ArrayList@424[empty]
    classifier = JavaClassImpl@425['Closeable']
    memberScope = LazyJavaClassMemberScope@116
    typeConstructor = LazyJavaClassTypeConstructor@118['Closeable']
}

LazyJavaClassifierType@254['Closeable'] {
    arguments = ArrayList@426[empty]
    classifier = JavaClassImpl@427['Closeable']
    memberScope = LazyJavaClassMemberScope@116
    typeConstructor = LazyJavaClassTypeConstructor@118['Closeable']
}

LazyJavaClassifierType@428['Collection<? extends E>'] {
    arguments = ArrayList@429[1] { TypeProjectionImpl@430 }
    classifier = JavaClassImpl@431['Collection']
    memberScope = SubstitutingScope@432
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@433
}

LazyJavaClassifierType@434['Collection<? extends E>'] {
    arguments = ArrayList@435[1] { TypeProjectionImpl@436 }
    classifier = JavaClassImpl@431['Collection']
    memberScope = SubstitutingScope@437
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@438
}

LazyJavaClassifierType@208['Collection<E>'] {
    arguments = ArrayList@439[1] { TypeProjectionImpl@440 }
    classifier = JavaClassImpl@441['Collection']
    memberScope = SubstitutingScope@442
    typeConstructor = DeserializedClassTypeConstructor@433
}

LazyJavaClassifierType@443['E'] {
    arguments = ArrayList@444[empty]
    classifier = JavaTypeParameterImpl@445['E']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@446
}

LazyJavaClassifierType@447['E'] {
    arguments = ArrayList@448[empty]
    classifier = JavaTypeParameterImpl@449['E']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@450
}

LazyJavaClassifierType@451['E'] {
    arguments = ArrayList@452[empty]
    classifier = JavaTypeParameterImpl@453['E']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@446
}

LazyJavaClassifierType@454['E'] {
    arguments = ArrayList@455[empty]
    classifier = JavaTypeParameterImpl@456['E']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@450
}

LazyJavaClassifierType@457['E'] {
    arguments = ArrayList@458[empty]
    classifier = JavaTypeParameterImpl@459['E']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@446
}

LazyJavaClassifierType@460['E'] {
    arguments = ArrayList@461[empty]
    classifier = JavaTypeParameterImpl@462['E']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@450
}

LazyJavaClassifierType@463['E'] {
    arguments = ArrayList@464[empty]
    classifier = JavaTypeParameterImpl@465['E']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@450
}

LazyJavaClassifierType@466['E'] {
    arguments = ArrayList@467[empty]
    classifier = JavaTypeParameterImpl@468['E']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@450
}

LazyJavaClassifierType@469['E'] {
    arguments = ArrayList@470[empty]
    classifier = JavaTypeParameterImpl@471['E']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@446
}

LazyJavaClassifierType@472['E'] {
    arguments = ArrayList@473[empty]
    classifier = JavaTypeParameterImpl@474['E']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@475
}

LazyJavaClassifierType@476['E'] {
    arguments = ArrayList@477[empty]
    classifier = JavaTypeParameterImpl@478['E']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@446
}

LazyJavaClassifierType@479['E'] {
    arguments = ArrayList@480[empty]
    classifier = JavaTypeParameterImpl@481['E']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@450
}

LazyJavaClassifierType@482['E'] {
    arguments = ArrayList@483[empty]
    classifier = JavaTypeParameterImpl@484['E']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@450
}

LazyJavaClassifierType@485['E'] {
    arguments = ArrayList@486[empty]
    classifier = JavaTypeParameterImpl@487['E']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@446
}

LazyJavaClassifierType@488['E'] {
    arguments = ArrayList@489[empty]
    classifier = JavaTypeParameterImpl@490['E']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@450
}

LazyJavaClassifierType@491['E'] {
    arguments = ArrayList@492[empty]
    classifier = JavaTypeParameterImpl@493['E']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@475
}

LazyJavaClassifierType@494['E'] {
    arguments = ArrayList@495[empty]
    classifier = JavaTypeParameterImpl@496['E']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@475
}

LazyJavaClassifierType@497['E'] {
    arguments = ArrayList@498[empty]
    classifier = JavaTypeParameterImpl@499['E']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@475
}

LazyJavaClassifierType@500['E'] {
    arguments = ArrayList@501[empty]
    classifier = JavaTypeParameterImpl@496['E']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@475
}

LazyJavaClassifierType@502['E'] {
    arguments = ArrayList@503[empty]
    classifier = JavaTypeParameterImpl@481['E']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@450
}

LazyJavaClassifierType@504['E'] {
    arguments = ArrayList@505[empty]
    classifier = JavaTypeParameterImpl@456['E']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@450
}

LazyJavaClassifierType@506['E'] {
    arguments = ArrayList@507[empty]
    classifier = JavaTypeParameterImpl@487['E']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@446
}

LazyJavaClassifierType@508['E'] {
    arguments = ArrayList@509[empty]
    classifier = JavaTypeParameterImpl@462['E']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@450
}

LazyJavaClassifierType@510['E'] {
    arguments = ArrayList@511[empty]
    classifier = JavaTypeParameterImpl@474['E']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@475
}

LazyJavaClassifierType@512['E'] {
    arguments = ArrayList@513[empty]
    classifier = JavaTypeParameterImpl@445['E']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@446
}

LazyJavaClassifierType@514['E'] {
    arguments = ArrayList@515[empty]
    classifier = JavaTypeParameterImpl@449['E']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@450
}

LazyJavaClassifierType@516['E'] {
    arguments = ArrayList@517[empty]
    classifier = JavaTypeParameterImpl@459['E']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@446
}

LazyJavaClassifierType@518['E'] {
    arguments = ArrayList@519[empty]
    classifier = JavaTypeParameterImpl@468['E']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@450
}

LazyJavaClassifierType@520['E'] {
    arguments = ArrayList@521[empty]
    classifier = JavaTypeParameterImpl@465['E']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@450
}

LazyJavaClassifierType@522['E'] {
    arguments = ArrayList@523[empty]
    classifier = JavaTypeParameterImpl@490['E']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@450
}

LazyJavaClassifierType@524['E'] {
    arguments = ArrayList@525[empty]
    classifier = JavaTypeParameterImpl@453['E']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@446
}

LazyJavaClassifierType@526['E'] {
    arguments = ArrayList@527[empty]
    classifier = JavaTypeParameterImpl@478['E']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@446
}

LazyJavaClassifierType@528['E'] {
    arguments = ArrayList@529[empty]
    classifier = JavaTypeParameterImpl@493['E']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@475
}

LazyJavaClassifierType@530['E'] {
    arguments = ArrayList@531[empty]
    classifier = JavaTypeParameterImpl@484['E']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@450
}

LazyJavaClassifierType@532['E'] {
    arguments = ArrayList@533[empty]
    classifier = JavaTypeParameterImpl@499['E']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@475
}

LazyJavaClassifierType@534['E'] {
    arguments = ArrayList@535[empty]
    classifier = JavaTypeParameterImpl@471['E']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@446
}

LazyJavaClassifierType@252['FilterOutputStream'] {
    arguments = ArrayList@536[empty]
    classifier = JavaClassImpl@537['FilterOutputStream']
    memberScope = LazyJavaClassMemberScope@120
    typeConstructor = LazyJavaClassTypeConstructor@122['FilterOutputStream']
}

LazyJavaClassifierType@538['Flushable'] {
    classifier = null
    typeConstructor = TypeConstructorImpl$1@539
}

LazyJavaClassifierType@540['Iterator<E>'] {
    arguments = ArrayList@541[1] { TypeProjectionImpl@542 }
    classifier = JavaClassImpl@543['Iterator']
    memberScope = SubstitutingScope@544
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@545
}

LazyJavaClassifierType@546['Iterator<E>'] {
    arguments = ArrayList@547[1] { TypeProjectionImpl@548 }
    classifier = JavaClassImpl@549['Iterator']
    memberScope = SubstitutingScope@550
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@545
}

LazyJavaClassifierType@551['Iterator<E>'] {
    arguments = ArrayList@552[1] { TypeProjectionImpl@553 }
    classifier = JavaClassImpl@554['Iterator']
    memberScope = SubstitutingScope@555
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@545
}

LazyJavaClassifierType@556['Iterator<E>'] {
    arguments = ArrayList@557[1] { TypeProjectionImpl@558 }
    classifier = JavaClassImpl@549['Iterator']
    memberScope = SubstitutingScope@559
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@560
}

LazyJavaClassifierType@561['Iterator<E>'] {
    arguments = ArrayList@562[1] { TypeProjectionImpl@563 }
    classifier = JavaClassImpl@543['Iterator']
    memberScope = SubstitutingScope@564
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@560
}

LazyJavaClassifierType@565['Iterator<E>'] {
    arguments = ArrayList@566[1] { TypeProjectionImpl@567 }
    classifier = JavaClassImpl@554['Iterator']
    memberScope = SubstitutingScope@568
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@560
}

LazyJavaClassifierType@569['K'] {
    arguments = ArrayList@570[empty]
    classifier = JavaTypeParameterImpl@571['K']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@572
}

LazyJavaClassifierType@573['K'] {
    arguments = ArrayList@574[empty]
    classifier = JavaTypeParameterImpl@575['K']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@576
}

LazyJavaClassifierType@577['K'] {
    arguments = ArrayList@578[empty]
    classifier = JavaTypeParameterImpl@579['K']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@576
}

LazyJavaClassifierType@580['K'] {
    arguments = ArrayList@581[empty]
    classifier = JavaTypeParameterImpl@582['K']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@576
}

LazyJavaClassifierType@583['K'] {
    arguments = ArrayList@584[empty]
    classifier = JavaTypeParameterImpl@585['K']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@572
}

LazyJavaClassifierType@586['K'] {
    arguments = ArrayList@587[empty]
    classifier = JavaTypeParameterImpl@588['K']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@576
}

LazyJavaClassifierType@589['K'] {
    arguments = ArrayList@590[empty]
    classifier = JavaTypeParameterImpl@591['K']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@572
}

LazyJavaClassifierType@592['K'] {
    arguments = ArrayList@593[empty]
    classifier = JavaTypeParameterImpl@594['K']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@572
}

LazyJavaClassifierType@595['K'] {
    arguments = ArrayList@596[empty]
    classifier = JavaTypeParameterImpl@597['K']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@576
}

LazyJavaClassifierType@598['K'] {
    arguments = ArrayList@599[empty]
    classifier = JavaTypeParameterImpl@600['K']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@576
}

LazyJavaClassifierType@601['K'] {
    arguments = ArrayList@602[empty]
    classifier = JavaTypeParameterImpl@603['K']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@572
}

LazyJavaClassifierType@604['K'] {
    arguments = ArrayList@605[empty]
    classifier = JavaTypeParameterImpl@606['K']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@576
}

LazyJavaClassifierType@607['K'] {
    arguments = ArrayList@608[empty]
    classifier = JavaTypeParameterImpl@609['K']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@572
}

LazyJavaClassifierType@610['K'] {
    arguments = ArrayList@611[empty]
    classifier = JavaTypeParameterImpl@582['K']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@576
}

LazyJavaClassifierType@612['K'] {
    arguments = ArrayList@613[empty]
    classifier = JavaTypeParameterImpl@597['K']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@576
}

LazyJavaClassifierType@614['K'] {
    arguments = ArrayList@615[empty]
    classifier = JavaTypeParameterImpl@609['K']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@572
}

LazyJavaClassifierType@616['K'] {
    arguments = ArrayList@617[empty]
    classifier = JavaTypeParameterImpl@594['K']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@572
}

LazyJavaClassifierType@618['K'] {
    arguments = ArrayList@619[empty]
    classifier = JavaTypeParameterImpl@588['K']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@576
}

LazyJavaClassifierType@620['K'] {
    arguments = ArrayList@621[empty]
    classifier = JavaTypeParameterImpl@603['K']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@572
}

LazyJavaClassifierType@622['K'] {
    arguments = ArrayList@623[empty]
    classifier = JavaTypeParameterImpl@600['K']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@576
}

LazyJavaClassifierType@624['K'] {
    arguments = ArrayList@625[empty]
    classifier = JavaTypeParameterImpl@585['K']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@572
}

LazyJavaClassifierType@626['K'] {
    arguments = ArrayList@627[empty]
    classifier = JavaTypeParameterImpl@575['K']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@576
}

LazyJavaClassifierType@628['K'] {
    arguments = ArrayList@629[empty]
    classifier = JavaTypeParameterImpl@606['K']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@576
}

LazyJavaClassifierType@630['K'] {
    arguments = ArrayList@631[empty]
    classifier = JavaTypeParameterImpl@591['K']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@572
}

LazyJavaClassifierType@632['K'] {
    arguments = ArrayList@633[empty]
    classifier = JavaTypeParameterImpl@579['K']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@576
}

LazyJavaClassifierType@634['K'] {
    arguments = ArrayList@635[empty]
    classifier = JavaTypeParameterImpl@571['K']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@572
}

LazyJavaClassifierType@230['List<E>'] {
    arguments = ArrayList@636[1] { TypeProjectionImpl@637 }
    classifier = JavaClassImpl@638['List']
    memberScope = SubstitutingScope@639
    typeConstructor = DeserializedClassTypeConstructor@640
}

LazyJavaClassifierType@213['List<E>'] {
    arguments = ArrayList@641[1] { TypeProjectionImpl@642 }
    classifier = JavaClassImpl@643['List']
    memberScope = SubstitutingScope@644
    typeConstructor = DeserializedClassTypeConstructor@640
}

LazyJavaClassifierType@645['Map<? extends K, ? extends V>'] {
    arguments = ArrayList@646[2] { TypeProjectionImpl@647, TypeProjectionImpl@648 }
    classifier = JavaClassImpl@649['Map']
    memberScope = SubstitutingScope@650
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@651
}

LazyJavaClassifierType@652['Map<? extends K, ? extends V>'] {
    arguments = ArrayList@653[2] { TypeProjectionImpl@654, TypeProjectionImpl@655 }
    classifier = JavaClassImpl@649['Map']
    memberScope = SubstitutingScope@656
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@657
}

LazyJavaClassifierType@218['Map<K, V>'] {
    arguments = ArrayList@658[2] { TypeProjectionImpl@659, TypeProjectionImpl@660 }
    classifier = JavaClassImpl@661['Map']
    memberScope = SubstitutingScope@662
    typeConstructor = DeserializedClassTypeConstructor@651
}

LazyJavaClassifierType@245['Map<K, V>'] {
    arguments = ArrayList@663[2] { TypeProjectionImpl@664, TypeProjectionImpl@665 }
    classifier = JavaClassImpl@666['Map']
    memberScope = SubstitutingScope@667
    typeConstructor = DeserializedClassTypeConstructor@651
}

LazyJavaClassifierType@668['Object'] {
    arguments = ArrayList@669[empty]
    classifier = JavaClassImpl@670['Object']
    memberScope = DeserializedClassMemberScope@671
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@672
}

LazyJavaClassifierType@673['Object'] {
    arguments = ArrayList@674[empty]
    classifier = JavaClassImpl@675['Object']
    memberScope = DeserializedClassMemberScope@671
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@672
}

LazyJavaClassifierType@676['Object'] {
    arguments = ArrayList@677[empty]
    classifier = JavaClassImpl@675['Object']
    memberScope = DeserializedClassMemberScope@671
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@672
}

LazyJavaClassifierType@678['Object'] {
    arguments = ArrayList@679[empty]
    classifier = JavaClassImpl@670['Object']
    memberScope = DeserializedClassMemberScope@671
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@672
}

LazyJavaClassifierType@680['Object'] {
    arguments = ArrayList@681[empty]
    classifier = JavaClassImpl@682['Object']
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@672
}

LazyJavaClassifierType@683['Object'] {
    arguments = ArrayList@684[empty]
    classifier = JavaClassImpl@685['Object']
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@672
}

LazyJavaClassifierType@686['Object'] {
    arguments = ArrayList@687[empty]
    classifier = JavaClassImpl@688['Object']
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@672
}

LazyJavaClassifierType@689['Object'] {
    arguments = ArrayList@690[empty]
    classifier = JavaClassImpl@691['Object']
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@672
}

LazyJavaClassifierType@692['Object'] {
    arguments = ArrayList@693[empty]
    classifier = JavaClassImpl@688['Object']
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@672
}

LazyJavaClassifierType@694['Object'] {
    arguments = ArrayList@695[empty]
    classifier = JavaClassImpl@685['Object']
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@672
}

LazyJavaClassifierType@696['Object'] {
    arguments = ArrayList@697[empty]
    classifier = JavaClassImpl@682['Object']
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@672
}

LazyJavaClassifierType@698['Object'] {
    arguments = ArrayList@699[empty]
    classifier = JavaClassImpl@691['Object']
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@672
}

LazyJavaClassifierType@700['Object'] {
    classifier = JavaClassImpl@701['Object']
    typeConstructor = DeserializedClassTypeConstructor@672
}

LazyJavaClassifierType@702['Object'] {
    classifier = JavaClassImpl@703['Object']
    typeConstructor = DeserializedClassTypeConstructor@672
}

LazyJavaClassifierType@704['Object'] {
    classifier = JavaClassImpl@705['Object']
    typeConstructor = DeserializedClassTypeConstructor@672
}

LazyJavaClassifierType@706['Object'] {
    classifier = JavaClassImpl@707['Object']
    typeConstructor = DeserializedClassTypeConstructor@672
}

LazyJavaClassifierType@708['Object'] {
    classifier = JavaClassImpl@709['Object']
    typeConstructor = DeserializedClassTypeConstructor@672
}

LazyJavaClassifierType@710['Object'] {
    classifier = JavaClassImpl@711['Object']
    typeConstructor = DeserializedClassTypeConstructor@672
}

LazyJavaClassifierType@712['Object'] {
    classifier = JavaClassImpl@713['Object']
    typeConstructor = DeserializedClassTypeConstructor@672
}

LazyJavaClassifierType@714['Object'] {
    classifier = JavaClassImpl@715['Object']
    typeConstructor = DeserializedClassTypeConstructor@672
}

LazyJavaClassifierType@716['Object'] {
    classifier = JavaClassImpl@717['Object']
    typeConstructor = DeserializedClassTypeConstructor@672
}

LazyJavaClassifierType@239['OutputStream'] {
    arguments = ArrayList@718[empty]
    classifier = JavaClassImpl@719['OutputStream']
    memberScope = LazyJavaClassMemberScope@144
    typeConstructor = LazyJavaClassTypeConstructor@146['OutputStream']
}

LazyJavaClassifierType@720['PrintStream'] {
    arguments = ArrayList@721[empty]
    classifier = JavaClassImpl@722['PrintStream']
    memberScope = LazyJavaClassMemberScope@150
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@162['PrintStream']
}

LazyJavaClassifierType@723['PrintStream'] {
    arguments = ArrayList@724[empty]
    classifier = JavaClassImpl@722['PrintStream']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@162['PrintStream']
}

LazyJavaClassifierType@231['RandomAccess'] {
    arguments = ArrayList@725[empty]
    classifier = JavaClassImpl@726['RandomAccess']
    memberScope = LazyJavaClassMemberScope@164
    typeConstructor = LazyJavaClassTypeConstructor@166['RandomAccess']
}

LazyJavaClassifierType@267['Serializable'] {
    arguments = ArrayList@727[empty]
    classifier = JavaClassImpl@728['Serializable']
    memberScope = LazyJavaClassMemberScope@169
    typeConstructor = LazyJavaClassTypeConstructor@173['Serializable']
}

LazyJavaClassifierType@729['Serializable'] {
    arguments = ArrayList@730[empty]
    classifier = JavaClassImpl@731['Serializable']
    memberScope = LazyJavaClassMemberScope@169
    typeConstructor = LazyJavaClassTypeConstructor@173['Serializable']
}

LazyJavaClassifierType@732['Serializable'] {
    arguments = ArrayList@733[empty]
    classifier = JavaClassImpl@734['Serializable']
    memberScope = LazyJavaClassMemberScope@169
    typeConstructor = LazyJavaClassTypeConstructor@173['Serializable']
}

LazyJavaClassifierType@262['Serializable'] {
    classifier = JavaClassImpl@735['Serializable']
    typeConstructor = LazyJavaClassTypeConstructor@173['Serializable']
}

LazyJavaClassifierType@736['Set<K>'] {
    arguments = ArrayList@737[1] { TypeProjectionImpl@738 }
    classifier = JavaClassImpl@739['Set']
    memberScope = SubstitutingScope@740
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@741
}

LazyJavaClassifierType@742['Set<K>'] {
    arguments = ArrayList@743[1] { TypeProjectionImpl@744 }
    classifier = JavaClassImpl@745['Set']
    memberScope = SubstitutingScope@746
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@741
}

LazyJavaClassifierType@747['Set<K>'] {
    arguments = ArrayList@748[1] { TypeProjectionImpl@749 }
    classifier = JavaClassImpl@750['Set']
    memberScope = SubstitutingScope@751
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@741
}

LazyJavaClassifierType@752['Set<K>'] {
    arguments = ArrayList@753[1] { TypeProjectionImpl@754 }
    classifier = JavaClassImpl@739['Set']
    memberScope = SubstitutingScope@755
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@756
}

LazyJavaClassifierType@757['Set<K>'] {
    arguments = ArrayList@758[1] { TypeProjectionImpl@759 }
    classifier = JavaClassImpl@750['Set']
    memberScope = SubstitutingScope@760
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@756
}

LazyJavaClassifierType@761['Set<K>'] {
    arguments = ArrayList@762[1] { TypeProjectionImpl@763 }
    classifier = JavaClassImpl@745['Set']
    memberScope = SubstitutingScope@764
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@756
}

LazyJavaClassifierType@765['String'] {
    arguments = ArrayList@766[empty]
    classifier = JavaClassImpl@767['String']
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@768
}

LazyJavaClassifierType@769['String'] {
    arguments = ArrayList@770[empty]
    classifier = JavaClassImpl@771['String']
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@768
}

LazyJavaClassifierType@772['String'] {
    arguments = ArrayList@773[empty]
    classifier = JavaClassImpl@774['String']
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@768
}

LazyJavaClassifierType@775['String'] {
    arguments = ArrayList@776[empty]
    classifier = JavaClassImpl@777['String']
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@768
}

LazyJavaClassifierType@778['String'] {
    arguments = ArrayList@779[empty]
    classifier = JavaClassImpl@780['String']
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@768
}

LazyJavaClassifierType@781['String'] {
    arguments = ArrayList@782[empty]
    classifier = JavaClassImpl@783['String']
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@768
}

LazyJavaClassifierType@784['String'] {
    arguments = ArrayList@785[empty]
    classifier = JavaClassImpl@786['String']
    nullable = 'false': Boolean@288
    typeConstructor = DeserializedClassTypeConstructor@768
}

LazyJavaClassifierType@787['String'] {
    arguments = ArrayList@788[empty]
    classifier = JavaClassImpl@777['String']
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@768
}

LazyJavaClassifierType@789['String'] {
    arguments = ArrayList@790[empty]
    classifier = JavaClassImpl@774['String']
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@768
}

LazyJavaClassifierType@791['String'] {
    arguments = ArrayList@792[empty]
    classifier = JavaClassImpl@786['String']
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@768
}

LazyJavaClassifierType@793['String'] {
    arguments = ArrayList@794[empty]
    classifier = JavaClassImpl@771['String']
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@768
}

LazyJavaClassifierType@795['String'] {
    arguments = ArrayList@796[empty]
    classifier = JavaClassImpl@783['String']
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@768
}

LazyJavaClassifierType@797['String'] {
    arguments = ArrayList@798[empty]
    classifier = JavaClassImpl@767['String']
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@768
}

LazyJavaClassifierType@799['String'] {
    arguments = ArrayList@800[empty]
    classifier = JavaClassImpl@780['String']
    nullable = 'true': Boolean@327
    typeConstructor = DeserializedClassTypeConstructor@768
}

LazyJavaClassifierType@801['StringBuffer'] {
    arguments = ArrayList@802[empty]
    classifier = JavaClassImpl@803['StringBuffer']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@175['StringBuffer']
}

LazyJavaClassifierType@804['StringBuffer'] {
    arguments = ArrayList@805[empty]
    classifier = JavaClassImpl@806['StringBuffer']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@175['StringBuffer']
}

LazyJavaClassifierType@807['StringBuffer'] {
    arguments = ArrayList@808[empty]
    classifier = JavaClassImpl@806['StringBuffer']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@175['StringBuffer']
}

LazyJavaClassifierType@809['StringBuffer'] {
    arguments = ArrayList@810[empty]
    classifier = JavaClassImpl@803['StringBuffer']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@175['StringBuffer']
}

LazyJavaClassifierType@811['StringBuilder'] {
    arguments = ArrayList@812[empty]
    classifier = JavaClassImpl@813['StringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@814['StringBuilder'] {
    arguments = ArrayList@815[empty]
    classifier = JavaClassImpl@816['StringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@817['StringBuilder'] {
    arguments = ArrayList@818[empty]
    classifier = JavaClassImpl@819['StringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@820['StringBuilder'] {
    arguments = ArrayList@821[empty]
    classifier = JavaClassImpl@822['StringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@823['StringBuilder'] {
    arguments = ArrayList@824[empty]
    classifier = JavaClassImpl@825['StringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@826['StringBuilder'] {
    arguments = ArrayList@827[empty]
    classifier = JavaClassImpl@828['StringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@829['StringBuilder'] {
    arguments = ArrayList@830[empty]
    classifier = JavaClassImpl@831['StringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@832['StringBuilder'] {
    arguments = ArrayList@833[empty]
    classifier = JavaClassImpl@834['StringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@835['StringBuilder'] {
    arguments = ArrayList@836[empty]
    classifier = JavaClassImpl@837['StringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@838['StringBuilder'] {
    arguments = ArrayList@839[empty]
    classifier = JavaClassImpl@840['StringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@841['StringBuilder'] {
    arguments = ArrayList@842[empty]
    classifier = JavaClassImpl@843['StringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@844['StringBuilder'] {
    arguments = ArrayList@845[empty]
    classifier = JavaClassImpl@846['StringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@847['StringBuilder'] {
    arguments = ArrayList@848[empty]
    classifier = JavaClassImpl@849['StringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@850['StringBuilder'] {
    arguments = ArrayList@851[empty]
    classifier = JavaClassImpl@852['StringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@853['StringBuilder'] {
    arguments = ArrayList@854[empty]
    classifier = JavaClassImpl@855['StringBuilder']
    nullable = 'false': Boolean@288
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@856['StringBuilder'] {
    arguments = ArrayList@857[empty]
    classifier = JavaClassImpl@855['StringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@858['StringBuilder'] {
    arguments = ArrayList@859[empty]
    classifier = JavaClassImpl@825['StringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@860['StringBuilder'] {
    arguments = ArrayList@861[empty]
    classifier = JavaClassImpl@840['StringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@862['StringBuilder'] {
    arguments = ArrayList@863[empty]
    classifier = JavaClassImpl@828['StringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@864['StringBuilder'] {
    arguments = ArrayList@865[empty]
    classifier = JavaClassImpl@831['StringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@866['StringBuilder'] {
    arguments = ArrayList@867[empty]
    classifier = JavaClassImpl@816['StringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@868['StringBuilder'] {
    arguments = ArrayList@869[empty]
    classifier = JavaClassImpl@846['StringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@870['StringBuilder'] {
    arguments = ArrayList@871[empty]
    classifier = JavaClassImpl@822['StringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@872['StringBuilder'] {
    arguments = ArrayList@873[empty]
    classifier = JavaClassImpl@837['StringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@874['StringBuilder'] {
    arguments = ArrayList@875[empty]
    classifier = JavaClassImpl@852['StringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@876['StringBuilder'] {
    arguments = ArrayList@877[empty]
    classifier = JavaClassImpl@849['StringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@878['StringBuilder'] {
    arguments = ArrayList@879[empty]
    classifier = JavaClassImpl@834['StringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@880['StringBuilder'] {
    arguments = ArrayList@881[empty]
    classifier = JavaClassImpl@819['StringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@882['StringBuilder'] {
    arguments = ArrayList@883[empty]
    classifier = JavaClassImpl@813['StringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@884['StringBuilder'] {
    arguments = ArrayList@885[empty]
    classifier = JavaClassImpl@843['StringBuilder']
    nullable = 'true': Boolean@327
    typeConstructor = LazyJavaClassTypeConstructor@193['StringBuilder']
}

LazyJavaClassifierType@886['V'] {
    arguments = ArrayList@887[empty]
    classifier = JavaTypeParameterImpl@888['V']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@889
}

LazyJavaClassifierType@890['V'] {
    arguments = ArrayList@891[empty]
    classifier = JavaTypeParameterImpl@892['V']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@889
}

LazyJavaClassifierType@893['V'] {
    arguments = ArrayList@894[empty]
    classifier = JavaTypeParameterImpl@895['V']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@889
}

LazyJavaClassifierType@896['V'] {
    arguments = ArrayList@897[empty]
    classifier = JavaTypeParameterImpl@898['V']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@899
}

LazyJavaClassifierType@900['V'] {
    arguments = ArrayList@901[empty]
    classifier = JavaTypeParameterImpl@902['V']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@889
}

LazyJavaClassifierType@903['V'] {
    arguments = ArrayList@904[empty]
    classifier = JavaTypeParameterImpl@905['V']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@889
}

LazyJavaClassifierType@906['V'] {
    arguments = ArrayList@907[empty]
    classifier = JavaTypeParameterImpl@908['V']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@889
}

LazyJavaClassifierType@909['V'] {
    arguments = ArrayList@910[empty]
    classifier = JavaTypeParameterImpl@911['V']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@899
}

LazyJavaClassifierType@912['V'] {
    arguments = ArrayList@913[empty]
    classifier = JavaTypeParameterImpl@914['V']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@899
}

LazyJavaClassifierType@915['V'] {
    arguments = ArrayList@916[empty]
    classifier = JavaTypeParameterImpl@917['V']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@889
}

LazyJavaClassifierType@918['V'] {
    arguments = ArrayList@919[empty]
    classifier = JavaTypeParameterImpl@920['V']
    nullable = 'false': Boolean@288
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@899
}

LazyJavaClassifierType@921['V'] {
    arguments = ArrayList@922[empty]
    classifier = JavaTypeParameterImpl@908['V']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@889
}

LazyJavaClassifierType@923['V'] {
    arguments = ArrayList@924[empty]
    classifier = JavaTypeParameterImpl@898['V']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@899
}

LazyJavaClassifierType@925['V'] {
    arguments = ArrayList@926[empty]
    classifier = JavaTypeParameterImpl@902['V']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@889
}

LazyJavaClassifierType@927['V'] {
    arguments = ArrayList@928[empty]
    classifier = JavaTypeParameterImpl@914['V']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@899
}

LazyJavaClassifierType@929['V'] {
    arguments = ArrayList@930[empty]
    classifier = JavaTypeParameterImpl@917['V']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@889
}

LazyJavaClassifierType@931['V'] {
    arguments = ArrayList@932[empty]
    classifier = JavaTypeParameterImpl@920['V']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@899
}

LazyJavaClassifierType@933['V'] {
    arguments = ArrayList@934[empty]
    classifier = JavaTypeParameterImpl@895['V']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@889
}

LazyJavaClassifierType@935['V'] {
    arguments = ArrayList@936[empty]
    classifier = JavaTypeParameterImpl@905['V']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@889
}

LazyJavaClassifierType@937['V'] {
    arguments = ArrayList@938[empty]
    classifier = JavaTypeParameterImpl@888['V']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@889
}

LazyJavaClassifierType@939['V'] {
    arguments = ArrayList@940[empty]
    classifier = JavaTypeParameterImpl@892['V']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@889
}

LazyJavaClassifierType@941['V'] {
    arguments = ArrayList@942[empty]
    classifier = JavaTypeParameterImpl@911['V']
    nullable = 'true': Boolean@327
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@899
}

LazyJavaPackageFragmentProvider@943 {
    packageFragments('<root>': FqName@944) = LazyJavaPackageFragment@945['<root>']
    packageFragments('A': FqName@946) = null
    packageFragments('Any': FqName@947) = null
    packageFragments('Array': FqName@948) = null
    packageFragments('B': FqName@949) = null
    packageFragments('Body': FqName@950) = null
    packageFragments('BodyTag': FqName@951) = null
    packageFragments('Element': FqName@952) = null
    packageFragments('H1': FqName@953) = null
    packageFragments('HTML': FqName@954) = null
    packageFragments('Head': FqName@955) = null
    packageFragments('K': FqName@956) = null
    packageFragments('LI': FqName@957) = null
    packageFragments('MutableMap': FqName@958) = null
    packageFragments('P': FqName@959) = null
    packageFragments('String': FqName@960) = null
    packageFragments('StringBuilder': FqName@961) = null
    packageFragments('System': FqName@962) = null
    packageFragments('T': FqName@963) = null
    packageFragments('Tag': FqName@964) = null
    packageFragments('TagWithText': FqName@965) = null
    packageFragments('Title': FqName@966) = null
    packageFragments('UL': FqName@967) = null
    packageFragments('Unit': FqName@968) = null
    packageFragments('V': FqName@969) = null
    packageFragments('html': FqName@970) = null
    packageFragments('html.A': FqName@971) = null
    packageFragments('html.Any': FqName@972) = null
    packageFragments('html.Array': FqName@973) = null
    packageFragments('html.B': FqName@974) = null
    packageFragments('html.Body': FqName@975) = null
    packageFragments('html.BodyTag': FqName@976) = null
    packageFragments('html.Element': FqName@977) = null
    packageFragments('html.H1': FqName@978) = null
    packageFragments('html.HTML': FqName@979) = null
    packageFragments('html.Head': FqName@980) = null
    packageFragments('html.K': FqName@981) = null
    packageFragments('html.LI': FqName@982) = null
    packageFragments('html.MutableMap': FqName@983) = null
    packageFragments('html.P': FqName@984) = null
    packageFragments('html.String': FqName@985) = null
    packageFragments('html.StringBuilder': FqName@986) = null
    packageFragments('html.System': FqName@987) = null
    packageFragments('html.T': FqName@988) = null
    packageFragments('html.Tag': FqName@989) = null
    packageFragments('html.TagWithText': FqName@990) = null
    packageFragments('html.TextElement': FqName@991) = null
    packageFragments('html.Title': FqName@992) = null
    packageFragments('html.UL': FqName@993) = null
    packageFragments('html.Unit': FqName@994) = null
    packageFragments('html.V': FqName@995) = null
    packageFragments('java': FqName@996) = LazyJavaPackageFragment@997['java']
    packageFragments('java.io': FqName@998) = LazyJavaPackageFragment@999['io']
    packageFragments('java.lang': FqName@1000) = LazyJavaPackageFragment@1001['lang']
    packageFragments('java.lang.A': FqName@1002) = null
    packageFragments('java.lang.Any': FqName@1003) = null
    packageFragments('java.lang.Array': FqName@1004) = null
    packageFragments('java.lang.B': FqName@1005) = null
    packageFragments('java.lang.Body': FqName@1006) = null
    packageFragments('java.lang.BodyTag': FqName@1007) = null
    packageFragments('java.lang.Element': FqName@1008) = null
    packageFragments('java.lang.H1': FqName@1009) = null
    packageFragments('java.lang.HTML': FqName@1010) = null
    packageFragments('java.lang.Head': FqName@1011) = null
    packageFragments('java.lang.K': FqName@1012) = null
    packageFragments('java.lang.LI': FqName@1013) = null
    packageFragments('java.lang.MutableMap': FqName@1014) = null
    packageFragments('java.lang.P': FqName@1015) = null
    packageFragments('java.lang.String': FqName@1016) = null
    packageFragments('java.lang.StringBuilder': FqName@1017) = null
    packageFragments('java.lang.System': FqName@1018) = null
    packageFragments('java.lang.T': FqName@1019) = null
    packageFragments('java.lang.Tag': FqName@1020) = null
    packageFragments('java.lang.TagWithText': FqName@1021) = null
    packageFragments('java.lang.Title': FqName@1022) = null
    packageFragments('java.lang.UL': FqName@1023) = null
    packageFragments('java.lang.Unit': FqName@1024) = null
    packageFragments('java.lang.V': FqName@1025) = null
    packageFragments('java.util': FqName@1026) = LazyJavaPackageFragment@1027['util']
    packageFragments('java.util.A': FqName@1028) = null
    packageFragments('java.util.Any': FqName@1029) = null
    packageFragments('java.util.Array': FqName@1030) = null
    packageFragments('java.util.B': FqName@1031) = null
    packageFragments('java.util.Body': FqName@1032) = null
    packageFragments('java.util.BodyTag': FqName@1033) = null
    packageFragments('java.util.Element': FqName@1034) = null
    packageFragments('java.util.H1': FqName@1035) = null
    packageFragments('java.util.HTML': FqName@1036) = null
    packageFragments('java.util.Head': FqName@1037) = null
    packageFragments('java.util.K': FqName@1038) = null
    packageFragments('java.util.LI': FqName@1039) = null
    packageFragments('java.util.MutableMap': FqName@1040) = null
    packageFragments('java.util.P': FqName@1041) = null
    packageFragments('java.util.String': FqName@1042) = null
    packageFragments('java.util.StringBuilder': FqName@1043) = null
    packageFragments('java.util.System': FqName@1044) = null
    packageFragments('java.util.T': FqName@1045) = null
    packageFragments('java.util.Tag': FqName@1046) = null
    packageFragments('java.util.TagWithText': FqName@1047) = null
    packageFragments('java.util.Title': FqName@1048) = null
    packageFragments('java.util.UL': FqName@1049) = null
    packageFragments('java.util.Unit': FqName@1050) = null
    packageFragments('java.util.V': FqName@1051) = null
    packageFragments('kotlin': FqName@1052) = null
    packageFragments('kotlin.A': FqName@1053) = null
    packageFragments('kotlin.Any': FqName@1054) = null
    packageFragments('kotlin.Array': FqName@1055) = null
    packageFragments('kotlin.B': FqName@1056) = null
    packageFragments('kotlin.Body': FqName@1057) = null
    packageFragments('kotlin.BodyTag': FqName@1058) = null
    packageFragments('kotlin.Element': FqName@1059) = null
    packageFragments('kotlin.H1': FqName@1060) = null
    packageFragments('kotlin.HTML': FqName@1061) = null
    packageFragments('kotlin.Head': FqName@1062) = null
    packageFragments('kotlin.K': FqName@1063) = null
    packageFragments('kotlin.LI': FqName@1064) = null
    packageFragments('kotlin.MutableMap': FqName@1065) = null
    packageFragments('kotlin.P': FqName@1066) = null
    packageFragments('kotlin.String': FqName@1067) = null
    packageFragments('kotlin.StringBuilder': FqName@1068) = null
    packageFragments('kotlin.System': FqName@1069) = null
    packageFragments('kotlin.T': FqName@1070) = null
    packageFragments('kotlin.Tag': FqName@1071) = null
    packageFragments('kotlin.TagWithText': FqName@1072) = null
    packageFragments('kotlin.Title': FqName@1073) = null
    packageFragments('kotlin.UL': FqName@1074) = null
    packageFragments('kotlin.Unit': FqName@1075) = null
    packageFragments('kotlin.V': FqName@1076) = null
    packageFragments('kotlin.io': FqName@1077) = null
    packageFragments('kotlin.jvm': FqName@1078) = null
    topLevelClasses(JavaClassImpl@272['AbstractCollection']) = LazyJavaClassDescriptor@12['AbstractCollection']
    topLevelClasses(JavaClassImpl@276['AbstractList']) = LazyJavaClassDescriptor@27['AbstractList']
    topLevelClasses(JavaClassImpl@281['AbstractMap']) = LazyJavaClassDescriptor@40['AbstractMap']
    topLevelClasses(JavaClassImpl@284['AbstractStringBuilder']) = LazyJavaClassDescriptor@60['AbstractStringBuilder']
    topLevelClasses(JavaClassImpl@357['Appendable']) = LazyJavaClassDescriptor@76['Appendable']
    topLevelClasses(JavaClassImpl@1079['ArrayList']) = LazyJavaClassDescriptor@94['ArrayList']
    topLevelClasses(JavaClassImpl@374['AutoCloseable']) = LazyJavaClassDescriptor@111['AutoCloseable']
    topLevelClasses(JavaClassImpl@427['Closeable']) = LazyJavaClassDescriptor@115['Closeable']
    topLevelClasses(JavaClassImpl@537['FilterOutputStream']) = LazyJavaClassDescriptor@119['FilterOutputStream']
    topLevelClasses(JavaClassImpl@1080['HashMap']) = LazyJavaClassDescriptor@123['HashMap']
    topLevelClasses(JavaClassImpl@719['OutputStream']) = LazyJavaClassDescriptor@143['OutputStream']
    topLevelClasses(JavaClassImpl@722['PrintStream']) = LazyJavaClassDescriptor@147['PrintStream']
    topLevelClasses(JavaClassImpl@726['RandomAccess']) = LazyJavaClassDescriptor@163['RandomAccess']
    topLevelClasses(JavaClassImpl@734['Serializable']) = LazyJavaClassDescriptor@167['Serializable']
    topLevelClasses(JavaClassImpl@806['StringBuffer']) = LazyJavaClassDescriptor@174['StringBuffer']
    topLevelClasses(JavaClassImpl@1081['StringBuilder']) = LazyJavaClassDescriptor@176['StringBuilder']
    topLevelClasses(JavaClassImpl@1082['System']) = LazyJavaClassDescriptor@194['System']
}

LazyJavaPackageFragment@997['java'] {
    classes('lang': Name@1083) = null // through LazyPackageFragmentScopeForJavaPackage@1084
    classes('util': Name@1085) = null // through LazyPackageFragmentScopeForJavaPackage@1084
    deserializedPackageScope = Empty@1086 // through LazyPackageFragmentScopeForJavaPackage@1084
    functions('lang': Name@1087) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1084
    functions('util': Name@1088) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1084
    memberIndex = computeMemberIndex$1@1089 // through LazyPackageFragmentScopeForJavaPackage@1084
}

LazyJavaPackageFragment@1001['lang'] {
    classes('A': Name@1090) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('ArrayList': Name@1092) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('B': Name@1093) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('Body': Name@1094) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('H1': Name@1095) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('HTML': Name@1096) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('HashMap': Name@1097) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('Head': Name@1098) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('LI': Name@1099) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('P': Name@1100) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('StringBuilder': Name@1101) = LazyJavaClassDescriptor@176['StringBuilder'] // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('System': Name@1102) = LazyJavaClassDescriptor@194['System'] // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('TextElement': Name@1103) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('Title': Name@1104) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('UL': Name@1105) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('a': Name@1106) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('add': Name@22) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('append': Name@72) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('attributes': Name@1107) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('b': Name@1108) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('body': Name@1109) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('children': Name@1110) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('equals': Name@1111) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('get': Name@53) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('h1': Name@1112) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('hasNext': Name@1113) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('head': Name@1114) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('html': Name@1115) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('init': Name@1116) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('initTag': Name@1117) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('invoke': Name@1118) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('iterator': Name@1119) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('keySet': Name@54) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('li': Name@1120) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('name': Name@1121) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('next': Name@1122) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('p': Name@1123) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('plus': Name@1124) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('print': Name@90) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('println': Name@1125) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('put': Name@57) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('render': Name@1126) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('renderAttributes': Name@1127) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('text': Name@1128) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('title': Name@1129) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('toString': Name@73) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    classes('ul': Name@1130) = null // through LazyPackageFragmentScopeForJavaPackage@1091
    deserializedPackageScope = Empty@1086 // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('A': Name@1090) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('ArrayList': Name@1092) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('B': Name@1093) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('Body': Name@1094) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('H1': Name@1095) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('HTML': Name@1096) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('HashMap': Name@1097) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('Head': Name@1098) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('LI': Name@1099) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('P': Name@1100) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('StringBuilder': Name@1131) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('TextElement': Name@1103) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('Title': Name@1104) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('UL': Name@1105) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('a': Name@1106) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('add': Name@22) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('append': Name@72) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('b': Name@1108) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('body': Name@1109) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('equals': Name@1111) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('get': Name@53) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('h1': Name@1112) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('hasNext': Name@1113) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('head': Name@1114) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('html': Name@1115) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('init': Name@1116) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('initTag': Name@1117) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('invoke': Name@1118) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('iterator': Name@1119) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('keySet': Name@54) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('li': Name@1120) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('next': Name@1122) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('p': Name@1123) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('plus': Name@1124) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('print': Name@90) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('println': Name@1125) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('put': Name@57) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('render': Name@1126) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('renderAttributes': Name@1127) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('title': Name@1129) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('toString': Name@73) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    functions('ul': Name@1130) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1091
    memberIndex = computeMemberIndex$1@1132 // through LazyPackageFragmentScopeForJavaPackage@1091
}

LazyJavaPackageFragment@1027['util'] {
    classes('A': Name@1090) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('Any': Name@1134) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('Array': Name@1135) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('ArrayList': Name@1092) = LazyJavaClassDescriptor@94['ArrayList'] // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('B': Name@1093) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('Body': Name@1094) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('H1': Name@1095) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('HTML': Name@1096) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('HashMap': Name@1097) = LazyJavaClassDescriptor@123['HashMap'] // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('Head': Name@1098) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('LI': Name@1099) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('MutableMap': Name@1136) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('P': Name@1100) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('String': Name@1137) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('StringBuilder': Name@1101) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('System': Name@1102) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('TextElement': Name@1103) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('Title': Name@1104) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('UL': Name@1105) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('Unit': Name@1138) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('a': Name@1106) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('add': Name@22) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('append': Name@72) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('attributes': Name@1107) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('b': Name@1108) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('body': Name@1109) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('children': Name@1110) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('equals': Name@1111) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('get': Name@53) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('h1': Name@1112) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('hasNext': Name@1113) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('head': Name@1114) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('html': Name@1115) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('init': Name@1116) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('initTag': Name@1117) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('invoke': Name@1118) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('iterator': Name@1119) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('keySet': Name@54) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('li': Name@1120) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('name': Name@1121) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('next': Name@1122) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('p': Name@1123) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('plus': Name@1124) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('print': Name@90) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('println': Name@1125) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('put': Name@57) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('render': Name@1126) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('renderAttributes': Name@1127) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('text': Name@1128) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('title': Name@1129) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('toString': Name@73) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    classes('ul': Name@1130) = null // through LazyPackageFragmentScopeForJavaPackage@1133
    deserializedPackageScope = Empty@1086 // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('A': Name@1090) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('ArrayList': Name@1092) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('B': Name@1093) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('Body': Name@1094) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('H1': Name@1095) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('HTML': Name@1096) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('HashMap': Name@1097) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('Head': Name@1098) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('LI': Name@1099) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('P': Name@1100) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('StringBuilder': Name@1131) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('TextElement': Name@1103) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('Title': Name@1104) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('UL': Name@1105) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('a': Name@1106) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('add': Name@22) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('append': Name@72) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('b': Name@1108) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('body': Name@1109) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('equals': Name@1111) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('get': Name@53) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('h1': Name@1112) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('hasNext': Name@1113) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('head': Name@1114) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('html': Name@1115) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('init': Name@1116) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('initTag': Name@1117) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('invoke': Name@1118) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('iterator': Name@1119) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('keySet': Name@54) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('li': Name@1120) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('next': Name@1122) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('p': Name@1123) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('plus': Name@1124) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('print': Name@90) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('println': Name@1125) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('put': Name@57) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('render': Name@1126) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('renderAttributes': Name@1127) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('title': Name@1129) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('toString': Name@73) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    functions('ul': Name@1130) = EmptyList@23[empty] // through LazyPackageFragmentScopeForJavaPackage@1133
    memberIndex = computeMemberIndex$1@1139 // through LazyPackageFragmentScopeForJavaPackage@1133
}

LazyJavaTypeParameterDescriptor@206['E'] {
    defaultType = JetTypeImpl@1140['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@475
    upperBounds = LinkedHashSet@1141[1] { NullableType@1142 }
    upperBoundsAsType = NullableType@1142
}

LazyJavaTypeParameterDescriptor@227['E'] {
    defaultType = JetTypeImpl@1143['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@450
    upperBounds = LinkedHashSet@1144[1] { NullableType@1145 }
    upperBoundsAsType = NullableType@1145
}

LazyJavaTypeParameterDescriptor@210['E'] {
    defaultType = JetTypeImpl@1146['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@446
    upperBounds = LinkedHashSet@1147[1] { NullableType@1148 }
    upperBoundsAsType = NullableType@1148
}

LazyJavaTypeParameterDescriptor@215['K'] {
    defaultType = JetTypeImpl@1149['K']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@572
    upperBounds = LinkedHashSet@1150[1] { NullableType@1151 }
    upperBoundsAsType = NullableType@1151
}

LazyJavaTypeParameterDescriptor@241['K'] {
    defaultType = JetTypeImpl@1152['K']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@576
    upperBounds = LinkedHashSet@1153[1] { NullableType@1154 }
    upperBoundsAsType = NullableType@1154
}

LazyJavaTypeParameterDescriptor@216['V'] {
    defaultType = JetTypeImpl@1155['V']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@899
    upperBounds = LinkedHashSet@1156[1] { NullableType@1157 }
    upperBoundsAsType = NullableType@1157
}

LazyJavaTypeParameterDescriptor@242['V'] {
    defaultType = JetTypeImpl@1158['V']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@889
    upperBounds = LinkedHashSet@1159[1] { NullableType@1160 }
    upperBoundsAsType = NullableType@1160
}

LazyJavaTypeParameterResolver@1161 {
    resolve(JavaTypeParameterImpl@1162['E']) = LazyJavaTypeParameterDescriptor@210['E']
}

LazyJavaTypeParameterResolver@1163 {
    resolve(JavaTypeParameterImpl@1164['E']) = LazyJavaTypeParameterDescriptor@227['E']
}

LazyJavaTypeParameterResolver@1165 {
    resolve(JavaTypeParameterImpl@1166['E']) = LazyJavaTypeParameterDescriptor@206['E']
}

LazyJavaTypeParameterResolver@1167 {
    resolve(JavaTypeParameterImpl@471['E']) = null
}

LazyJavaTypeParameterResolver@1168 {
    resolve(JavaTypeParameterImpl@465['E']) = null
}

LazyJavaTypeParameterResolver@1169 {
    resolve(JavaTypeParameterImpl@478['E']) = null
}

LazyJavaTypeParameterResolver@1170 {
    resolve(JavaTypeParameterImpl@449['E']) = null
}

LazyJavaTypeParameterResolver@1171 {
    resolve(JavaTypeParameterImpl@481['E']) = null
}

LazyJavaTypeParameterResolver@1172 {
    resolve(JavaTypeParameterImpl@474['E']) = null
}

LazyJavaTypeParameterResolver@1173 {
    resolve(JavaTypeParameterImpl@445['E']) = null
}

LazyJavaTypeParameterResolver@1174 {
    resolve(JavaTypeParameterImpl@496['E']) = null
}

LazyJavaTypeParameterResolver@1175 {
    resolve(JavaTypeParameterImpl@1176['K']) = LazyJavaTypeParameterDescriptor@241['K']
    resolve(JavaTypeParameterImpl@1177['V']) = LazyJavaTypeParameterDescriptor@242['V']
}

LazyJavaTypeParameterResolver@1178 {
    resolve(JavaTypeParameterImpl@1179['K']) = LazyJavaTypeParameterDescriptor@215['K']
    resolve(JavaTypeParameterImpl@1180['V']) = LazyJavaTypeParameterDescriptor@216['V']
}

LazyJavaTypeParameterResolver@1181 {
    resolve(JavaTypeParameterImpl@582['K']) = null
    resolve(JavaTypeParameterImpl@905['V']) = null
}

LazyJavaTypeParameterResolver@1182 {
    resolve(JavaTypeParameterImpl@594['K']) = null
    resolve(JavaTypeParameterImpl@914['V']) = null
}

LazyJavaTypeParameterResolver@1183 {
    resolve(JavaTypeParameterImpl@609['K']) = null
}

LazyJavaTypeParameterResolver@1184 {
    resolve(JavaTypeParameterImpl@588['K']) = null
}

LazyJavaTypeParameterResolver@1185 {
    resolve(JavaTypeParameterImpl@911['V']) = null
}

LazyJavaTypeParameterResolver@1186 {
    resolve(JavaTypeParameterImpl@895['V']) = null
}
