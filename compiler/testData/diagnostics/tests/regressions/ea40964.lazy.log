LazyJavaClassDescriptor@0['AbstractMap'] {
    _functions('get': Name@1) = ArrayList@2[1] { JavaMethodDescriptor@3['get'] } // through LazyJavaClassMemberScope@4
    _properties('get': Name@5) = EmptyList@6[empty] // through LazyJavaClassMemberScope@4
    _typeConstructor = LazyJavaClassTypeConstructor@7['AbstractMap']
    defaultType = JetTypeImpl@8['AbstractMap<2>']
    memberIndex = computeMemberIndex$1@9 // through LazyJavaClassMemberScope@4
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@10['<this>']
}

LazyJavaClassDescriptor@11['HashMap'] {
    _constructors = ArrayList@12[4] { JavaConstructorDescriptor@13['<init>'], JavaConstructorDescriptor@14['<init>'], JavaConstructorDescriptor@15['<init>'], ... } // through LazyJavaClassMemberScope@16
    _functionTypeForSamInterface = null
    _functions('get': Name@5) = ArrayList@17[1] { JavaMethodDescriptor@18['get'] } // through LazyJavaClassMemberScope@16
    _properties('get': Name@5) = EmptyList@6[empty] // through LazyJavaClassMemberScope@16
    _typeConstructor = LazyJavaClassTypeConstructor@19['HashMap']
    defaultType = JetTypeImpl@20['HashMap<2>']
    enumEntryIndex = LinkedHashMap@21 // through LazyJavaClassMemberScope@16
    memberIndex = computeMemberIndex$1@22 // through LazyJavaClassMemberScope@16
    nestedClassIndex = LinkedHashMap@23 // through LazyJavaClassMemberScope@16
    nestedClasses('get': Name@5) = null // through LazyJavaClassMemberScope@16
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@24['<this>']
}

LazyJavaClassDescriptor@25['Serializable'] {
    _functions('get': Name@1) = EmptyList@6[empty] // through LazyJavaClassMemberScope@26
    _properties('get': Name@5) = EmptyList@6[empty] // through LazyJavaClassMemberScope@26
    _typeConstructor = LazyJavaClassTypeConstructor@27['Serializable']
    memberIndex = computeMemberIndex$1@28 // through LazyJavaClassMemberScope@26
}

LazyJavaClassTypeConstructor@7['AbstractMap'] {
    _parameters = ArrayList@29[2] { LazyJavaTypeParameterDescriptor@30['K'], LazyJavaTypeParameterDescriptor@31['V'] }
    _supertypes = ArrayList@32[1] { LazyJavaClassifierType@33['Map<K, V>'] }
}

LazyJavaClassTypeConstructor@19['HashMap'] {
    _parameters = ArrayList@34[2] { LazyJavaTypeParameterDescriptor@35['K'], LazyJavaTypeParameterDescriptor@36['V'] }
    _supertypes = ArrayList@37[4] { LazyJavaClassifierType@38['AbstractMap<K, V>'], LazyJavaClassifierType@39['Map<K, V>'], LazyJavaClassifierType@40['Cloneable'], ... }
}

LazyJavaClassTypeConstructor@27['Serializable'] {
    _parameters = ArrayList@41[empty]
    _supertypes = ArrayList@42[1] { JetTypeImpl@43['Any'] }
}

LazyJavaClassifierType@38['AbstractMap<K, V>'] {
    _arguments = ArrayList@44[2] { TypeProjectionImpl@45, TypeProjectionImpl@46 }
    _memberScope = SubstitutingScope@47
    _typeConstructor = LazyJavaClassTypeConstructor@7['AbstractMap']
    classifier = JavaClassImpl@48['AbstractMap']
}

LazyJavaClassifierType@40['Cloneable'] {
    _arguments = ArrayList@49[empty]
    _memberScope = DeserializedClassMemberScope@50
    _typeConstructor = DeserializedClassTypeConstructor@51
    classifier = JavaClassImpl@52['Cloneable']
}

LazyJavaClassifierType@53['K'] {
    _arguments = ArrayList@54[empty]
    _nullable = 'false': Boolean@55
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@56
    classifier = JavaTypeParameterImpl@57['K']
}

LazyJavaClassifierType@58['K'] {
    _arguments = ArrayList@59[empty]
    _nullable = 'false': Boolean@55
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@60
    classifier = JavaTypeParameterImpl@61['K']
}

LazyJavaClassifierType@62['K'] {
    _arguments = ArrayList@63[empty]
    _nullable = 'false': Boolean@55
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@56
    classifier = JavaTypeParameterImpl@64['K']
}

LazyJavaClassifierType@65['K'] {
    _arguments = ArrayList@66[empty]
    _nullable = 'false': Boolean@55
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@56
    classifier = JavaTypeParameterImpl@67['K']
}

LazyJavaClassifierType@68['K'] {
    _arguments = ArrayList@69[empty]
    _nullable = 'false': Boolean@55
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@56
    classifier = JavaTypeParameterImpl@70['K']
}

LazyJavaClassifierType@71['K'] {
    _arguments = ArrayList@72[empty]
    _nullable = 'true': Boolean@73
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@56
    classifier = JavaTypeParameterImpl@67['K']
}

LazyJavaClassifierType@74['K'] {
    _arguments = ArrayList@75[empty]
    _nullable = 'true': Boolean@73
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@56
    classifier = JavaTypeParameterImpl@57['K']
}

LazyJavaClassifierType@76['K'] {
    _arguments = ArrayList@77[empty]
    _nullable = 'true': Boolean@73
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@60
    classifier = JavaTypeParameterImpl@61['K']
}

LazyJavaClassifierType@78['K'] {
    _arguments = ArrayList@79[empty]
    _nullable = 'true': Boolean@73
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@56
    classifier = JavaTypeParameterImpl@64['K']
}

LazyJavaClassifierType@80['K'] {
    _arguments = ArrayList@81[empty]
    _nullable = 'true': Boolean@73
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@56
    classifier = JavaTypeParameterImpl@70['K']
}

LazyJavaClassifierType@82['Map<? extends K, ? extends V>'] {
    _arguments = ArrayList@83[2] { TypeProjectionImpl@84, TypeProjectionImpl@85 }
    _memberScope = SubstitutingScope@86
    _nullable = 'false': Boolean@55
    _typeConstructor = DeserializedClassTypeConstructor@87
    classifier = JavaClassImpl@88['Map']
}

LazyJavaClassifierType@89['Map<? extends K, ? extends V>'] {
    _arguments = ArrayList@90[2] { TypeProjectionImpl@91, TypeProjectionImpl@92 }
    _memberScope = SubstitutingScope@93
    _nullable = 'true': Boolean@73
    _typeConstructor = DeserializedClassTypeConstructor@94
    classifier = JavaClassImpl@88['Map']
}

LazyJavaClassifierType@39['Map<K, V>'] {
    _arguments = ArrayList@95[2] { TypeProjectionImpl@96, TypeProjectionImpl@97 }
    _memberScope = SubstitutingScope@98
    _typeConstructor = DeserializedClassTypeConstructor@87
    classifier = JavaClassImpl@99['Map']
}

LazyJavaClassifierType@33['Map<K, V>'] {
    _arguments = ArrayList@100[2] { TypeProjectionImpl@101, TypeProjectionImpl@102 }
    _memberScope = SubstitutingScope@103
    _typeConstructor = DeserializedClassTypeConstructor@87
    classifier = JavaClassImpl@104['Map']
}

LazyJavaClassifierType@105['Object'] {
    _arguments = ArrayList@106[empty]
    _memberScope = DeserializedClassMemberScope@107
    _nullable = 'false': Boolean@55
    _typeConstructor = DeserializedClassTypeConstructor@108
    classifier = JavaClassImpl@109['Object']
}

LazyJavaClassifierType@110['Object'] {
    _arguments = ArrayList@111[empty]
    _memberScope = DeserializedClassMemberScope@107
    _nullable = 'false': Boolean@55
    _typeConstructor = DeserializedClassTypeConstructor@108
    classifier = JavaClassImpl@112['Object']
}

LazyJavaClassifierType@113['Object'] {
    _arguments = ArrayList@114[empty]
    _memberScope = DeserializedClassMemberScope@107
    _nullable = 'true': Boolean@73
    _typeConstructor = DeserializedClassTypeConstructor@108
    classifier = JavaClassImpl@112['Object']
}

LazyJavaClassifierType@115['Object'] {
    _arguments = ArrayList@116[empty]
    _memberScope = DeserializedClassMemberScope@107
    _nullable = 'true': Boolean@73
    _typeConstructor = DeserializedClassTypeConstructor@108
    classifier = JavaClassImpl@109['Object']
}

LazyJavaClassifierType@117['Object'] {
    _typeConstructor = DeserializedClassTypeConstructor@108
    classifier = JavaClassImpl@118['Object']
}

LazyJavaClassifierType@119['Object'] {
    _typeConstructor = DeserializedClassTypeConstructor@108
    classifier = JavaClassImpl@120['Object']
}

LazyJavaClassifierType@121['Serializable'] {
    _arguments = ArrayList@122[empty]
    _memberScope = LazyJavaClassMemberScope@26
    _typeConstructor = LazyJavaClassTypeConstructor@27['Serializable']
    classifier = JavaClassImpl@123['Serializable']
}

LazyJavaClassifierType@124['V'] {
    _arguments = ArrayList@125[empty]
    _nullable = 'false': Boolean@55
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@126
    classifier = JavaTypeParameterImpl@127['V']
}

LazyJavaClassifierType@128['V'] {
    _arguments = ArrayList@129[empty]
    _nullable = 'false': Boolean@55
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@130
    classifier = JavaTypeParameterImpl@131['V']
}

LazyJavaClassifierType@132['V'] {
    _arguments = ArrayList@133[empty]
    _nullable = 'false': Boolean@55
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@130
    classifier = JavaTypeParameterImpl@134['V']
}

LazyJavaClassifierType@135['V'] {
    _arguments = ArrayList@136[empty]
    _nullable = 'false': Boolean@55
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@126
    classifier = JavaTypeParameterImpl@137['V']
}

LazyJavaClassifierType@138['V'] {
    _arguments = ArrayList@139[empty]
    _nullable = 'false': Boolean@55
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@130
    classifier = JavaTypeParameterImpl@140['V']
}

LazyJavaClassifierType@141['V'] {
    _arguments = ArrayList@142[empty]
    _nullable = 'false': Boolean@55
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@130
    classifier = JavaTypeParameterImpl@143['V']
}

LazyJavaClassifierType@144['V'] {
    _arguments = ArrayList@145[empty]
    _nullable = 'false': Boolean@55
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@130
    classifier = JavaTypeParameterImpl@146['V']
}

LazyJavaClassifierType@147['V'] {
    _arguments = ArrayList@148[empty]
    _nullable = 'true': Boolean@73
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@126
    classifier = JavaTypeParameterImpl@137['V']
}

LazyJavaClassifierType@149['V'] {
    _arguments = ArrayList@150[empty]
    _nullable = 'true': Boolean@73
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@130
    classifier = JavaTypeParameterImpl@146['V']
}

LazyJavaClassifierType@151['V'] {
    _arguments = ArrayList@152[empty]
    _nullable = 'true': Boolean@73
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@130
    classifier = JavaTypeParameterImpl@131['V']
}

LazyJavaClassifierType@153['V'] {
    _arguments = ArrayList@154[empty]
    _nullable = 'true': Boolean@73
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@126
    classifier = JavaTypeParameterImpl@127['V']
}

LazyJavaClassifierType@155['V'] {
    _arguments = ArrayList@156[empty]
    _nullable = 'true': Boolean@73
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@130
    classifier = JavaTypeParameterImpl@143['V']
}

LazyJavaClassifierType@157['V'] {
    _arguments = ArrayList@158[empty]
    _nullable = 'true': Boolean@73
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@130
    classifier = JavaTypeParameterImpl@140['V']
}

LazyJavaClassifierType@159['V'] {
    _arguments = ArrayList@160[empty]
    _nullable = 'true': Boolean@73
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@130
    classifier = JavaTypeParameterImpl@134['V']
}

LazyJavaPackageFragmentProvider@161 {
    _packageFragments('<root>': FqName@162) = LazyJavaPackageFragment@163['<root>']
    _packageFragments('Array': FqName@164) = null
    _packageFragments('String': FqName@165) = null
    _packageFragments('checkFiles': FqName@166) = null
    _packageFragments('checkFiles.Array': FqName@167) = null
    _packageFragments('checkFiles.String': FqName@168) = null
    _packageFragments('java': FqName@169) = LazyJavaPackageFragment@170['java']
    _packageFragments('java.io': FqName@171) = LazyJavaPackageFragment@172['io']
    _packageFragments('java.lang': FqName@173) = LazyJavaPackageFragment@174['lang']
    _packageFragments('java.lang.Array': FqName@175) = null
    _packageFragments('java.lang.String': FqName@176) = null
    _packageFragments('java.util': FqName@177) = LazyJavaPackageFragment@178['util']
    _packageFragments('java.util.HashMap': FqName@179) = null
    _packageFragments('kotlin': FqName@180) = null
    _packageFragments('kotlin.Array': FqName@181) = null
    _packageFragments('kotlin.String': FqName@182) = null
    _packageFragments('kotlin.io': FqName@183) = null
    _packageFragments('kotlin.jvm': FqName@184) = null
    topLevelClasses(JavaClassImpl@48['AbstractMap']) = LazyJavaClassDescriptor@0['AbstractMap']
    topLevelClasses(JavaClassImpl@185['HashMap']) = LazyJavaClassDescriptor@11['HashMap']
    topLevelClasses(JavaClassImpl@123['Serializable']) = LazyJavaClassDescriptor@25['Serializable']
}

LazyJavaPackageFragment@170['java'] {
    _functions('lang': Name@186) = EmptyList@6[empty] // through LazyPackageFragmentScopeForJavaPackage@187
    _functions('util': Name@188) = EmptyList@6[empty] // through LazyPackageFragmentScopeForJavaPackage@187
    classes('lang': Name@189) = null // through LazyPackageFragmentScopeForJavaPackage@187
    classes('util': Name@190) = null // through LazyPackageFragmentScopeForJavaPackage@187
    deserializedPackageScope = Empty@191 // through LazyPackageFragmentScopeForJavaPackage@187
    memberIndex = computeMemberIndex$1@192 // through LazyPackageFragmentScopeForJavaPackage@187
}

LazyJavaPackageFragment@174['lang'] {
    _functions('HashMap': Name@193) = EmptyList@6[empty] // through LazyPackageFragmentScopeForJavaPackage@194
    _functions('get': Name@5) = EmptyList@6[empty] // through LazyPackageFragmentScopeForJavaPackage@194
    classes('HashMap': Name@193) = null // through LazyPackageFragmentScopeForJavaPackage@194
    classes('get': Name@5) = null // through LazyPackageFragmentScopeForJavaPackage@194
    deserializedPackageScope = Empty@191 // through LazyPackageFragmentScopeForJavaPackage@194
    memberIndex = computeMemberIndex$1@195 // through LazyPackageFragmentScopeForJavaPackage@194
}

LazyJavaPackageFragment@178['util'] {
    _functions('HashMap': Name@196) = EmptyList@6[empty] // through LazyPackageFragmentScopeForJavaPackage@197
    classes('HashMap': Name@198) = LazyJavaClassDescriptor@11['HashMap'] // through LazyPackageFragmentScopeForJavaPackage@197
    deserializedPackageScope = Empty@191 // through LazyPackageFragmentScopeForJavaPackage@197
    memberIndex = computeMemberIndex$1@199 // through LazyPackageFragmentScopeForJavaPackage@197
}

LazyJavaTypeParameterDescriptor@35['K'] {
    defaultType = JetTypeImpl@200['K']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@56
    upperBounds = LinkedHashSet@201[1] { NullableType@202 }
}

LazyJavaTypeParameterDescriptor@30['K'] {
    defaultType = JetTypeImpl@203['K']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@60
}

LazyJavaTypeParameterDescriptor@31['V'] {
    defaultType = JetTypeImpl@204['V']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@126
    upperBounds = LinkedHashSet@205[1] { NullableType@206 }
}

LazyJavaTypeParameterDescriptor@36['V'] {
    defaultType = JetTypeImpl@207['V']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@130
    upperBounds = LinkedHashSet@208[1] { NullableType@209 }
}

LazyJavaTypeParameterResolver@210 {
    resolve(JavaTypeParameterImpl@211['K']) = LazyJavaTypeParameterDescriptor@30['K']
    resolve(JavaTypeParameterImpl@212['V']) = LazyJavaTypeParameterDescriptor@31['V']
}

LazyJavaTypeParameterResolver@213 {
    resolve(JavaTypeParameterImpl@214['K']) = LazyJavaTypeParameterDescriptor@35['K']
    resolve(JavaTypeParameterImpl@215['V']) = LazyJavaTypeParameterDescriptor@36['V']
}

LazyJavaTypeParameterResolver@216 {
    resolve(JavaTypeParameterImpl@143['V']) = null
}

LazyJavaTypeParameterResolver@217 {
    resolve(JavaTypeParameterImpl@127['V']) = null
}
