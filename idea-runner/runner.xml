<project name="Idea Runner" xmlns:if="ant:if">
    <property name="dependencies.dir" location="${basedir}/../dependencies"/>
    <property name="bootstrap.build.no.tests" value="false"/>
    <condition property="bootstrap.or.local.build" value="true">
        <or>
            <istrue value="${bootstrap.build.no.tests}"/>
            <not>
                <isset property="teamcity.version"/>
            </not>
        </or>
    </condition>

    <property name="bootstrap.runtime" location="${dependencies.dir}/bootstrap-compiler/Kotlin/kotlinc/lib/kotlin-runtime.jar"/>
    <property name="bootstrap.reflect" location="${dependencies.dir}/bootstrap-compiler/Kotlin/kotlinc/lib/kotlin-reflect.jar"/>

    <macrodef name="enable-kotlin-plugin-in-file">
        <attribute name="disable.plugins.file.path"/>

        <sequential>
            <echo message="Enable for @{disable.plugins.file.path}"/>

            <available property="disable_plugins.found" file="@{disable.plugins.file.path}"/>

            <sequential if:set="disable_plugins.found">
                <!--suppress AntResolveInspection -->
                <loadfile property="disabled_plugins.text" srcFile="@{disable.plugins.file.path}">
                    <filterchain>
                        <linecontains negate="true">
                            <contains value="org.jetbrains.kotlin"/>
                        </linecontains>
                    </filterchain>
                </loadfile>
                <property name="disabled_plugins.text" value=""/>

                <echo file="@{disable.plugins.file.path}" message="${disabled_plugins.text}"/>
            </sequential>
        </sequential>
    </macrodef>

    <target name="force-enable-kotlin-plugin">
        <enable-kotlin-plugin-in-file disable.plugins.file.path="${basedir}/../ideaSDK/config-idea/disabled_plugins.txt"/>
    </target>

    <target name="force-enable-kotlin-plugin-in-ultimate">
        <enable-kotlin-plugin-in-file disable.plugins.file.path="${basedir}/../idea-ultimate-runner/config-idea/disabled_plugins.txt"/>
    </target>

    <target name="copy-plugin-to-ultimate">
        <copy todir="${basedir}/../idea-ultimate-runner/config-idea/Kotlin">
            <fileset dir="${basedir}/../out/artifacts/Kotlin"/>
        </copy>
    </target>

    <target name="copy-runtime-for-idea-plugin">
        <!-- For local build and the first (bootstrap) step of the build, IDEA plugin needs the runtime it was compiled against -->
        <!-- Otherwise (on the second step of the build) we distribute the same runtime in the compiler and the plugin -->
        <condition property="runtime.to.copy"
                   value="${bootstrap.runtime}"
                   else="${basedir}/../dist/kotlinc/lib/kotlin-runtime.jar">
            <isset property="bootstrap.or.local.build"/>
        </condition>

        <condition property="reflect.to.copy"
                   value="${bootstrap.reflect}"
                   else="${basedir}/../dist/kotlinc/lib/kotlin-reflect.jar">
            <isset property="bootstrap.or.local.build"/>
        </condition>

        <!--suppress AntResolveInspection -->
        <copy file="${runtime.to.copy}" tofile="${artifact.output.path}/lib/kotlin-runtime.jar" overwrite="true"/>
        <!--suppress AntResolveInspection -->
        <copy file="${reflect.to.copy}" tofile="${artifact.output.path}/lib/kotlin-reflect.jar" overwrite="true"/>
    </target>

    <target name="copy-runtime-for-jps-plugin" if="bootstrap.or.local.build">
        <!-- For local build and the first (bootstrap) step of the build, JPS plugin needs the runtime it was compiled against -->
        <!-- On the second step of the build the runtime from the plugin should be enough (it's included to the classpath in plugin.xml) -->
        <!--suppress AntResolveInspection -->
        <jar update="true" destfile="${artifact.output.path}/kotlin-jps-plugin.jar">
            <zipgroupfileset file="${bootstrap.runtime}"/>
            <zipgroupfileset file="${bootstrap.reflect}"/>
        </jar>
    </target>
</project>
