DescriptorResolver@0 {
    <name not found> = IntValue@1
}

LazyJavaClassDescriptor@2['AbstractMap'] {
    _functions('get': Name@3) = ArrayList@4[1] { JavaMethodDescriptor@5['get'] } // through LazyJavaClassMemberScope@6
    _properties('get': Name@7) = EmptyList@8[empty] // through LazyJavaClassMemberScope@6
    _typeConstructor = LazyJavaClassTypeConstructor@9['AbstractMap']
    defaultType = JetTypeImpl@10['AbstractMap<2>']
    memberIndex = computeMemberIndex$1@11 // through LazyJavaClassMemberScope@6
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@12['<this>']
}

LazyJavaClassDescriptor@13['HashMap'] {
    _constructors = ArrayList@14[4] { JavaConstructorDescriptor@15['<init>'], JavaConstructorDescriptor@16['<init>'], JavaConstructorDescriptor@17['<init>'], ... } // through LazyJavaClassMemberScope@18
    _functionTypeForSamInterface = null
    _functions('get': Name@7) = ArrayList@19[1] { JavaMethodDescriptor@20['get'] } // through LazyJavaClassMemberScope@18
    _properties('get': Name@7) = EmptyList@8[empty] // through LazyJavaClassMemberScope@18
    _typeConstructor = LazyJavaClassTypeConstructor@21['HashMap']
    defaultType = JetTypeImpl@22['HashMap<2>']
    enumEntryIndex = LinkedHashMap@23 // through LazyJavaClassMemberScope@18
    memberIndex = computeMemberIndex$1@24 // through LazyJavaClassMemberScope@18
    nestedClassIndex = LinkedHashMap@25 // through LazyJavaClassMemberScope@18
    nestedClasses('get': Name@7) = null // through LazyJavaClassMemberScope@18
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@26['<this>']
}

LazyJavaClassDescriptor@27['Serializable'] {
    _functions('get': Name@3) = EmptyList@8[empty] // through LazyJavaClassMemberScope@28
    _properties('get': Name@7) = EmptyList@8[empty] // through LazyJavaClassMemberScope@28
    _typeConstructor = LazyJavaClassTypeConstructor@29['Serializable']
    memberIndex = computeMemberIndex$1@30 // through LazyJavaClassMemberScope@28
}

LazyJavaClassTypeConstructor@9['AbstractMap'] {
    _parameters = ArrayList@31[2] { LazyJavaTypeParameterDescriptor@32['K'], LazyJavaTypeParameterDescriptor@33['V'] }
    _supertypes = ArrayList@34[1] { LazyJavaClassifierType@35['Map<K, V>'] }
}

LazyJavaClassTypeConstructor@21['HashMap'] {
    _parameters = ArrayList@36[2] { LazyJavaTypeParameterDescriptor@37['K'], LazyJavaTypeParameterDescriptor@38['V'] }
    _supertypes = ArrayList@39[4] { LazyJavaClassifierType@40['AbstractMap<K, V>'], LazyJavaClassifierType@41['Map<K, V>'], LazyJavaClassifierType@42['Cloneable'], ... }
}

LazyJavaClassTypeConstructor@29['Serializable'] {
    _parameters = ArrayList@43[empty]
    _supertypes = ArrayList@44[1] { JetTypeImpl@45['Any'] }
}

LazyJavaClassifierType@40['AbstractMap<K, V>'] {
    _arguments = ArrayList@46[2] { TypeProjectionImpl@47, TypeProjectionImpl@48 }
    _memberScope = SubstitutingScope@49
    _typeConstructor = LazyJavaClassTypeConstructor@9['AbstractMap']
    classifier = JavaClassImpl@50['AbstractMap']
}

LazyJavaClassifierType@42['Cloneable'] {
    _arguments = ArrayList@51[empty]
    _memberScope = DeserializedClassMemberScope@52
    _typeConstructor = DeserializedClassTypeConstructor@53
    classifier = JavaClassImpl@54['Cloneable']
}

LazyJavaClassifierType@55['K'] {
    _arguments = ArrayList@56[empty]
    _nullable = 'false': Boolean@57
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@58
    classifier = JavaTypeParameterImpl@59['K']
}

LazyJavaClassifierType@60['K'] {
    _arguments = ArrayList@61[empty]
    _nullable = 'false': Boolean@57
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@62
    classifier = JavaTypeParameterImpl@63['K']
}

LazyJavaClassifierType@64['K'] {
    _arguments = ArrayList@65[empty]
    _nullable = 'false': Boolean@57
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@62
    classifier = JavaTypeParameterImpl@66['K']
}

LazyJavaClassifierType@67['K'] {
    _arguments = ArrayList@68[empty]
    _nullable = 'false': Boolean@57
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@62
    classifier = JavaTypeParameterImpl@69['K']
}

LazyJavaClassifierType@70['K'] {
    _arguments = ArrayList@71[empty]
    _nullable = 'false': Boolean@57
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@62
    classifier = JavaTypeParameterImpl@72['K']
}

LazyJavaClassifierType@73['K'] {
    _arguments = ArrayList@74[empty]
    _nullable = 'true': Boolean@75
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@58
    classifier = JavaTypeParameterImpl@59['K']
}

LazyJavaClassifierType@76['K'] {
    _arguments = ArrayList@77[empty]
    _nullable = 'true': Boolean@75
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@62
    classifier = JavaTypeParameterImpl@72['K']
}

LazyJavaClassifierType@78['K'] {
    _arguments = ArrayList@79[empty]
    _nullable = 'true': Boolean@75
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@62
    classifier = JavaTypeParameterImpl@63['K']
}

LazyJavaClassifierType@80['K'] {
    _arguments = ArrayList@81[empty]
    _nullable = 'true': Boolean@75
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@62
    classifier = JavaTypeParameterImpl@66['K']
}

LazyJavaClassifierType@82['K'] {
    _arguments = ArrayList@83[empty]
    _nullable = 'true': Boolean@75
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@62
    classifier = JavaTypeParameterImpl@69['K']
}

LazyJavaClassifierType@84['Map<? extends K, ? extends V>'] {
    _arguments = ArrayList@85[2] { TypeProjectionImpl@86, TypeProjectionImpl@87 }
    _memberScope = SubstitutingScope@88
    _nullable = 'false': Boolean@57
    _typeConstructor = DeserializedClassTypeConstructor@89
    classifier = JavaClassImpl@90['Map']
}

LazyJavaClassifierType@91['Map<? extends K, ? extends V>'] {
    _arguments = ArrayList@92[2] { TypeProjectionImpl@93, TypeProjectionImpl@94 }
    _memberScope = SubstitutingScope@95
    _nullable = 'true': Boolean@75
    _typeConstructor = DeserializedClassTypeConstructor@96
    classifier = JavaClassImpl@90['Map']
}

LazyJavaClassifierType@35['Map<K, V>'] {
    _arguments = ArrayList@97[2] { TypeProjectionImpl@98, TypeProjectionImpl@99 }
    _memberScope = SubstitutingScope@100
    _typeConstructor = DeserializedClassTypeConstructor@89
    classifier = JavaClassImpl@101['Map']
}

LazyJavaClassifierType@41['Map<K, V>'] {
    _arguments = ArrayList@102[2] { TypeProjectionImpl@103, TypeProjectionImpl@104 }
    _memberScope = SubstitutingScope@105
    _typeConstructor = DeserializedClassTypeConstructor@89
    classifier = JavaClassImpl@106['Map']
}

LazyJavaClassifierType@107['Object'] {
    _arguments = ArrayList@108[empty]
    _memberScope = DeserializedClassMemberScope@109
    _nullable = 'false': Boolean@57
    _typeConstructor = DeserializedClassTypeConstructor@110
    classifier = JavaClassImpl@111['Object']
}

LazyJavaClassifierType@112['Object'] {
    _arguments = ArrayList@113[empty]
    _memberScope = DeserializedClassMemberScope@109
    _nullable = 'false': Boolean@57
    _typeConstructor = DeserializedClassTypeConstructor@110
    classifier = JavaClassImpl@114['Object']
}

LazyJavaClassifierType@115['Object'] {
    _arguments = ArrayList@116[empty]
    _memberScope = DeserializedClassMemberScope@109
    _nullable = 'true': Boolean@75
    _typeConstructor = DeserializedClassTypeConstructor@110
    classifier = JavaClassImpl@111['Object']
}

LazyJavaClassifierType@117['Object'] {
    _arguments = ArrayList@118[empty]
    _memberScope = DeserializedClassMemberScope@109
    _nullable = 'true': Boolean@75
    _typeConstructor = DeserializedClassTypeConstructor@110
    classifier = JavaClassImpl@114['Object']
}

LazyJavaClassifierType@119['Object'] {
    _typeConstructor = DeserializedClassTypeConstructor@110
    classifier = JavaClassImpl@120['Object']
}

LazyJavaClassifierType@121['Object'] {
    _typeConstructor = DeserializedClassTypeConstructor@110
    classifier = JavaClassImpl@122['Object']
}

LazyJavaClassifierType@123['Serializable'] {
    _arguments = ArrayList@124[empty]
    _memberScope = LazyJavaClassMemberScope@28
    _typeConstructor = LazyJavaClassTypeConstructor@29['Serializable']
    classifier = JavaClassImpl@125['Serializable']
}

LazyJavaClassifierType@126['V'] {
    _arguments = ArrayList@127[empty]
    _nullable = 'false': Boolean@57
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@128
    classifier = JavaTypeParameterImpl@129['V']
}

LazyJavaClassifierType@130['V'] {
    _arguments = ArrayList@131[empty]
    _nullable = 'false': Boolean@57
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@128
    classifier = JavaTypeParameterImpl@132['V']
}

LazyJavaClassifierType@133['V'] {
    _arguments = ArrayList@134[empty]
    _nullable = 'false': Boolean@57
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@128
    classifier = JavaTypeParameterImpl@135['V']
}

LazyJavaClassifierType@136['V'] {
    _arguments = ArrayList@137[empty]
    _nullable = 'false': Boolean@57
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@138
    classifier = JavaTypeParameterImpl@139['V']
}

LazyJavaClassifierType@140['V'] {
    _arguments = ArrayList@141[empty]
    _nullable = 'false': Boolean@57
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@138
    classifier = JavaTypeParameterImpl@142['V']
}

LazyJavaClassifierType@143['V'] {
    _arguments = ArrayList@144[empty]
    _nullable = 'false': Boolean@57
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@128
    classifier = JavaTypeParameterImpl@145['V']
}

LazyJavaClassifierType@146['V'] {
    _arguments = ArrayList@147[empty]
    _nullable = 'false': Boolean@57
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@128
    classifier = JavaTypeParameterImpl@148['V']
}

LazyJavaClassifierType@149['V'] {
    _arguments = ArrayList@150[empty]
    _nullable = 'true': Boolean@75
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@128
    classifier = JavaTypeParameterImpl@129['V']
}

LazyJavaClassifierType@151['V'] {
    _arguments = ArrayList@152[empty]
    _nullable = 'true': Boolean@75
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@128
    classifier = JavaTypeParameterImpl@135['V']
}

LazyJavaClassifierType@153['V'] {
    _arguments = ArrayList@154[empty]
    _nullable = 'true': Boolean@75
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@128
    classifier = JavaTypeParameterImpl@148['V']
}

LazyJavaClassifierType@155['V'] {
    _arguments = ArrayList@156[empty]
    _nullable = 'true': Boolean@75
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@128
    classifier = JavaTypeParameterImpl@145['V']
}

LazyJavaClassifierType@157['V'] {
    _arguments = ArrayList@158[empty]
    _nullable = 'true': Boolean@75
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@138
    classifier = JavaTypeParameterImpl@139['V']
}

LazyJavaClassifierType@159['V'] {
    _arguments = ArrayList@160[empty]
    _nullable = 'true': Boolean@75
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@128
    classifier = JavaTypeParameterImpl@132['V']
}

LazyJavaClassifierType@161['V'] {
    _arguments = ArrayList@162[empty]
    _nullable = 'true': Boolean@75
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@138
    classifier = JavaTypeParameterImpl@142['V']
}

LazyJavaPackageFragmentProvider@163 {
    _packageFragments('<root>': FqName@164) = LazyJavaPackageFragment@165['<root>']
    _packageFragments('Int': FqName@166) = null
    _packageFragments('SomeClass': FqName@167) = null
    _packageFragments('String': FqName@168) = null
    _packageFragments('java': FqName@169) = LazyJavaPackageFragment@170['java']
    _packageFragments('java.io': FqName@171) = LazyJavaPackageFragment@172['io']
    _packageFragments('java.lang': FqName@173) = LazyJavaPackageFragment@174['lang']
    _packageFragments('java.lang.Int': FqName@175) = null
    _packageFragments('java.lang.SomeClass': FqName@176) = null
    _packageFragments('java.lang.String': FqName@177) = null
    _packageFragments('java.util': FqName@178) = LazyJavaPackageFragment@179['util']
    _packageFragments('kotlin': FqName@180) = null
    _packageFragments('kotlin.Int': FqName@181) = null
    _packageFragments('kotlin.SomeClass': FqName@182) = null
    _packageFragments('kotlin.String': FqName@183) = null
    _packageFragments('kotlin.io': FqName@184) = null
    _packageFragments('kotlin.jvm': FqName@185) = null
    _packageFragments('kt1270': FqName@186) = null
    _packageFragments('kt1270.Int': FqName@187) = null
    _packageFragments('kt1270.SomeClass': FqName@188) = null
    _packageFragments('kt1270.String': FqName@189) = null
    _packageFragments('kt1270.java': FqName@190) = null
    topLevelClasses(JavaClassImpl@50['AbstractMap']) = LazyJavaClassDescriptor@2['AbstractMap']
    topLevelClasses(JavaClassImpl@191['HashMap']) = LazyJavaClassDescriptor@13['HashMap']
    topLevelClasses(JavaClassImpl@125['Serializable']) = LazyJavaClassDescriptor@27['Serializable']
}

LazyJavaPackageFragment@170['java'] {
    _functions('lang': Name@192) = EmptyList@8[empty] // through LazyPackageFragmentScopeForJavaPackage@193
    classes('lang': Name@194) = null // through LazyPackageFragmentScopeForJavaPackage@193
    classes('util': Name@195) = null // through LazyPackageFragmentScopeForJavaPackage@193
    deserializedPackageScope = Empty@196 // through LazyPackageFragmentScopeForJavaPackage@193
    memberIndex = computeMemberIndex$1@197 // through LazyPackageFragmentScopeForJavaPackage@193
}

LazyJavaPackageFragment@174['lang'] {
    _functions('get': Name@7) = EmptyList@8[empty] // through LazyPackageFragmentScopeForJavaPackage@198
    classes('get': Name@7) = null // through LazyPackageFragmentScopeForJavaPackage@198
    classes('java': Name@199) = null // through LazyPackageFragmentScopeForJavaPackage@198
    deserializedPackageScope = Empty@196 // through LazyPackageFragmentScopeForJavaPackage@198
    memberIndex = computeMemberIndex$1@200 // through LazyPackageFragmentScopeForJavaPackage@198
}

LazyJavaPackageFragment@179['util'] {
    _functions('HashMap': Name@201) = EmptyList@8[empty] // through LazyPackageFragmentScopeForJavaPackage@202
    classes('HashMap': Name@201) = LazyJavaClassDescriptor@13['HashMap'] // through LazyPackageFragmentScopeForJavaPackage@202
    deserializedPackageScope = Empty@196 // through LazyPackageFragmentScopeForJavaPackage@202
    memberIndex = computeMemberIndex$1@203 // through LazyPackageFragmentScopeForJavaPackage@202
}

LazyJavaTypeParameterDescriptor@37['K'] {
    defaultType = JetTypeImpl@204['K']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@62
    upperBounds = LinkedHashSet@205[1] { NullableType@206 }
}

LazyJavaTypeParameterDescriptor@32['K'] {
    defaultType = JetTypeImpl@207['K']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@58
}

LazyJavaTypeParameterDescriptor@38['V'] {
    defaultType = JetTypeImpl@208['V']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@128
    upperBounds = LinkedHashSet@209[1] { NullableType@210 }
}

LazyJavaTypeParameterDescriptor@33['V'] {
    defaultType = JetTypeImpl@211['V']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@138
    upperBounds = LinkedHashSet@212[1] { NullableType@213 }
}

LazyJavaTypeParameterResolver@214 {
    resolve(JavaTypeParameterImpl@215['K']) = LazyJavaTypeParameterDescriptor@32['K']
    resolve(JavaTypeParameterImpl@216['V']) = LazyJavaTypeParameterDescriptor@33['V']
}

LazyJavaTypeParameterResolver@217 {
    resolve(JavaTypeParameterImpl@218['K']) = LazyJavaTypeParameterDescriptor@37['K']
    resolve(JavaTypeParameterImpl@219['V']) = LazyJavaTypeParameterDescriptor@38['V']
}

LazyJavaTypeParameterResolver@220 {
    resolve(JavaTypeParameterImpl@139['V']) = null
}

LazyJavaTypeParameterResolver@221 {
    resolve(JavaTypeParameterImpl@135['V']) = null
}
