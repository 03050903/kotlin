LazyJavaClassDescriptor@0['Appendable'] {
    functions('println': Name@1) = EmptyList@2[empty] // through LazyJavaClassMemberScope@3
    memberIndex = computeMemberIndex$1@4 // through LazyJavaClassMemberScope@3
    properties('println': Name@5) = EmptyList@2[empty] // through LazyJavaClassMemberScope@3
    typeConstructor = LazyJavaClassTypeConstructor@6['Appendable']
}

LazyJavaClassDescriptor@7['AutoCloseable'] {
    functions('println': Name@1) = EmptyList@2[empty] // through LazyJavaClassMemberScope@8
    memberIndex = computeMemberIndex$1@9 // through LazyJavaClassMemberScope@8
    properties('println': Name@5) = EmptyList@2[empty] // through LazyJavaClassMemberScope@8
    typeConstructor = LazyJavaClassTypeConstructor@10['AutoCloseable']
}

LazyJavaClassDescriptor@11['Closeable'] {
    functions('println': Name@1) = EmptyList@2[empty] // through LazyJavaClassMemberScope@12
    memberIndex = computeMemberIndex$1@13 // through LazyJavaClassMemberScope@12
    properties('println': Name@5) = EmptyList@2[empty] // through LazyJavaClassMemberScope@12
    typeConstructor = LazyJavaClassTypeConstructor@14['Closeable']
}

LazyJavaClassDescriptor@15['Exception'] {
    typeConstructor = LazyJavaClassTypeConstructor@16['Exception']
}

LazyJavaClassDescriptor@17['FilterOutputStream'] {
    functions('println': Name@1) = EmptyList@2[empty] // through LazyJavaClassMemberScope@18
    memberIndex = computeMemberIndex$1@19 // through LazyJavaClassMemberScope@18
    properties('println': Name@5) = EmptyList@2[empty] // through LazyJavaClassMemberScope@18
    typeConstructor = LazyJavaClassTypeConstructor@20['FilterOutputStream']
}

LazyJavaClassDescriptor@21['OutputStream'] {
    functions('println': Name@1) = EmptyList@2[empty] // through LazyJavaClassMemberScope@22
    memberIndex = computeMemberIndex$1@23 // through LazyJavaClassMemberScope@22
    properties('println': Name@5) = EmptyList@2[empty] // through LazyJavaClassMemberScope@22
    typeConstructor = LazyJavaClassTypeConstructor@24['OutputStream']
}

LazyJavaClassDescriptor@25['PrintStream'] {
    defaultType = JetTypeImpl@26['PrintStream']
    enumEntryIndex = LinkedHashMap@27 // through LazyJavaClassMemberScope@28
    functions('println': Name@5) = ArrayList@29[10] { JavaMethodDescriptor@30['println'], JavaMethodDescriptor@31['println'], JavaMethodDescriptor@32['println'], ... } // through LazyJavaClassMemberScope@28
    memberIndex = computeMemberIndex$1@33 // through LazyJavaClassMemberScope@28
    nestedClassIndex = LinkedHashMap@34 // through LazyJavaClassMemberScope@28
    nestedClasses('println': Name@5) = null // through LazyJavaClassMemberScope@28
    properties('println': Name@5) = EmptyList@2[empty] // through LazyJavaClassMemberScope@28
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@35['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@36['PrintStream']
}

LazyJavaClassDescriptor@37['RuntimeException'] {
    constructors = ArrayList@38[5] { JavaConstructorDescriptor@39['<init>'], JavaConstructorDescriptor@40['<init>'], JavaConstructorDescriptor@41['<init>'], ... } // through LazyJavaClassMemberScope@42
    defaultType = JetTypeImpl@43['RuntimeException']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@44['RuntimeException']
}

LazyJavaClassDescriptor@45['System'] {
    enumEntryIndex = LinkedHashMap@46 // through LazyJavaClassMemberScope@47
    memberIndex = computeMemberIndex$1@48 // through LazyJavaClassMemberScope@47
    memberIndex = computeMemberIndex$1@49 // through LazyJavaStaticClassScope@50
    nestedClassIndex = LinkedHashMap@51 // through LazyJavaClassMemberScope@47
    nestedClasses('out': Name@52) = null // through LazyJavaClassMemberScope@47
    properties('out': Name@52) = ArrayList@53[1] { JavaPropertyDescriptor@54['out'] } // through LazyJavaStaticClassScope@50
    properties('out': Name@52) = EmptyList@2[empty] // through LazyJavaClassMemberScope@47
    typeConstructor = LazyJavaClassTypeConstructor@55['System']
}

LazyJavaClassTypeConstructor@6['Appendable'] {
    parameters = ArrayList@56[empty]
    supertypes = ArrayList@57[1] { JetTypeImpl@58['Any'] }
}

LazyJavaClassTypeConstructor@10['AutoCloseable'] {
    parameters = ArrayList@59[empty]
    supertypes = ArrayList@60[1] { JetTypeImpl@58['Any'] }
}

LazyJavaClassTypeConstructor@14['Closeable'] {
    parameters = ArrayList@61[empty]
    supertypes = ArrayList@62[1] { LazyJavaClassifierType@63['AutoCloseable'] }
}

LazyJavaClassTypeConstructor@16['Exception'] {
    parameters = ArrayList@64[empty]
    supertypes = ArrayList@65[1] { LazyJavaClassifierType@66['Throwable'] }
}

LazyJavaClassTypeConstructor@20['FilterOutputStream'] {
    parameters = ArrayList@67[empty]
    supertypes = ArrayList@68[1] { LazyJavaClassifierType@69['OutputStream'] }
}

LazyJavaClassTypeConstructor@24['OutputStream'] {
    parameters = ArrayList@70[empty]
    supertypes = ArrayList@71[1] { LazyJavaClassifierType@72['Closeable'] }
}

LazyJavaClassTypeConstructor@36['PrintStream'] {
    parameters = ArrayList@73[empty]
    supertypes = ArrayList@74[3] { LazyJavaClassifierType@75['FilterOutputStream'], LazyJavaClassifierType@76['Appendable'], LazyJavaClassifierType@77['Closeable'] }
}

LazyJavaClassTypeConstructor@44['RuntimeException'] {
    parameters = ArrayList@78[empty]
    supertypes = ArrayList@79[1] { LazyJavaClassifierType@80['Exception'] }
}

LazyJavaClassTypeConstructor@55['System'] {
    supertypes = ArrayList@81[1] { JetTypeImpl@58['Any'] }
}

LazyJavaClassifierType@76['Appendable'] {
    arguments = ArrayList@82[empty]
    classifier = JavaClassImpl@83['Appendable']
    memberScope = LazyJavaClassMemberScope@3
    typeConstructor = LazyJavaClassTypeConstructor@6['Appendable']
}

LazyJavaClassifierType@63['AutoCloseable'] {
    arguments = ArrayList@84[empty]
    classifier = JavaClassImpl@85['AutoCloseable']
    memberScope = LazyJavaClassMemberScope@8
    typeConstructor = LazyJavaClassTypeConstructor@10['AutoCloseable']
}

LazyJavaClassifierType@77['Closeable'] {
    arguments = ArrayList@86[empty]
    classifier = JavaClassImpl@87['Closeable']
    memberScope = LazyJavaClassMemberScope@12
    typeConstructor = LazyJavaClassTypeConstructor@14['Closeable']
}

LazyJavaClassifierType@72['Closeable'] {
    arguments = ArrayList@88[empty]
    classifier = JavaClassImpl@89['Closeable']
    memberScope = LazyJavaClassMemberScope@12
    typeConstructor = LazyJavaClassTypeConstructor@14['Closeable']
}

LazyJavaClassifierType@80['Exception'] {
    arguments = ArrayList@90[empty]
    classifier = JavaClassImpl@91['Exception']
    typeConstructor = LazyJavaClassTypeConstructor@16['Exception']
}

LazyJavaClassifierType@75['FilterOutputStream'] {
    arguments = ArrayList@92[empty]
    classifier = JavaClassImpl@93['FilterOutputStream']
    memberScope = LazyJavaClassMemberScope@18
    typeConstructor = LazyJavaClassTypeConstructor@20['FilterOutputStream']
}

LazyJavaClassifierType@94['Flushable'] {
    classifier = null
    typeConstructor = TypeConstructorImpl$1@95
}

LazyJavaClassifierType@96['Object'] {
    arguments = ArrayList@97[empty]
    classifier = JavaClassImpl@98['Object']
    nullable = 'false': Boolean@99
    typeConstructor = DeserializedClassTypeConstructor@100
}

LazyJavaClassifierType@101['Object'] {
    arguments = ArrayList@102[empty]
    classifier = JavaClassImpl@98['Object']
    nullable = 'true': Boolean@103
    typeConstructor = DeserializedClassTypeConstructor@100
}

LazyJavaClassifierType@104['Object'] {
    classifier = JavaClassImpl@105['Object']
    typeConstructor = DeserializedClassTypeConstructor@100
}

LazyJavaClassifierType@106['Object'] {
    classifier = JavaClassImpl@107['Object']
    typeConstructor = DeserializedClassTypeConstructor@100
}

LazyJavaClassifierType@108['Object'] {
    classifier = JavaClassImpl@109['Object']
    typeConstructor = DeserializedClassTypeConstructor@100
}

LazyJavaClassifierType@110['Object'] {
    classifier = JavaClassImpl@111['Object']
    typeConstructor = DeserializedClassTypeConstructor@100
}

LazyJavaClassifierType@69['OutputStream'] {
    arguments = ArrayList@112[empty]
    classifier = JavaClassImpl@113['OutputStream']
    memberScope = LazyJavaClassMemberScope@22
    typeConstructor = LazyJavaClassTypeConstructor@24['OutputStream']
}

LazyJavaClassifierType@114['PrintStream'] {
    arguments = ArrayList@115[empty]
    classifier = JavaClassImpl@116['PrintStream']
    memberScope = LazyJavaClassMemberScope@28
    nullable = 'false': Boolean@99
    typeConstructor = LazyJavaClassTypeConstructor@36['PrintStream']
}

LazyJavaClassifierType@117['PrintStream'] {
    arguments = ArrayList@118[empty]
    classifier = JavaClassImpl@116['PrintStream']
    nullable = 'true': Boolean@103
    typeConstructor = LazyJavaClassTypeConstructor@36['PrintStream']
}

LazyJavaClassifierType@119['String'] {
    arguments = ArrayList@120[empty]
    classifier = JavaClassImpl@121['String']
    nullable = 'false': Boolean@99
    typeConstructor = DeserializedClassTypeConstructor@122
}

LazyJavaClassifierType@123['String'] {
    arguments = ArrayList@124[empty]
    classifier = JavaClassImpl@125['String']
    nullable = 'false': Boolean@99
    typeConstructor = DeserializedClassTypeConstructor@122
}

LazyJavaClassifierType@126['String'] {
    arguments = ArrayList@127[empty]
    classifier = JavaClassImpl@128['String']
    nullable = 'false': Boolean@99
    typeConstructor = DeserializedClassTypeConstructor@122
}

LazyJavaClassifierType@129['String'] {
    arguments = ArrayList@130[empty]
    classifier = JavaClassImpl@131['String']
    nullable = 'false': Boolean@99
    typeConstructor = DeserializedClassTypeConstructor@122
}

LazyJavaClassifierType@132['String'] {
    arguments = ArrayList@133[empty]
    classifier = JavaClassImpl@121['String']
    nullable = 'true': Boolean@103
    typeConstructor = DeserializedClassTypeConstructor@122
}

LazyJavaClassifierType@134['String'] {
    arguments = ArrayList@135[empty]
    classifier = JavaClassImpl@131['String']
    nullable = 'true': Boolean@103
    typeConstructor = DeserializedClassTypeConstructor@122
}

LazyJavaClassifierType@136['String'] {
    arguments = ArrayList@137[empty]
    classifier = JavaClassImpl@128['String']
    nullable = 'true': Boolean@103
    typeConstructor = DeserializedClassTypeConstructor@122
}

LazyJavaClassifierType@138['String'] {
    arguments = ArrayList@139[empty]
    classifier = JavaClassImpl@125['String']
    nullable = 'true': Boolean@103
    typeConstructor = DeserializedClassTypeConstructor@122
}

LazyJavaClassifierType@140['Throwable'] {
    arguments = ArrayList@141[empty]
    classifier = JavaClassImpl@142['Throwable']
    nullable = 'false': Boolean@99
    typeConstructor = DeserializedClassTypeConstructor@143
}

LazyJavaClassifierType@144['Throwable'] {
    arguments = ArrayList@145[empty]
    classifier = JavaClassImpl@146['Throwable']
    nullable = 'false': Boolean@99
    typeConstructor = DeserializedClassTypeConstructor@143
}

LazyJavaClassifierType@147['Throwable'] {
    arguments = ArrayList@148[empty]
    classifier = JavaClassImpl@149['Throwable']
    nullable = 'false': Boolean@99
    typeConstructor = DeserializedClassTypeConstructor@143
}

LazyJavaClassifierType@150['Throwable'] {
    arguments = ArrayList@151[empty]
    classifier = JavaClassImpl@146['Throwable']
    nullable = 'true': Boolean@103
    typeConstructor = DeserializedClassTypeConstructor@143
}

LazyJavaClassifierType@152['Throwable'] {
    arguments = ArrayList@153[empty]
    classifier = JavaClassImpl@142['Throwable']
    nullable = 'true': Boolean@103
    typeConstructor = DeserializedClassTypeConstructor@143
}

LazyJavaClassifierType@154['Throwable'] {
    arguments = ArrayList@155[empty]
    classifier = JavaClassImpl@149['Throwable']
    nullable = 'true': Boolean@103
    typeConstructor = DeserializedClassTypeConstructor@143
}

LazyJavaClassifierType@66['Throwable'] {
    arguments = ArrayList@156[empty]
    classifier = JavaClassImpl@157['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@143
}

LazyJavaPackageFragmentProvider@158 {
    packageFragments('<root>': FqName@159) = LazyJavaPackageFragment@160['<root>']
    packageFragments('Int': FqName@161) = null
    packageFragments('System': FqName@162) = null
    packageFragments('java': FqName@163) = LazyJavaPackageFragment@164['java']
    packageFragments('java.io': FqName@165) = LazyJavaPackageFragment@166['io']
    packageFragments('java.lang': FqName@167) = LazyJavaPackageFragment@168['lang']
    packageFragments('java.lang.Int': FqName@169) = null
    packageFragments('java.lang.System': FqName@170) = null
    packageFragments('kotlin': FqName@171) = null
    packageFragments('kotlin.Int': FqName@172) = null
    packageFragments('kotlin.System': FqName@173) = null
    packageFragments('kotlin.io': FqName@174) = null
    packageFragments('kotlin.jvm': FqName@175) = null
    topLevelClasses(JavaClassImpl@83['Appendable']) = LazyJavaClassDescriptor@0['Appendable']
    topLevelClasses(JavaClassImpl@85['AutoCloseable']) = LazyJavaClassDescriptor@7['AutoCloseable']
    topLevelClasses(JavaClassImpl@87['Closeable']) = LazyJavaClassDescriptor@11['Closeable']
    topLevelClasses(JavaClassImpl@91['Exception']) = LazyJavaClassDescriptor@15['Exception']
    topLevelClasses(JavaClassImpl@93['FilterOutputStream']) = LazyJavaClassDescriptor@17['FilterOutputStream']
    topLevelClasses(JavaClassImpl@113['OutputStream']) = LazyJavaClassDescriptor@21['OutputStream']
    topLevelClasses(JavaClassImpl@116['PrintStream']) = LazyJavaClassDescriptor@25['PrintStream']
    topLevelClasses(JavaClassImpl@176['RuntimeException']) = LazyJavaClassDescriptor@37['RuntimeException']
    topLevelClasses(JavaClassImpl@177['System']) = LazyJavaClassDescriptor@45['System']
}

LazyJavaPackageFragment@160['<root>'] {
    classes('Int': Name@178) = null // through LazyPackageFragmentScopeForJavaPackage@179
    classes('RuntimeException': Name@180) = null // through LazyPackageFragmentScopeForJavaPackage@179
    classes('System': Name@181) = null // through LazyPackageFragmentScopeForJavaPackage@179
    classes('println': Name@5) = null // through LazyPackageFragmentScopeForJavaPackage@179
    deserializedPackageScope = Empty@182 // through LazyPackageFragmentScopeForJavaPackage@179
    functions('RuntimeException': Name@180) = EmptyList@2[empty] // through LazyPackageFragmentScopeForJavaPackage@179
    functions('println': Name@5) = EmptyList@2[empty] // through LazyPackageFragmentScopeForJavaPackage@179
    memberIndex = computeMemberIndex$1@183 // through LazyPackageFragmentScopeForJavaPackage@179
}

LazyJavaPackageFragment@164['java'] {
    classes('lang': Name@184) = null // through LazyPackageFragmentScopeForJavaPackage@185
    deserializedPackageScope = Empty@182 // through LazyPackageFragmentScopeForJavaPackage@185
    functions('lang': Name@186) = EmptyList@2[empty] // through LazyPackageFragmentScopeForJavaPackage@185
    memberIndex = computeMemberIndex$1@187 // through LazyPackageFragmentScopeForJavaPackage@185
}

LazyJavaPackageFragment@168['lang'] {
    classes('RuntimeException': Name@180) = LazyJavaClassDescriptor@37['RuntimeException'] // through LazyPackageFragmentScopeForJavaPackage@188
    classes('System': Name@181) = LazyJavaClassDescriptor@45['System'] // through LazyPackageFragmentScopeForJavaPackage@188
    classes('println': Name@5) = null // through LazyPackageFragmentScopeForJavaPackage@188
    deserializedPackageScope = Empty@182 // through LazyPackageFragmentScopeForJavaPackage@188
    functions('RuntimeException': Name@180) = EmptyList@2[empty] // through LazyPackageFragmentScopeForJavaPackage@188
    functions('println': Name@5) = EmptyList@2[empty] // through LazyPackageFragmentScopeForJavaPackage@188
    memberIndex = computeMemberIndex$1@189 // through LazyPackageFragmentScopeForJavaPackage@188
}
