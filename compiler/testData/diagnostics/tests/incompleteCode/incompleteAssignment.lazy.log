DescriptorResolver@0 {
    <name not found> = null
}

LazyJavaClassDescriptor@1['Arrays'] {
    enumEntryIndex = LinkedHashMap@2 // through LazyJavaClassMemberScope@3
    functions('toString': Name@4) = ArrayList@5[1] { DeserializedSimpleFunctionDescriptor@6['toString'] } // through LazyJavaClassMemberScope@3
    functions('toString': Name@4) = ArrayList@7[9] { JavaMethodDescriptor@8['toString'], JavaMethodDescriptor@9['toString'], JavaMethodDescriptor@10['toString'], ... } // through LazyJavaStaticClassScope@11
    memberIndex = computeMemberIndex$1@12 // through LazyJavaClassMemberScope@3
    memberIndex = computeMemberIndex$1@13 // through LazyJavaStaticClassScope@11
    nestedClassIndex = LinkedHashMap@14 // through LazyJavaClassMemberScope@3
    nestedClasses('toString': Name@4) = null // through LazyJavaClassMemberScope@3
    properties('toString': Name@4) = EmptyList@15[empty] // through LazyJavaClassMemberScope@3
    properties('toString': Name@4) = EmptyList@15[empty] // through LazyJavaStaticClassScope@11
    typeConstructor = LazyJavaClassTypeConstructor@16['Arrays']
}

LazyJavaClassDescriptor@17['AssertionError'] {
    constructors = ArrayList@18[10] { JavaConstructorDescriptor@19['<init>'], JavaConstructorDescriptor@20['<init>'], JavaConstructorDescriptor@21['<init>'], ... } // through LazyJavaClassMemberScope@22
    defaultType = JetTypeImpl@23['AssertionError']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@24['AssertionError']
}

LazyJavaClassDescriptor@25['Error'] {
    typeConstructor = LazyJavaClassTypeConstructor@26['Error']
}

LazyJavaClassTypeConstructor@16['Arrays'] {
    supertypes = ArrayList@27[1] { JetTypeImpl@28['Any'] }
}

LazyJavaClassTypeConstructor@24['AssertionError'] {
    parameters = ArrayList@29[empty]
    supertypes = ArrayList@30[1] { LazyJavaClassifierType@31['Error'] }
}

LazyJavaClassTypeConstructor@26['Error'] {
    parameters = ArrayList@32[empty]
    supertypes = ArrayList@33[1] { LazyJavaClassifierType@34['Throwable'] }
}

LazyJavaClassifierType@31['Error'] {
    arguments = ArrayList@35[empty]
    classifier = JavaClassImpl@36['Error']
    typeConstructor = LazyJavaClassTypeConstructor@26['Error']
}

LazyJavaClassifierType@37['Object'] {
    arguments = ArrayList@38[empty]
    classifier = JavaClassImpl@39['Object']
    nullable = 'false': Boolean@40
    typeConstructor = DeserializedClassTypeConstructor@41
}

LazyJavaClassifierType@42['Object'] {
    arguments = ArrayList@43[empty]
    classifier = JavaClassImpl@44['Object']
    nullable = 'false': Boolean@40
    typeConstructor = DeserializedClassTypeConstructor@41
}

LazyJavaClassifierType@45['Object'] {
    arguments = ArrayList@46[empty]
    classifier = JavaClassImpl@39['Object']
    nullable = 'true': Boolean@47
    typeConstructor = DeserializedClassTypeConstructor@41
}

LazyJavaClassifierType@48['Object'] {
    arguments = ArrayList@49[empty]
    classifier = JavaClassImpl@44['Object']
    nullable = 'true': Boolean@47
    typeConstructor = DeserializedClassTypeConstructor@41
}

LazyJavaClassifierType@50['Object'] {
    classifier = JavaClassImpl@51['Object']
    typeConstructor = DeserializedClassTypeConstructor@41
}

LazyJavaClassifierType@52['String'] {
    arguments = ArrayList@53[empty]
    classifier = JavaClassImpl@54['String']
    nullable = 'false': Boolean@40
    typeConstructor = DeserializedClassTypeConstructor@55
}

LazyJavaClassifierType@56['String'] {
    arguments = ArrayList@57[empty]
    classifier = JavaClassImpl@58['String']
    nullable = 'false': Boolean@40
    typeConstructor = DeserializedClassTypeConstructor@55
}

LazyJavaClassifierType@59['String'] {
    arguments = ArrayList@60[empty]
    classifier = JavaClassImpl@61['String']
    nullable = 'false': Boolean@40
    typeConstructor = DeserializedClassTypeConstructor@55
}

LazyJavaClassifierType@62['String'] {
    arguments = ArrayList@63[empty]
    classifier = JavaClassImpl@64['String']
    nullable = 'false': Boolean@40
    typeConstructor = DeserializedClassTypeConstructor@55
}

LazyJavaClassifierType@65['String'] {
    arguments = ArrayList@66[empty]
    classifier = JavaClassImpl@67['String']
    nullable = 'false': Boolean@40
    typeConstructor = DeserializedClassTypeConstructor@55
}

LazyJavaClassifierType@68['String'] {
    arguments = ArrayList@69[empty]
    classifier = JavaClassImpl@70['String']
    nullable = 'false': Boolean@40
    typeConstructor = DeserializedClassTypeConstructor@55
}

LazyJavaClassifierType@71['String'] {
    arguments = ArrayList@72[empty]
    classifier = JavaClassImpl@73['String']
    nullable = 'false': Boolean@40
    typeConstructor = DeserializedClassTypeConstructor@55
}

LazyJavaClassifierType@74['String'] {
    arguments = ArrayList@75[empty]
    classifier = JavaClassImpl@76['String']
    nullable = 'false': Boolean@40
    typeConstructor = DeserializedClassTypeConstructor@55
}

LazyJavaClassifierType@77['String'] {
    arguments = ArrayList@78[empty]
    classifier = JavaClassImpl@79['String']
    nullable = 'false': Boolean@40
    typeConstructor = DeserializedClassTypeConstructor@55
}

LazyJavaClassifierType@80['String'] {
    arguments = ArrayList@81[empty]
    classifier = JavaClassImpl@82['String']
    nullable = 'false': Boolean@40
    typeConstructor = DeserializedClassTypeConstructor@55
}

LazyJavaClassifierType@83['String'] {
    arguments = ArrayList@84[empty]
    classifier = JavaClassImpl@85['String']
    nullable = 'false': Boolean@40
    typeConstructor = DeserializedClassTypeConstructor@55
}

LazyJavaClassifierType@86['String'] {
    arguments = ArrayList@87[empty]
    classifier = JavaClassImpl@76['String']
    nullable = 'true': Boolean@47
    typeConstructor = DeserializedClassTypeConstructor@55
}

LazyJavaClassifierType@88['String'] {
    arguments = ArrayList@89[empty]
    classifier = JavaClassImpl@79['String']
    nullable = 'true': Boolean@47
    typeConstructor = DeserializedClassTypeConstructor@55
}

LazyJavaClassifierType@90['String'] {
    arguments = ArrayList@91[empty]
    classifier = JavaClassImpl@70['String']
    nullable = 'true': Boolean@47
    typeConstructor = DeserializedClassTypeConstructor@55
}

LazyJavaClassifierType@92['String'] {
    arguments = ArrayList@93[empty]
    classifier = JavaClassImpl@82['String']
    nullable = 'true': Boolean@47
    typeConstructor = DeserializedClassTypeConstructor@55
}

LazyJavaClassifierType@94['String'] {
    arguments = ArrayList@95[empty]
    classifier = JavaClassImpl@58['String']
    nullable = 'true': Boolean@47
    typeConstructor = DeserializedClassTypeConstructor@55
}

LazyJavaClassifierType@96['String'] {
    arguments = ArrayList@97[empty]
    classifier = JavaClassImpl@67['String']
    nullable = 'true': Boolean@47
    typeConstructor = DeserializedClassTypeConstructor@55
}

LazyJavaClassifierType@98['String'] {
    arguments = ArrayList@99[empty]
    classifier = JavaClassImpl@64['String']
    nullable = 'true': Boolean@47
    typeConstructor = DeserializedClassTypeConstructor@55
}

LazyJavaClassifierType@100['String'] {
    arguments = ArrayList@101[empty]
    classifier = JavaClassImpl@54['String']
    nullable = 'true': Boolean@47
    typeConstructor = DeserializedClassTypeConstructor@55
}

LazyJavaClassifierType@102['String'] {
    arguments = ArrayList@103[empty]
    classifier = JavaClassImpl@61['String']
    nullable = 'true': Boolean@47
    typeConstructor = DeserializedClassTypeConstructor@55
}

LazyJavaClassifierType@104['String'] {
    arguments = ArrayList@105[empty]
    classifier = JavaClassImpl@73['String']
    nullable = 'true': Boolean@47
    typeConstructor = DeserializedClassTypeConstructor@55
}

LazyJavaClassifierType@106['String'] {
    arguments = ArrayList@107[empty]
    classifier = JavaClassImpl@85['String']
    nullable = 'true': Boolean@47
    typeConstructor = DeserializedClassTypeConstructor@55
}

LazyJavaClassifierType@108['Throwable'] {
    arguments = ArrayList@109[empty]
    classifier = JavaClassImpl@110['Throwable']
    nullable = 'false': Boolean@40
    typeConstructor = DeserializedClassTypeConstructor@111
}

LazyJavaClassifierType@112['Throwable'] {
    arguments = ArrayList@113[empty]
    classifier = JavaClassImpl@110['Throwable']
    nullable = 'true': Boolean@47
    typeConstructor = DeserializedClassTypeConstructor@111
}

LazyJavaClassifierType@34['Throwable'] {
    arguments = ArrayList@114[empty]
    classifier = JavaClassImpl@115['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@111
}

LazyJavaPackageFragmentProvider@116 {
    packageFragments('<root>': FqName@117) = LazyJavaPackageFragment@118['<root>']
    packageFragments('Any': FqName@119) = null
    packageFragments('Array': FqName@120) = null
    packageFragments('Arrays': FqName@121) = null
    packageFragments('Int': FqName@122) = null
    packageFragments('IntArray': FqName@123) = null
    packageFragments('String': FqName@124) = null
    packageFragments('T': FqName@125) = null
    packageFragments('java': FqName@126) = LazyJavaPackageFragment@127['java']
    packageFragments('java.lang': FqName@128) = LazyJavaPackageFragment@129['lang']
    packageFragments('java.lang.Any': FqName@130) = null
    packageFragments('java.lang.Array': FqName@131) = null
    packageFragments('java.lang.Arrays': FqName@132) = null
    packageFragments('java.lang.Int': FqName@133) = null
    packageFragments('java.lang.IntArray': FqName@134) = null
    packageFragments('java.lang.String': FqName@135) = null
    packageFragments('java.lang.T': FqName@136) = null
    packageFragments('java.lang.res': FqName@137) = null
    packageFragments('java.util': FqName@138) = LazyJavaPackageFragment@139['util']
    packageFragments('java.util.Any': FqName@140) = null
    packageFragments('java.util.Array': FqName@141) = null
    packageFragments('java.util.Arrays': FqName@142) = null
    packageFragments('java.util.Int': FqName@143) = null
    packageFragments('java.util.IntArray': FqName@144) = null
    packageFragments('java.util.String': FqName@145) = null
    packageFragments('java.util.T': FqName@146) = null
    packageFragments('java.util.res': FqName@147) = null
    packageFragments('kotlin': FqName@148) = null
    packageFragments('kotlin.Any': FqName@149) = null
    packageFragments('kotlin.Array': FqName@150) = null
    packageFragments('kotlin.Arrays': FqName@151) = null
    packageFragments('kotlin.Int': FqName@152) = null
    packageFragments('kotlin.IntArray': FqName@153) = null
    packageFragments('kotlin.String': FqName@154) = null
    packageFragments('kotlin.T': FqName@155) = null
    packageFragments('kotlin.io': FqName@156) = null
    packageFragments('kotlin.jvm': FqName@157) = null
    packageFragments('kotlin.res': FqName@158) = null
    packageFragments('res': FqName@159) = null
    packageFragments('sum': FqName@160) = null
    packageFragments('sum.Any': FqName@161) = null
    packageFragments('sum.Array': FqName@162) = null
    packageFragments('sum.Arrays': FqName@163) = null
    packageFragments('sum.Int': FqName@164) = null
    packageFragments('sum.IntArray': FqName@165) = null
    packageFragments('sum.String': FqName@166) = null
    packageFragments('sum.T': FqName@167) = null
    packageFragments('sum.res': FqName@168) = null
    topLevelClasses(JavaClassImpl@169['Arrays']) = LazyJavaClassDescriptor@1['Arrays']
    topLevelClasses(JavaClassImpl@170['AssertionError']) = LazyJavaClassDescriptor@17['AssertionError']
    topLevelClasses(JavaClassImpl@36['Error']) = LazyJavaClassDescriptor@25['Error']
}

LazyJavaPackageFragment@127['java'] {
    classes('lang': Name@171) = null // through LazyPackageFragmentScopeForJavaPackage@172
    classes('util': Name@173) = null // through LazyPackageFragmentScopeForJavaPackage@172
    deserializedPackageScope = Empty@174 // through LazyPackageFragmentScopeForJavaPackage@172
    functions('lang': Name@175) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@172
    functions('util': Name@176) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@172
    memberIndex = computeMemberIndex$1@177 // through LazyPackageFragmentScopeForJavaPackage@172
}

LazyJavaPackageFragment@129['lang'] {
    classes('AssertionError': Name@178) = LazyJavaClassDescriptor@17['AssertionError'] // through LazyPackageFragmentScopeForJavaPackage@179
    classes('assertEquals': Name@180) = null // through LazyPackageFragmentScopeForJavaPackage@179
    classes('equals': Name@181) = null // through LazyPackageFragmentScopeForJavaPackage@179
    classes('hasNext': Name@182) = null // through LazyPackageFragmentScopeForJavaPackage@179
    classes('iterator': Name@183) = null // through LazyPackageFragmentScopeForJavaPackage@179
    classes('minus': Name@184) = null // through LazyPackageFragmentScopeForJavaPackage@179
    classes('next': Name@185) = null // through LazyPackageFragmentScopeForJavaPackage@179
    classes('plus': Name@186) = null // through LazyPackageFragmentScopeForJavaPackage@179
    classes('res': Name@187) = null // through LazyPackageFragmentScopeForJavaPackage@179
    classes('sum': Name@188) = null // through LazyPackageFragmentScopeForJavaPackage@179
    classes('test': Name@189) = null // through LazyPackageFragmentScopeForJavaPackage@179
    deserializedPackageScope = Empty@174 // through LazyPackageFragmentScopeForJavaPackage@179
    functions('AssertionError': Name@178) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@179
    functions('assertEquals': Name@180) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@179
    functions('equals': Name@181) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@179
    functions('hasNext': Name@182) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@179
    functions('iterator': Name@183) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@179
    functions('minus': Name@184) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@179
    functions('next': Name@185) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@179
    functions('plus': Name@186) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@179
    functions('res': Name@190) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@179
    functions('sum': Name@188) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@179
    functions('test': Name@189) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@179
    memberIndex = computeMemberIndex$1@191 // through LazyPackageFragmentScopeForJavaPackage@179
}

LazyJavaPackageFragment@139['util'] {
    classes('Any': Name@192) = null // through LazyPackageFragmentScopeForJavaPackage@193
    classes('Array': Name@194) = null // through LazyPackageFragmentScopeForJavaPackage@193
    classes('Arrays': Name@195) = LazyJavaClassDescriptor@1['Arrays'] // through LazyPackageFragmentScopeForJavaPackage@193
    classes('AssertionError': Name@178) = null // through LazyPackageFragmentScopeForJavaPackage@193
    classes('Int': Name@196) = null // through LazyPackageFragmentScopeForJavaPackage@193
    classes('IntArray': Name@197) = null // through LazyPackageFragmentScopeForJavaPackage@193
    classes('String': Name@198) = null // through LazyPackageFragmentScopeForJavaPackage@193
    classes('assertEquals': Name@180) = null // through LazyPackageFragmentScopeForJavaPackage@193
    classes('equals': Name@181) = null // through LazyPackageFragmentScopeForJavaPackage@193
    classes('hasNext': Name@182) = null // through LazyPackageFragmentScopeForJavaPackage@193
    classes('iterator': Name@183) = null // through LazyPackageFragmentScopeForJavaPackage@193
    classes('minus': Name@184) = null // through LazyPackageFragmentScopeForJavaPackage@193
    classes('next': Name@185) = null // through LazyPackageFragmentScopeForJavaPackage@193
    classes('plus': Name@186) = null // through LazyPackageFragmentScopeForJavaPackage@193
    classes('res': Name@187) = null // through LazyPackageFragmentScopeForJavaPackage@193
    classes('sum': Name@188) = null // through LazyPackageFragmentScopeForJavaPackage@193
    classes('test': Name@189) = null // through LazyPackageFragmentScopeForJavaPackage@193
    deserializedPackageScope = Empty@174 // through LazyPackageFragmentScopeForJavaPackage@193
    functions('AssertionError': Name@178) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@193
    functions('assertEquals': Name@180) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@193
    functions('equals': Name@181) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@193
    functions('hasNext': Name@182) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@193
    functions('iterator': Name@183) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@193
    functions('minus': Name@184) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@193
    functions('next': Name@185) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@193
    functions('plus': Name@186) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@193
    functions('res': Name@190) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@193
    functions('sum': Name@188) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@193
    functions('test': Name@189) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@193
    memberIndex = computeMemberIndex$1@199 // through LazyPackageFragmentScopeForJavaPackage@193
}
