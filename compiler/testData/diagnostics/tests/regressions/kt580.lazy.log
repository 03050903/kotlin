DescriptorResolver@0 {
    <name not found> = JetTypeImpl@1['Array<1>']
    <name not found> = JetTypeImpl@2['Int']
}

LazyJavaClassDescriptor@3['AbstractCollection'] {
    defaultType = JetTypeImpl@4['AbstractCollection<1>']
    functions('add': Name@5) = ArrayList@6[1] { JavaMethodDescriptor@7['add'] } // through LazyJavaClassMemberScope@8
    memberIndex = computeMemberIndex$1@9 // through LazyJavaClassMemberScope@8
    properties('add': Name@10) = EmptyList@11[empty] // through LazyJavaClassMemberScope@8
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@12['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@13['AbstractCollection']
}

LazyJavaClassDescriptor@14['AbstractList'] {
    defaultType = JetTypeImpl@15['AbstractList<1>']
    functions('add': Name@16) = ArrayList@17[2] { JavaMethodDescriptor@18['add'], JavaMethodDescriptor@19['add'] } // through LazyJavaClassMemberScope@20
    memberIndex = computeMemberIndex$1@21 // through LazyJavaClassMemberScope@20
    properties('add': Name@10) = EmptyList@11[empty] // through LazyJavaClassMemberScope@20
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@22['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@23['AbstractList']
}

LazyJavaClassDescriptor@24['ArrayList'] {
    constructors = ArrayList@25[3] { JavaConstructorDescriptor@26['<init>'], JavaConstructorDescriptor@27['<init>'], JavaConstructorDescriptor@28['<init>'] } // through LazyJavaClassMemberScope@29
    defaultType = JetTypeImpl@30['ArrayList<1>']
    enumEntryIndex = LinkedHashMap@31 // through LazyJavaClassMemberScope@29
    functionTypeForSamInterface = null
    functions('add': Name@10) = ArrayList@32[2] { JavaMethodDescriptor@33['add'], JavaMethodDescriptor@34['add'] } // through LazyJavaClassMemberScope@29
    memberIndex = computeMemberIndex$1@35 // through LazyJavaClassMemberScope@29
    nestedClassIndex = LinkedHashMap@36 // through LazyJavaClassMemberScope@29
    nestedClasses('add': Name@10) = null // through LazyJavaClassMemberScope@29
    properties('add': Name@10) = EmptyList@11[empty] // through LazyJavaClassMemberScope@29
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@37['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@38['ArrayList']
}

LazyJavaClassDescriptor@39['RandomAccess'] {
    functions('add': Name@16) = EmptyList@11[empty] // through LazyJavaClassMemberScope@40
    memberIndex = computeMemberIndex$1@41 // through LazyJavaClassMemberScope@40
    properties('add': Name@10) = EmptyList@11[empty] // through LazyJavaClassMemberScope@40
    typeConstructor = LazyJavaClassTypeConstructor@42['RandomAccess']
}

LazyJavaClassDescriptor@43['Serializable'] {
    functions('add': Name@16) = EmptyList@11[empty] // through LazyJavaClassMemberScope@44
    memberIndex = computeMemberIndex$1@45 // through LazyJavaClassMemberScope@44
    properties('add': Name@10) = EmptyList@11[empty] // through LazyJavaClassMemberScope@44
    typeConstructor = LazyJavaClassTypeConstructor@46['Serializable']
}

LazyJavaClassTypeConstructor@13['AbstractCollection'] {
    parameters = ArrayList@47[1] { LazyJavaTypeParameterDescriptor@48['E'] }
    supertypes = ArrayList@49[1] { LazyJavaClassifierType@50['Collection<E>'] }
}

LazyJavaClassTypeConstructor@23['AbstractList'] {
    parameters = ArrayList@51[1] { LazyJavaTypeParameterDescriptor@52['E'] }
    supertypes = ArrayList@53[2] { LazyJavaClassifierType@54['AbstractCollection<E>'], LazyJavaClassifierType@55['List<E>'] }
}

LazyJavaClassTypeConstructor@38['ArrayList'] {
    parameters = ArrayList@56[1] { LazyJavaTypeParameterDescriptor@57['E'] }
    supertypes = ArrayList@58[5] { LazyJavaClassifierType@59['AbstractList<E>'], LazyJavaClassifierType@60['List<E>'], LazyJavaClassifierType@61['RandomAccess'], ... }
}

LazyJavaClassTypeConstructor@42['RandomAccess'] {
    parameters = ArrayList@62[empty]
    supertypes = ArrayList@63[1] { JetTypeImpl@64['Any'] }
}

LazyJavaClassTypeConstructor@46['Serializable'] {
    parameters = ArrayList@65[empty]
    supertypes = ArrayList@66[1] { JetTypeImpl@64['Any'] }
}

LazyJavaClassifierType@54['AbstractCollection<E>'] {
    arguments = ArrayList@67[1] { TypeProjectionImpl@68 }
    classifier = JavaClassImpl@69['AbstractCollection']
    memberScope = SubstitutingScope@70
    typeConstructor = LazyJavaClassTypeConstructor@13['AbstractCollection']
}

LazyJavaClassifierType@59['AbstractList<E>'] {
    arguments = ArrayList@71[1] { TypeProjectionImpl@72 }
    classifier = JavaClassImpl@73['AbstractList']
    memberScope = SubstitutingScope@74
    typeConstructor = LazyJavaClassTypeConstructor@23['AbstractList']
}

LazyJavaClassifierType@75['Cloneable'] {
    arguments = ArrayList@76[empty]
    classifier = JavaClassImpl@77['Cloneable']
    memberScope = DeserializedClassMemberScope@78
    typeConstructor = DeserializedClassTypeConstructor@79
}

LazyJavaClassifierType@80['Collection<? extends E>'] {
    arguments = ArrayList@81[1] { TypeProjectionImpl@82 }
    classifier = JavaClassImpl@83['Collection']
    memberScope = SubstitutingScope@84
    nullable = 'false': Boolean@85
    typeConstructor = DeserializedClassTypeConstructor@86
}

LazyJavaClassifierType@87['Collection<? extends E>'] {
    arguments = ArrayList@88[1] { TypeProjectionImpl@89 }
    classifier = JavaClassImpl@83['Collection']
    memberScope = SubstitutingScope@90
    nullable = 'true': Boolean@91
    typeConstructor = DeserializedClassTypeConstructor@92
}

LazyJavaClassifierType@50['Collection<E>'] {
    arguments = ArrayList@93[1] { TypeProjectionImpl@94 }
    classifier = JavaClassImpl@95['Collection']
    memberScope = SubstitutingScope@96
    typeConstructor = DeserializedClassTypeConstructor@86
}

LazyJavaClassifierType@97['E'] {
    arguments = ArrayList@98[empty]
    classifier = JavaTypeParameterImpl@99['E']
    nullable = 'false': Boolean@85
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@100
}

LazyJavaClassifierType@101['E'] {
    arguments = ArrayList@102[empty]
    classifier = JavaTypeParameterImpl@103['E']
    nullable = 'false': Boolean@85
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@104
}

LazyJavaClassifierType@105['E'] {
    arguments = ArrayList@106[empty]
    classifier = JavaTypeParameterImpl@107['E']
    nullable = 'false': Boolean@85
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@108
}

LazyJavaClassifierType@109['E'] {
    arguments = ArrayList@110[empty]
    classifier = JavaTypeParameterImpl@111['E']
    nullable = 'false': Boolean@85
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@108
}

LazyJavaClassifierType@112['E'] {
    arguments = ArrayList@113[empty]
    classifier = JavaTypeParameterImpl@114['E']
    nullable = 'false': Boolean@85
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@100
}

LazyJavaClassifierType@115['E'] {
    arguments = ArrayList@116[empty]
    classifier = JavaTypeParameterImpl@117['E']
    nullable = 'false': Boolean@85
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@108
}

LazyJavaClassifierType@118['E'] {
    arguments = ArrayList@119[empty]
    classifier = JavaTypeParameterImpl@120['E']
    nullable = 'false': Boolean@85
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@100
}

LazyJavaClassifierType@121['E'] {
    arguments = ArrayList@122[empty]
    classifier = JavaTypeParameterImpl@123['E']
    nullable = 'false': Boolean@85
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@108
}

LazyJavaClassifierType@124['E'] {
    arguments = ArrayList@125[empty]
    classifier = JavaTypeParameterImpl@126['E']
    nullable = 'false': Boolean@85
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@108
}

LazyJavaClassifierType@127['E'] {
    arguments = ArrayList@128[empty]
    classifier = JavaTypeParameterImpl@129['E']
    nullable = 'false': Boolean@85
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@104
}

LazyJavaClassifierType@130['E'] {
    arguments = ArrayList@131[empty]
    classifier = JavaTypeParameterImpl@132['E']
    nullable = 'false': Boolean@85
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@100
}

LazyJavaClassifierType@133['E'] {
    arguments = ArrayList@134[empty]
    classifier = JavaTypeParameterImpl@135['E']
    nullable = 'false': Boolean@85
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@108
}

LazyJavaClassifierType@136['E'] {
    arguments = ArrayList@137[empty]
    classifier = JavaTypeParameterImpl@103['E']
    nullable = 'true': Boolean@91
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@104
}

LazyJavaClassifierType@138['E'] {
    arguments = ArrayList@139[empty]
    classifier = JavaTypeParameterImpl@132['E']
    nullable = 'true': Boolean@91
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@100
}

LazyJavaClassifierType@140['E'] {
    arguments = ArrayList@141[empty]
    classifier = JavaTypeParameterImpl@117['E']
    nullable = 'true': Boolean@91
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@108
}

LazyJavaClassifierType@142['E'] {
    arguments = ArrayList@143[empty]
    classifier = JavaTypeParameterImpl@129['E']
    nullable = 'true': Boolean@91
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@104
}

LazyJavaClassifierType@144['E'] {
    arguments = ArrayList@145[empty]
    classifier = JavaTypeParameterImpl@107['E']
    nullable = 'true': Boolean@91
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@108
}

LazyJavaClassifierType@146['E'] {
    arguments = ArrayList@147[empty]
    classifier = JavaTypeParameterImpl@114['E']
    nullable = 'true': Boolean@91
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@100
}

LazyJavaClassifierType@148['E'] {
    arguments = ArrayList@149[empty]
    classifier = JavaTypeParameterImpl@111['E']
    nullable = 'true': Boolean@91
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@108
}

LazyJavaClassifierType@150['E'] {
    arguments = ArrayList@151[empty]
    classifier = JavaTypeParameterImpl@123['E']
    nullable = 'true': Boolean@91
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@108
}

LazyJavaClassifierType@152['E'] {
    arguments = ArrayList@153[empty]
    classifier = JavaTypeParameterImpl@135['E']
    nullable = 'true': Boolean@91
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@108
}

LazyJavaClassifierType@154['E'] {
    arguments = ArrayList@155[empty]
    classifier = JavaTypeParameterImpl@120['E']
    nullable = 'true': Boolean@91
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@100
}

LazyJavaClassifierType@156['E'] {
    arguments = ArrayList@157[empty]
    classifier = JavaTypeParameterImpl@99['E']
    nullable = 'true': Boolean@91
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@100
}

LazyJavaClassifierType@158['E'] {
    arguments = ArrayList@159[empty]
    classifier = JavaTypeParameterImpl@126['E']
    nullable = 'true': Boolean@91
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@108
}

LazyJavaClassifierType@55['List<E>'] {
    arguments = ArrayList@160[1] { TypeProjectionImpl@161 }
    classifier = JavaClassImpl@162['List']
    memberScope = SubstitutingScope@163
    typeConstructor = DeserializedClassTypeConstructor@164
}

LazyJavaClassifierType@60['List<E>'] {
    arguments = ArrayList@165[1] { TypeProjectionImpl@166 }
    classifier = JavaClassImpl@167['List']
    memberScope = SubstitutingScope@168
    typeConstructor = DeserializedClassTypeConstructor@164
}

LazyJavaClassifierType@169['Object'] {
    classifier = JavaClassImpl@170['Object']
    typeConstructor = DeserializedClassTypeConstructor@171
}

LazyJavaClassifierType@172['Object'] {
    classifier = JavaClassImpl@173['Object']
    typeConstructor = DeserializedClassTypeConstructor@171
}

LazyJavaClassifierType@174['Object'] {
    classifier = JavaClassImpl@175['Object']
    typeConstructor = DeserializedClassTypeConstructor@171
}

LazyJavaClassifierType@61['RandomAccess'] {
    arguments = ArrayList@176[empty]
    classifier = JavaClassImpl@177['RandomAccess']
    memberScope = LazyJavaClassMemberScope@40
    typeConstructor = LazyJavaClassTypeConstructor@42['RandomAccess']
}

LazyJavaClassifierType@178['Serializable'] {
    arguments = ArrayList@179[empty]
    classifier = JavaClassImpl@180['Serializable']
    memberScope = LazyJavaClassMemberScope@44
    typeConstructor = LazyJavaClassTypeConstructor@46['Serializable']
}

LazyJavaPackageFragmentProvider@181 {
    packageFragments('<root>': FqName@182) = LazyJavaPackageFragment@183['<root>']
    packageFragments('Array': FqName@184) = null
    packageFragments('Int': FqName@185) = null
    packageFragments('String': FqName@186) = null
    packageFragments('T': FqName@187) = null
    packageFragments('java': FqName@188) = LazyJavaPackageFragment@189['java']
    packageFragments('java.io': FqName@190) = LazyJavaPackageFragment@191['io']
    packageFragments('java.lang': FqName@192) = LazyJavaPackageFragment@193['lang']
    packageFragments('java.lang.Array': FqName@194) = null
    packageFragments('java.lang.Int': FqName@195) = null
    packageFragments('java.lang.String': FqName@196) = null
    packageFragments('java.lang.T': FqName@197) = null
    packageFragments('java.util': FqName@198) = LazyJavaPackageFragment@199['util']
    packageFragments('java.util.Array': FqName@200) = null
    packageFragments('java.util.Int': FqName@201) = null
    packageFragments('java.util.String': FqName@202) = null
    packageFragments('java.util.T': FqName@203) = null
    packageFragments('kotlin': FqName@204) = null
    packageFragments('kotlin.Array': FqName@205) = null
    packageFragments('kotlin.Int': FqName@206) = null
    packageFragments('kotlin.String': FqName@207) = null
    packageFragments('kotlin.T': FqName@208) = null
    packageFragments('kotlin.io': FqName@209) = null
    packageFragments('kotlin.jvm': FqName@210) = null
    packageFragments('whats': FqName@211) = null
    packageFragments('whats.the': FqName@212) = null
    packageFragments('whats.the.difference': FqName@213) = null
    packageFragments('whats.the.difference.Array': FqName@214) = null
    packageFragments('whats.the.difference.Int': FqName@215) = null
    packageFragments('whats.the.difference.String': FqName@216) = null
    packageFragments('whats.the.difference.T': FqName@217) = null
    packageFragments('whats.the.difference.lastIndex': FqName@218) = null
    topLevelClasses(JavaClassImpl@69['AbstractCollection']) = LazyJavaClassDescriptor@3['AbstractCollection']
    topLevelClasses(JavaClassImpl@73['AbstractList']) = LazyJavaClassDescriptor@14['AbstractList']
    topLevelClasses(JavaClassImpl@219['ArrayList']) = LazyJavaClassDescriptor@24['ArrayList']
    topLevelClasses(JavaClassImpl@177['RandomAccess']) = LazyJavaClassDescriptor@39['RandomAccess']
    topLevelClasses(JavaClassImpl@180['Serializable']) = LazyJavaClassDescriptor@43['Serializable']
}

LazyJavaPackageFragment@189['java'] {
    classes('lang': Name@220) = null // through LazyPackageFragmentScopeForJavaPackage@221
    classes('util': Name@222) = null // through LazyPackageFragmentScopeForJavaPackage@221
    deserializedPackageScope = Empty@223 // through LazyPackageFragmentScopeForJavaPackage@221
    functions('lang': Name@224) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@221
    functions('util': Name@225) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@221
    memberIndex = computeMemberIndex$1@226 // through LazyPackageFragmentScopeForJavaPackage@221
}

LazyJavaPackageFragment@193['lang'] {
    classes('ArrayList': Name@227) = null // through LazyPackageFragmentScopeForJavaPackage@228
    classes('add': Name@10) = null // through LazyPackageFragmentScopeForJavaPackage@228
    classes('get': Name@229) = null // through LazyPackageFragmentScopeForJavaPackage@228
    classes('hasNext': Name@230) = null // through LazyPackageFragmentScopeForJavaPackage@228
    classes('iarray': Name@231) = null // through LazyPackageFragmentScopeForJavaPackage@228
    classes('iterator': Name@232) = null // through LazyPackageFragmentScopeForJavaPackage@228
    classes('lastIndex': Name@233) = null // through LazyPackageFragmentScopeForJavaPackage@228
    classes('minus': Name@234) = null // through LazyPackageFragmentScopeForJavaPackage@228
    classes('next': Name@235) = null // through LazyPackageFragmentScopeForJavaPackage@228
    classes('rangeTo': Name@236) = null // through LazyPackageFragmentScopeForJavaPackage@228
    classes('size': Name@237) = null // through LazyPackageFragmentScopeForJavaPackage@228
    deserializedPackageScope = Empty@223 // through LazyPackageFragmentScopeForJavaPackage@228
    functions('ArrayList': Name@227) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@228
    functions('add': Name@10) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@228
    functions('get': Name@229) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@228
    functions('hasNext': Name@230) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@228
    functions('iarray': Name@231) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@228
    functions('iterator': Name@232) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@228
    functions('lastIndex': Name@233) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@228
    functions('minus': Name@234) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@228
    functions('next': Name@235) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@228
    functions('rangeTo': Name@236) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@228
    memberIndex = computeMemberIndex$1@238 // through LazyPackageFragmentScopeForJavaPackage@228
}

LazyJavaPackageFragment@199['util'] {
    classes('Array': Name@239) = null // through LazyPackageFragmentScopeForJavaPackage@240
    classes('ArrayList': Name@227) = LazyJavaClassDescriptor@24['ArrayList'] // through LazyPackageFragmentScopeForJavaPackage@240
    classes('Int': Name@241) = null // through LazyPackageFragmentScopeForJavaPackage@240
    classes('String': Name@242) = null // through LazyPackageFragmentScopeForJavaPackage@240
    classes('add': Name@10) = null // through LazyPackageFragmentScopeForJavaPackage@240
    classes('get': Name@229) = null // through LazyPackageFragmentScopeForJavaPackage@240
    classes('hasNext': Name@230) = null // through LazyPackageFragmentScopeForJavaPackage@240
    classes('iarray': Name@231) = null // through LazyPackageFragmentScopeForJavaPackage@240
    classes('iterator': Name@232) = null // through LazyPackageFragmentScopeForJavaPackage@240
    classes('lastIndex': Name@233) = null // through LazyPackageFragmentScopeForJavaPackage@240
    classes('minus': Name@234) = null // through LazyPackageFragmentScopeForJavaPackage@240
    classes('next': Name@235) = null // through LazyPackageFragmentScopeForJavaPackage@240
    classes('rangeTo': Name@236) = null // through LazyPackageFragmentScopeForJavaPackage@240
    classes('size': Name@237) = null // through LazyPackageFragmentScopeForJavaPackage@240
    deserializedPackageScope = Empty@223 // through LazyPackageFragmentScopeForJavaPackage@240
    functions('ArrayList': Name@227) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@240
    functions('add': Name@10) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@240
    functions('get': Name@229) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@240
    functions('hasNext': Name@230) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@240
    functions('iarray': Name@231) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@240
    functions('iterator': Name@232) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@240
    functions('lastIndex': Name@233) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@240
    functions('minus': Name@234) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@240
    functions('next': Name@235) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@240
    functions('rangeTo': Name@236) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@240
    memberIndex = computeMemberIndex$1@243 // through LazyPackageFragmentScopeForJavaPackage@240
}

LazyJavaTypeParameterDescriptor@57['E'] {
    defaultType = JetTypeImpl@244['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@108
    upperBounds = LinkedHashSet@245[1] { NullableType@246 }
    upperBoundsAsType = NullableType@246
}

LazyJavaTypeParameterDescriptor@52['E'] {
    defaultType = JetTypeImpl@247['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@100
    upperBounds = LinkedHashSet@248[1] { NullableType@249 }
    upperBoundsAsType = NullableType@249
}

LazyJavaTypeParameterDescriptor@48['E'] {
    defaultType = JetTypeImpl@250['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@104
    upperBounds = LinkedHashSet@251[1] { NullableType@252 }
    upperBoundsAsType = NullableType@252
}

LazyJavaTypeParameterResolver@253 {
    resolve(JavaTypeParameterImpl@254['E']) = LazyJavaTypeParameterDescriptor@48['E']
}

LazyJavaTypeParameterResolver@255 {
    resolve(JavaTypeParameterImpl@256['E']) = LazyJavaTypeParameterDescriptor@57['E']
}

LazyJavaTypeParameterResolver@257 {
    resolve(JavaTypeParameterImpl@258['E']) = LazyJavaTypeParameterDescriptor@52['E']
}

LazyJavaTypeParameterResolver@259 {
    resolve(JavaTypeParameterImpl@114['E']) = null
}

LazyJavaTypeParameterResolver@260 {
    resolve(JavaTypeParameterImpl@135['E']) = null
}

LazyJavaTypeParameterResolver@261 {
    resolve(JavaTypeParameterImpl@129['E']) = null
}

LazyJavaTypeParameterResolver@262 {
    resolve(JavaTypeParameterImpl@126['E']) = null
}

LazyJavaTypeParameterResolver@263 {
    resolve(JavaTypeParameterImpl@132['E']) = null
}
