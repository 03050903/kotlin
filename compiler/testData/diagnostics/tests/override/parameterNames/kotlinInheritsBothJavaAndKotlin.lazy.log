LazyJavaClassDescriptor@0['JavaInterface'] {
    allDescriptors = ArrayList@1[4] { DeserializedSimpleFunctionDescriptor@2['hashCode'], JavaMethodDescriptor@3['foo'], DeserializedSimpleFunctionDescriptor@4['toString'], ... } // through LazyJavaClassMemberScope@5
    constructors = stdlib_emptyListClass@6[empty] // through LazyJavaClassMemberScope@5
    defaultType = JetTypeImpl@7['JavaInterface']
    enumEntryIndex = LinkedHashMap@8 // through LazyJavaClassMemberScope@5
    functions('clone': Name@9) = EmptyList@10[empty] // through LazyJavaClassMemberScope@5
    functions('equals': Name@11) = ArrayList@12[1] { DeserializedSimpleFunctionDescriptor@13['equals'] } // through LazyJavaClassMemberScope@5
    functions('finalize': Name@14) = EmptyList@10[empty] // through LazyJavaClassMemberScope@5
    functions('foo': Name@15) = ArrayList@16[1] { JavaMethodDescriptor@3['foo'] } // through LazyJavaClassMemberScope@5
    functions('getClass': Name@17) = EmptyList@10[empty] // through LazyJavaClassMemberScope@5
    functions('hashCode': Name@18) = ArrayList@19[1] { DeserializedSimpleFunctionDescriptor@2['hashCode'] } // through LazyJavaClassMemberScope@5
    functions('notify': Name@20) = EmptyList@10[empty] // through LazyJavaClassMemberScope@5
    functions('notifyAll': Name@21) = EmptyList@10[empty] // through LazyJavaClassMemberScope@5
    functions('toString': Name@22) = ArrayList@23[1] { DeserializedSimpleFunctionDescriptor@4['toString'] } // through LazyJavaClassMemberScope@5
    functions('wait': Name@24) = EmptyList@10[empty] // through LazyJavaClassMemberScope@5
    memberIndex = computeMemberIndex$1@25 // through LazyJavaClassMemberScope@5
    nestedClassIndex = LinkedHashMap@26 // through LazyJavaClassMemberScope@5
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@27['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@28['JavaInterface']
}

LazyJavaClassTypeConstructor@28['JavaInterface'] {
    parameters = ArrayList@29[empty]
    supertypes = ArrayList@30[1] { JetTypeImpl@31['Any'] }
}

LazyJavaClassifierType@32['Object'] {
    classifier = JavaClassImpl@33['Object']
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaPackageFragmentProvider@35 {
    packageFragments('<root>': FqName@36) = LazyJavaPackageFragment@37['<root>']
    packageFragments('BothTraitsSubclass': FqName@38) = null
    packageFragments('Int': FqName@39) = null
    packageFragments('JavaInterface': FqName@40) = null
    packageFragments('KotlinTrait': FqName@41) = null
    packageFragments('java': FqName@42) = LazyJavaPackageFragment@43['java']
    packageFragments('java.lang': FqName@44) = LazyJavaPackageFragment@45['lang']
    packageFragments('java.lang.Int': FqName@46) = null
    packageFragments('java.lang.JavaInterface': FqName@47) = null
    packageFragments('java.lang.KotlinTrait': FqName@48) = null
    packageFragments('kotlin': FqName@49) = null
    packageFragments('kotlin.Int': FqName@50) = null
    packageFragments('kotlin.JavaInterface': FqName@51) = null
    packageFragments('kotlin.KotlinTrait': FqName@52) = null
    packageFragments('kotlin.io': FqName@53) = null
    packageFragments('kotlin.jvm': FqName@54) = null
    topLevelClasses(JavaClassImpl@55['JavaInterface']) = LazyJavaClassDescriptor@0['JavaInterface']
}

LazyJavaPackageFragment@37['<root>'] {
    classes('Int': Name@56) = null // through LazyPackageFragmentScopeForJavaPackage@57
    classes('JavaInterface': Name@58) = LazyJavaClassDescriptor@0['JavaInterface'] // through LazyPackageFragmentScopeForJavaPackage@57
}

LazyJavaPackageFragment@43['java'] {
    classes('lang': Name@59) = null // through LazyPackageFragmentScopeForJavaPackage@60
    deserializedPackageScope = Empty@61 // through LazyPackageFragmentScopeForJavaPackage@60
    functions('lang': Name@62) = EmptyList@10[empty] // through LazyPackageFragmentScopeForJavaPackage@60
    memberIndex = computeMemberIndex$1@63 // through LazyPackageFragmentScopeForJavaPackage@60
}
