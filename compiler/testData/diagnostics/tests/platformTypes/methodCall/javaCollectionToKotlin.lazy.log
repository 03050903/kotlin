LazyJavaClassDescriptor@0['AbstractMap'] {
    _typeConstructor = LazyJavaClassTypeConstructor@1['AbstractMap']
}

LazyJavaClassDescriptor@2['HashMap'] {
    _constructors = ArrayList@3[4] { JavaConstructorDescriptor@4['<init>'], JavaConstructorDescriptor@5['<init>'], JavaConstructorDescriptor@6['<init>'], ... } // through LazyJavaClassMemberScope@7
    _functionTypeForSamInterface = null
    _typeConstructor = LazyJavaClassTypeConstructor@8['HashMap']
    defaultType = JetTypeImpl@9['HashMap<2>']
}

LazyJavaClassDescriptor@10['Serializable'] {
    _typeConstructor = LazyJavaClassTypeConstructor@11['Serializable']
}

LazyJavaClassTypeConstructor@1['AbstractMap'] {
    _parameters = ArrayList@12[2] { LazyJavaTypeParameterDescriptor@13['K'], LazyJavaTypeParameterDescriptor@14['V'] }
    _supertypes = ArrayList@15[1] { LazyJavaClassifierType@16['Map<K, V>'] }
}

LazyJavaClassTypeConstructor@8['HashMap'] {
    _parameters = ArrayList@17[2] { LazyJavaTypeParameterDescriptor@18['K'], LazyJavaTypeParameterDescriptor@19['V'] }
    _supertypes = ArrayList@20[4] { LazyJavaClassifierType@21['AbstractMap<K, V>'], LazyJavaClassifierType@22['Map<K, V>'], LazyJavaClassifierType@23['Cloneable'], ... }
}

LazyJavaClassTypeConstructor@11['Serializable'] {
    _supertypes = ArrayList@24[1] { JetTypeImpl@25['Any'] }
}

LazyJavaClassifierType@21['AbstractMap<K, V>'] {
    _arguments = ArrayList@26[2] { TypeProjectionImpl@27, TypeProjectionImpl@28 }
    _typeConstructor = LazyJavaClassTypeConstructor@1['AbstractMap']
    classifier = JavaClassImpl@29['AbstractMap']
}

LazyJavaClassifierType@23['Cloneable'] {
    _typeConstructor = DeserializedClassTypeConstructor@30
    classifier = JavaClassImpl@31['Cloneable']
}

LazyJavaClassifierType@32['K'] {
    _arguments = ArrayList@33[empty]
    _nullable = 'false': Boolean@34
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@35
    classifier = JavaTypeParameterImpl@36['K']
}

LazyJavaClassifierType@37['K'] {
    _arguments = ArrayList@38[empty]
    _nullable = 'false': Boolean@34
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@39
    classifier = JavaTypeParameterImpl@40['K']
}

LazyJavaClassifierType@41['K'] {
    _arguments = ArrayList@42[empty]
    _nullable = 'false': Boolean@34
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@35
    classifier = JavaTypeParameterImpl@43['K']
}

LazyJavaClassifierType@44['K'] {
    _arguments = ArrayList@45[empty]
    _nullable = 'false': Boolean@34
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@35
    classifier = JavaTypeParameterImpl@46['K']
}

LazyJavaClassifierType@47['K'] {
    _arguments = ArrayList@48[empty]
    _nullable = 'true': Boolean@49
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@35
    classifier = JavaTypeParameterImpl@46['K']
}

LazyJavaClassifierType@50['K'] {
    _arguments = ArrayList@51[empty]
    _nullable = 'true': Boolean@49
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@35
    classifier = JavaTypeParameterImpl@43['K']
}

LazyJavaClassifierType@52['K'] {
    _arguments = ArrayList@53[empty]
    _nullable = 'true': Boolean@49
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@39
    classifier = JavaTypeParameterImpl@40['K']
}

LazyJavaClassifierType@54['K'] {
    _arguments = ArrayList@55[empty]
    _nullable = 'true': Boolean@49
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@35
    classifier = JavaTypeParameterImpl@36['K']
}

LazyJavaClassifierType@56['Map<? extends K, ? extends V>'] {
    _arguments = ArrayList@57[2] { TypeProjectionImpl@58, TypeProjectionImpl@59 }
    _memberScope = SubstitutingScope@60
    _nullable = 'false': Boolean@34
    _typeConstructor = DeserializedClassTypeConstructor@61
    classifier = JavaClassImpl@62['Map']
}

LazyJavaClassifierType@63['Map<? extends K, ? extends V>'] {
    _arguments = ArrayList@64[2] { TypeProjectionImpl@65, TypeProjectionImpl@66 }
    _memberScope = SubstitutingScope@67
    _nullable = 'true': Boolean@49
    _typeConstructor = DeserializedClassTypeConstructor@68
    classifier = JavaClassImpl@62['Map']
}

LazyJavaClassifierType@16['Map<K, V>'] {
    _arguments = ArrayList@69[2] { TypeProjectionImpl@70, TypeProjectionImpl@71 }
    _typeConstructor = DeserializedClassTypeConstructor@61
    classifier = JavaClassImpl@72['Map']
}

LazyJavaClassifierType@22['Map<K, V>'] {
    _typeConstructor = DeserializedClassTypeConstructor@61
    classifier = JavaClassImpl@73['Map']
}

LazyJavaClassifierType@74['Object'] {
    _typeConstructor = DeserializedClassTypeConstructor@75
    classifier = JavaClassImpl@76['Object']
}

LazyJavaClassifierType@77['Object'] {
    _typeConstructor = DeserializedClassTypeConstructor@75
    classifier = JavaClassImpl@78['Object']
}

LazyJavaClassifierType@79['Serializable'] {
    _typeConstructor = LazyJavaClassTypeConstructor@11['Serializable']
    classifier = JavaClassImpl@80['Serializable']
}

LazyJavaClassifierType@81['V'] {
    _arguments = ArrayList@82[empty]
    _nullable = 'false': Boolean@34
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@83
    classifier = JavaTypeParameterImpl@84['V']
}

LazyJavaClassifierType@85['V'] {
    _arguments = ArrayList@86[empty]
    _nullable = 'false': Boolean@34
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@83
    classifier = JavaTypeParameterImpl@87['V']
}

LazyJavaClassifierType@88['V'] {
    _arguments = ArrayList@89[empty]
    _nullable = 'false': Boolean@34
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@83
    classifier = JavaTypeParameterImpl@90['V']
}

LazyJavaClassifierType@91['V'] {
    _arguments = ArrayList@92[empty]
    _nullable = 'false': Boolean@34
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@93
    classifier = JavaTypeParameterImpl@94['V']
}

LazyJavaClassifierType@95['V'] {
    _arguments = ArrayList@96[empty]
    _nullable = 'true': Boolean@49
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@83
    classifier = JavaTypeParameterImpl@87['V']
}

LazyJavaClassifierType@97['V'] {
    _arguments = ArrayList@98[empty]
    _nullable = 'true': Boolean@49
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@93
    classifier = JavaTypeParameterImpl@94['V']
}

LazyJavaClassifierType@99['V'] {
    _arguments = ArrayList@100[empty]
    _nullable = 'true': Boolean@49
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@83
    classifier = JavaTypeParameterImpl@90['V']
}

LazyJavaClassifierType@101['V'] {
    _arguments = ArrayList@102[empty]
    _nullable = 'true': Boolean@49
    _typeConstructor = AbstractLazyTypeParameterDescriptor$1@83
    classifier = JavaTypeParameterImpl@84['V']
}

LazyJavaPackageFragmentProvider@103 {
    _packageFragments('<root>': FqName@104) = LazyJavaPackageFragment@105['<root>']
    _packageFragments('Any': FqName@106) = null
    _packageFragments('Map': FqName@107) = null
    _packageFragments('java': FqName@108) = LazyJavaPackageFragment@109['java']
    _packageFragments('java.io': FqName@110) = LazyJavaPackageFragment@111['io']
    _packageFragments('java.lang': FqName@112) = LazyJavaPackageFragment@113['lang']
    _packageFragments('java.lang.Any': FqName@114) = null
    _packageFragments('java.lang.Map': FqName@115) = null
    _packageFragments('java.util': FqName@116) = LazyJavaPackageFragment@117['util']
    _packageFragments('java.util.Any': FqName@118) = null
    _packageFragments('java.util.Map': FqName@119) = null
    _packageFragments('kotlin': FqName@120) = null
    _packageFragments('kotlin.Any': FqName@121) = null
    _packageFragments('kotlin.Map': FqName@122) = null
    _packageFragments('kotlin.io': FqName@123) = null
    _packageFragments('kotlin.jvm': FqName@124) = null
    topLevelClasses(JavaClassImpl@29['AbstractMap']) = LazyJavaClassDescriptor@0['AbstractMap']
    topLevelClasses(JavaClassImpl@125['HashMap']) = LazyJavaClassDescriptor@2['HashMap']
    topLevelClasses(JavaClassImpl@126['Map']) = LazyJavaClassDescriptor@127['Map']
    topLevelClasses(JavaClassImpl@80['Serializable']) = LazyJavaClassDescriptor@10['Serializable']
}

LazyJavaPackageFragment@105['<root>'] {
    _functions('HashMap': Name@128) = EmptyList@129[empty] // through LazyPackageFragmentScopeForJavaPackage@130
    _functions('java': Name@131) = EmptyList@129[empty] // through LazyPackageFragmentScopeForJavaPackage@130
    _functions('takeJ': Name@132) = EmptyList@129[empty] // through LazyPackageFragmentScopeForJavaPackage@130
    classes('Any': Name@133) = null // through LazyPackageFragmentScopeForJavaPackage@130
    classes('HashMap': Name@128) = null // through LazyPackageFragmentScopeForJavaPackage@130
    classes('Map': Name@134) = null // through LazyPackageFragmentScopeForJavaPackage@130
    classes('java': Name@135) = null // through LazyPackageFragmentScopeForJavaPackage@130
    classes('takeJ': Name@132) = null // through LazyPackageFragmentScopeForJavaPackage@130
    deserializedPackageScope = Empty@136 // through LazyPackageFragmentScopeForJavaPackage@130
    memberIndex = computeMemberIndex$1@137 // through LazyPackageFragmentScopeForJavaPackage@130
}

LazyJavaPackageFragment@109['java'] {
    _functions('lang': Name@138) = EmptyList@129[empty] // through LazyPackageFragmentScopeForJavaPackage@139
    _functions('util': Name@140) = EmptyList@129[empty] // through LazyPackageFragmentScopeForJavaPackage@139
    classes('lang': Name@141) = null // through LazyPackageFragmentScopeForJavaPackage@139
    classes('util': Name@142) = null // through LazyPackageFragmentScopeForJavaPackage@139
    deserializedPackageScope = Empty@136 // through LazyPackageFragmentScopeForJavaPackage@139
    memberIndex = computeMemberIndex$1@143 // through LazyPackageFragmentScopeForJavaPackage@139
}

LazyJavaPackageFragment@113['lang'] {
    _functions('HashMap': Name@128) = EmptyList@129[empty] // through LazyPackageFragmentScopeForJavaPackage@144
    _functions('takeJ': Name@132) = EmptyList@129[empty] // through LazyPackageFragmentScopeForJavaPackage@144
    classes('HashMap': Name@128) = null // through LazyPackageFragmentScopeForJavaPackage@144
    classes('takeJ': Name@132) = null // through LazyPackageFragmentScopeForJavaPackage@144
    deserializedPackageScope = Empty@136 // through LazyPackageFragmentScopeForJavaPackage@144
    memberIndex = computeMemberIndex$1@145 // through LazyPackageFragmentScopeForJavaPackage@144
}

LazyJavaPackageFragment@117['util'] {
    _functions('HashMap': Name@128) = EmptyList@129[empty] // through LazyPackageFragmentScopeForJavaPackage@146
    _functions('takeJ': Name@132) = EmptyList@129[empty] // through LazyPackageFragmentScopeForJavaPackage@146
    classes('Any': Name@133) = null // through LazyPackageFragmentScopeForJavaPackage@146
    classes('HashMap': Name@128) = LazyJavaClassDescriptor@2['HashMap'] // through LazyPackageFragmentScopeForJavaPackage@146
    classes('Map': Name@134) = LazyJavaClassDescriptor@127['Map'] // through LazyPackageFragmentScopeForJavaPackage@146
    classes('takeJ': Name@132) = null // through LazyPackageFragmentScopeForJavaPackage@146
    deserializedPackageScope = Empty@136 // through LazyPackageFragmentScopeForJavaPackage@146
    memberIndex = computeMemberIndex$1@147 // through LazyPackageFragmentScopeForJavaPackage@146
}

LazyJavaTypeParameterDescriptor@18['K'] {
    defaultType = JetTypeImpl@148['K']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@35
    upperBounds = LinkedHashSet@149[1] { NullableType@150 }
}

LazyJavaTypeParameterDescriptor@13['K'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@39
}

LazyJavaTypeParameterDescriptor@19['V'] {
    defaultType = JetTypeImpl@151['V']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@83
    upperBounds = LinkedHashSet@152[1] { NullableType@153 }
}

LazyJavaTypeParameterDescriptor@14['V'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@93
}

LazyJavaTypeParameterResolver@154 {
    resolve(JavaTypeParameterImpl@155['K']) = LazyJavaTypeParameterDescriptor@18['K']
    resolve(JavaTypeParameterImpl@156['V']) = LazyJavaTypeParameterDescriptor@19['V']
}

LazyJavaTypeParameterResolver@157 {
    resolve(JavaTypeParameterImpl@40['K']) = LazyJavaTypeParameterDescriptor@13['K']
    resolve(JavaTypeParameterImpl@94['V']) = LazyJavaTypeParameterDescriptor@14['V']
}
