LazyJavaClassDescriptor@0['AbstractCollection'] {
    defaultType = JetTypeImpl@1['AbstractCollection<1>']
    functions('add': Name@2) = ArrayList@3[1] { JavaMethodDescriptor@4['add'] } // through LazyJavaClassMemberScope@5
    memberIndex = computeMemberIndex$1@6 // through LazyJavaClassMemberScope@5
    properties('add': Name@7) = EmptyList@8[empty] // through LazyJavaClassMemberScope@5
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@9['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@10['AbstractCollection']
}

LazyJavaClassDescriptor@11['AbstractList'] {
    defaultType = JetTypeImpl@12['AbstractList<1>']
    functions('add': Name@13) = ArrayList@14[2] { JavaMethodDescriptor@15['add'], JavaMethodDescriptor@16['add'] } // through LazyJavaClassMemberScope@17
    memberIndex = computeMemberIndex$1@18 // through LazyJavaClassMemberScope@17
    properties('add': Name@7) = EmptyList@8[empty] // through LazyJavaClassMemberScope@17
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@19['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@20['AbstractList']
}

LazyJavaClassDescriptor@21['ArrayList'] {
    constructors = ArrayList@22[3] { JavaConstructorDescriptor@23['<init>'], JavaConstructorDescriptor@24['<init>'], JavaConstructorDescriptor@25['<init>'] } // through LazyJavaClassMemberScope@26
    defaultType = JetTypeImpl@27['ArrayList<1>']
    enumEntryIndex = LinkedHashMap@28 // through LazyJavaClassMemberScope@26
    functionTypeForSamInterface = null
    functions('add': Name@7) = ArrayList@29[2] { JavaMethodDescriptor@30['add'], JavaMethodDescriptor@31['add'] } // through LazyJavaClassMemberScope@26
    memberIndex = computeMemberIndex$1@32 // through LazyJavaClassMemberScope@26
    nestedClassIndex = LinkedHashMap@33 // through LazyJavaClassMemberScope@26
    nestedClasses('add': Name@7) = null // through LazyJavaClassMemberScope@26
    properties('add': Name@7) = EmptyList@8[empty] // through LazyJavaClassMemberScope@26
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@34['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@35['ArrayList']
}

LazyJavaClassDescriptor@36['RandomAccess'] {
    functions('add': Name@13) = EmptyList@8[empty] // through LazyJavaClassMemberScope@37
    memberIndex = computeMemberIndex$1@38 // through LazyJavaClassMemberScope@37
    properties('add': Name@7) = EmptyList@8[empty] // through LazyJavaClassMemberScope@37
    typeConstructor = LazyJavaClassTypeConstructor@39['RandomAccess']
}

LazyJavaClassDescriptor@40['Serializable'] {
    functions('add': Name@13) = EmptyList@8[empty] // through LazyJavaClassMemberScope@41
    memberIndex = computeMemberIndex$1@42 // through LazyJavaClassMemberScope@41
    properties('add': Name@7) = EmptyList@8[empty] // through LazyJavaClassMemberScope@41
    typeConstructor = LazyJavaClassTypeConstructor@43['Serializable']
}

LazyJavaClassTypeConstructor@10['AbstractCollection'] {
    parameters = ArrayList@44[1] { LazyJavaTypeParameterDescriptor@45['E'] }
    supertypes = ArrayList@46[1] { LazyJavaClassifierType@47['Collection<E>'] }
}

LazyJavaClassTypeConstructor@20['AbstractList'] {
    parameters = ArrayList@48[1] { LazyJavaTypeParameterDescriptor@49['E'] }
    supertypes = ArrayList@50[2] { LazyJavaClassifierType@51['AbstractCollection<E>'], LazyJavaClassifierType@52['List<E>'] }
}

LazyJavaClassTypeConstructor@35['ArrayList'] {
    parameters = ArrayList@53[1] { LazyJavaTypeParameterDescriptor@54['E'] }
    supertypes = ArrayList@55[5] { LazyJavaClassifierType@56['AbstractList<E>'], LazyJavaClassifierType@57['List<E>'], LazyJavaClassifierType@58['RandomAccess'], ... }
}

LazyJavaClassTypeConstructor@39['RandomAccess'] {
    parameters = ArrayList@59[empty]
    supertypes = ArrayList@60[1] { JetTypeImpl@61['Any'] }
}

LazyJavaClassTypeConstructor@43['Serializable'] {
    parameters = ArrayList@62[empty]
    supertypes = ArrayList@63[1] { JetTypeImpl@61['Any'] }
}

LazyJavaClassifierType@51['AbstractCollection<E>'] {
    arguments = ArrayList@64[1] { TypeProjectionImpl@65 }
    classifier = JavaClassImpl@66['AbstractCollection']
    memberScope = SubstitutingScope@67
    typeConstructor = LazyJavaClassTypeConstructor@10['AbstractCollection']
}

LazyJavaClassifierType@56['AbstractList<E>'] {
    arguments = ArrayList@68[1] { TypeProjectionImpl@69 }
    classifier = JavaClassImpl@70['AbstractList']
    memberScope = SubstitutingScope@71
    typeConstructor = LazyJavaClassTypeConstructor@20['AbstractList']
}

LazyJavaClassifierType@72['Cloneable'] {
    arguments = ArrayList@73[empty]
    classifier = JavaClassImpl@74['Cloneable']
    memberScope = DeserializedClassMemberScope@75
    typeConstructor = DeserializedClassTypeConstructor@76
}

LazyJavaClassifierType@77['Collection<? extends E>'] {
    arguments = ArrayList@78[1] { TypeProjectionImpl@79 }
    classifier = JavaClassImpl@80['Collection']
    memberScope = SubstitutingScope@81
    nullable = 'false': Boolean@82
    typeConstructor = DeserializedClassTypeConstructor@83
}

LazyJavaClassifierType@84['Collection<? extends E>'] {
    arguments = ArrayList@85[1] { TypeProjectionImpl@86 }
    classifier = JavaClassImpl@80['Collection']
    memberScope = SubstitutingScope@87
    nullable = 'true': Boolean@88
    typeConstructor = DeserializedClassTypeConstructor@89
}

LazyJavaClassifierType@47['Collection<E>'] {
    arguments = ArrayList@90[1] { TypeProjectionImpl@91 }
    classifier = JavaClassImpl@92['Collection']
    memberScope = SubstitutingScope@93
    typeConstructor = DeserializedClassTypeConstructor@83
}

LazyJavaClassifierType@94['E'] {
    arguments = ArrayList@95[empty]
    classifier = JavaTypeParameterImpl@96['E']
    nullable = 'false': Boolean@82
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@97
}

LazyJavaClassifierType@98['E'] {
    arguments = ArrayList@99[empty]
    classifier = JavaTypeParameterImpl@100['E']
    nullable = 'false': Boolean@82
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@101
}

LazyJavaClassifierType@102['E'] {
    arguments = ArrayList@103[empty]
    classifier = JavaTypeParameterImpl@104['E']
    nullable = 'false': Boolean@82
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@101
}

LazyJavaClassifierType@105['E'] {
    arguments = ArrayList@106[empty]
    classifier = JavaTypeParameterImpl@107['E']
    nullable = 'false': Boolean@82
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@108
}

LazyJavaClassifierType@109['E'] {
    arguments = ArrayList@110[empty]
    classifier = JavaTypeParameterImpl@111['E']
    nullable = 'false': Boolean@82
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@108
}

LazyJavaClassifierType@112['E'] {
    arguments = ArrayList@113[empty]
    classifier = JavaTypeParameterImpl@114['E']
    nullable = 'false': Boolean@82
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@101
}

LazyJavaClassifierType@115['E'] {
    arguments = ArrayList@116[empty]
    classifier = JavaTypeParameterImpl@117['E']
    nullable = 'false': Boolean@82
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@101
}

LazyJavaClassifierType@118['E'] {
    arguments = ArrayList@119[empty]
    classifier = JavaTypeParameterImpl@120['E']
    nullable = 'false': Boolean@82
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@108
}

LazyJavaClassifierType@121['E'] {
    arguments = ArrayList@122[empty]
    classifier = JavaTypeParameterImpl@123['E']
    nullable = 'false': Boolean@82
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@101
}

LazyJavaClassifierType@124['E'] {
    arguments = ArrayList@125[empty]
    classifier = JavaTypeParameterImpl@126['E']
    nullable = 'false': Boolean@82
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@97
}

LazyJavaClassifierType@127['E'] {
    arguments = ArrayList@128[empty]
    classifier = JavaTypeParameterImpl@129['E']
    nullable = 'false': Boolean@82
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@108
}

LazyJavaClassifierType@130['E'] {
    arguments = ArrayList@131[empty]
    classifier = JavaTypeParameterImpl@132['E']
    nullable = 'false': Boolean@82
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@101
}

LazyJavaClassifierType@133['E'] {
    arguments = ArrayList@134[empty]
    classifier = JavaTypeParameterImpl@107['E']
    nullable = 'true': Boolean@88
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@108
}

LazyJavaClassifierType@135['E'] {
    arguments = ArrayList@136[empty]
    classifier = JavaTypeParameterImpl@117['E']
    nullable = 'true': Boolean@88
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@101
}

LazyJavaClassifierType@137['E'] {
    arguments = ArrayList@138[empty]
    classifier = JavaTypeParameterImpl@96['E']
    nullable = 'true': Boolean@88
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@97
}

LazyJavaClassifierType@139['E'] {
    arguments = ArrayList@140[empty]
    classifier = JavaTypeParameterImpl@100['E']
    nullable = 'true': Boolean@88
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@101
}

LazyJavaClassifierType@141['E'] {
    arguments = ArrayList@142[empty]
    classifier = JavaTypeParameterImpl@111['E']
    nullable = 'true': Boolean@88
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@108
}

LazyJavaClassifierType@143['E'] {
    arguments = ArrayList@144[empty]
    classifier = JavaTypeParameterImpl@129['E']
    nullable = 'true': Boolean@88
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@108
}

LazyJavaClassifierType@145['E'] {
    arguments = ArrayList@146[empty]
    classifier = JavaTypeParameterImpl@114['E']
    nullable = 'true': Boolean@88
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@101
}

LazyJavaClassifierType@147['E'] {
    arguments = ArrayList@148[empty]
    classifier = JavaTypeParameterImpl@104['E']
    nullable = 'true': Boolean@88
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@101
}

LazyJavaClassifierType@149['E'] {
    arguments = ArrayList@150[empty]
    classifier = JavaTypeParameterImpl@120['E']
    nullable = 'true': Boolean@88
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@108
}

LazyJavaClassifierType@151['E'] {
    arguments = ArrayList@152[empty]
    classifier = JavaTypeParameterImpl@132['E']
    nullable = 'true': Boolean@88
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@101
}

LazyJavaClassifierType@153['E'] {
    arguments = ArrayList@154[empty]
    classifier = JavaTypeParameterImpl@123['E']
    nullable = 'true': Boolean@88
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@101
}

LazyJavaClassifierType@155['E'] {
    arguments = ArrayList@156[empty]
    classifier = JavaTypeParameterImpl@126['E']
    nullable = 'true': Boolean@88
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@97
}

LazyJavaClassifierType@52['List<E>'] {
    arguments = ArrayList@157[1] { TypeProjectionImpl@158 }
    classifier = JavaClassImpl@159['List']
    memberScope = SubstitutingScope@160
    typeConstructor = DeserializedClassTypeConstructor@161
}

LazyJavaClassifierType@57['List<E>'] {
    arguments = ArrayList@162[1] { TypeProjectionImpl@163 }
    classifier = JavaClassImpl@164['List']
    memberScope = SubstitutingScope@165
    typeConstructor = DeserializedClassTypeConstructor@161
}

LazyJavaClassifierType@166['Object'] {
    classifier = JavaClassImpl@167['Object']
    typeConstructor = DeserializedClassTypeConstructor@168
}

LazyJavaClassifierType@169['Object'] {
    classifier = JavaClassImpl@170['Object']
    typeConstructor = DeserializedClassTypeConstructor@168
}

LazyJavaClassifierType@171['Object'] {
    classifier = JavaClassImpl@172['Object']
    typeConstructor = DeserializedClassTypeConstructor@168
}

LazyJavaClassifierType@58['RandomAccess'] {
    arguments = ArrayList@173[empty]
    classifier = JavaClassImpl@174['RandomAccess']
    memberScope = LazyJavaClassMemberScope@37
    typeConstructor = LazyJavaClassTypeConstructor@39['RandomAccess']
}

LazyJavaClassifierType@175['Serializable'] {
    arguments = ArrayList@176[empty]
    classifier = JavaClassImpl@177['Serializable']
    memberScope = LazyJavaClassMemberScope@41
    typeConstructor = LazyJavaClassTypeConstructor@43['Serializable']
}

LazyJavaPackageFragmentProvider@178 {
    packageFragments('<root>': FqName@179) = LazyJavaPackageFragment@180['<root>']
    packageFragments('A': FqName@181) = null
    packageFragments('B': FqName@182) = null
    packageFragments('Int': FqName@183) = null
    packageFragments('Iterable': FqName@184) = null
    packageFragments('List': FqName@185) = null
    packageFragments('Pair': FqName@186) = null
    packageFragments('T': FqName@187) = null
    packageFragments('a': FqName@188) = null
    packageFragments('a.A': FqName@189) = null
    packageFragments('a.B': FqName@190) = null
    packageFragments('a.Int': FqName@191) = null
    packageFragments('a.Iterable': FqName@192) = null
    packageFragments('a.List': FqName@193) = null
    packageFragments('a.Pair': FqName@194) = null
    packageFragments('a.T': FqName@195) = null
    packageFragments('java': FqName@196) = LazyJavaPackageFragment@197['java']
    packageFragments('java.io': FqName@198) = LazyJavaPackageFragment@199['io']
    packageFragments('java.lang': FqName@200) = LazyJavaPackageFragment@201['lang']
    packageFragments('java.lang.A': FqName@202) = null
    packageFragments('java.lang.B': FqName@203) = null
    packageFragments('java.lang.Int': FqName@204) = null
    packageFragments('java.lang.Iterable': FqName@205) = null
    packageFragments('java.lang.List': FqName@206) = null
    packageFragments('java.lang.Pair': FqName@207) = null
    packageFragments('java.lang.T': FqName@208) = null
    packageFragments('java.util': FqName@209) = LazyJavaPackageFragment@210['util']
    packageFragments('java.util.ArrayList': FqName@211) = null
    packageFragments('kotlin': FqName@212) = null
    packageFragments('kotlin.A': FqName@213) = null
    packageFragments('kotlin.B': FqName@214) = null
    packageFragments('kotlin.Int': FqName@215) = null
    packageFragments('kotlin.Iterable': FqName@216) = null
    packageFragments('kotlin.List': FqName@217) = null
    packageFragments('kotlin.Pair': FqName@218) = null
    packageFragments('kotlin.T': FqName@219) = null
    packageFragments('kotlin.io': FqName@220) = null
    packageFragments('kotlin.jvm': FqName@221) = null
    topLevelClasses(JavaClassImpl@66['AbstractCollection']) = LazyJavaClassDescriptor@0['AbstractCollection']
    topLevelClasses(JavaClassImpl@70['AbstractList']) = LazyJavaClassDescriptor@11['AbstractList']
    topLevelClasses(JavaClassImpl@222['ArrayList']) = LazyJavaClassDescriptor@21['ArrayList']
    topLevelClasses(JavaClassImpl@174['RandomAccess']) = LazyJavaClassDescriptor@36['RandomAccess']
    topLevelClasses(JavaClassImpl@177['Serializable']) = LazyJavaClassDescriptor@40['Serializable']
}

LazyJavaPackageFragment@197['java'] {
    classes('lang': Name@223) = null // through LazyPackageFragmentScopeForJavaPackage@224
    classes('util': Name@225) = null // through LazyPackageFragmentScopeForJavaPackage@224
    deserializedPackageScope = Empty@226 // through LazyPackageFragmentScopeForJavaPackage@224
    functions('lang': Name@227) = EmptyList@8[empty] // through LazyPackageFragmentScopeForJavaPackage@224
    functions('util': Name@228) = EmptyList@8[empty] // through LazyPackageFragmentScopeForJavaPackage@224
    memberIndex = computeMemberIndex$1@229 // through LazyPackageFragmentScopeForJavaPackage@224
}

LazyJavaPackageFragment@201['lang'] {
    classes('ArrayList': Name@230) = null // through LazyPackageFragmentScopeForJavaPackage@231
    classes('Pair': Name@232) = null // through LazyPackageFragmentScopeForJavaPackage@231
    classes('add': Name@7) = null // through LazyPackageFragmentScopeForJavaPackage@231
    classes('hasNext': Name@233) = null // through LazyPackageFragmentScopeForJavaPackage@231
    classes('inc': Name@234) = null // through LazyPackageFragmentScopeForJavaPackage@231
    classes('iterator': Name@235) = null // through LazyPackageFragmentScopeForJavaPackage@231
    classes('next': Name@236) = null // through LazyPackageFragmentScopeForJavaPackage@231
    deserializedPackageScope = Empty@226 // through LazyPackageFragmentScopeForJavaPackage@231
    functions('ArrayList': Name@230) = EmptyList@8[empty] // through LazyPackageFragmentScopeForJavaPackage@231
    functions('Pair': Name@232) = EmptyList@8[empty] // through LazyPackageFragmentScopeForJavaPackage@231
    functions('add': Name@7) = EmptyList@8[empty] // through LazyPackageFragmentScopeForJavaPackage@231
    functions('hasNext': Name@233) = EmptyList@8[empty] // through LazyPackageFragmentScopeForJavaPackage@231
    functions('inc': Name@234) = EmptyList@8[empty] // through LazyPackageFragmentScopeForJavaPackage@231
    functions('iterator': Name@235) = EmptyList@8[empty] // through LazyPackageFragmentScopeForJavaPackage@231
    functions('next': Name@236) = EmptyList@8[empty] // through LazyPackageFragmentScopeForJavaPackage@231
    memberIndex = computeMemberIndex$1@237 // through LazyPackageFragmentScopeForJavaPackage@231
}

LazyJavaPackageFragment@210['util'] {
    classes('ArrayList': Name@238) = LazyJavaClassDescriptor@21['ArrayList'] // through LazyPackageFragmentScopeForJavaPackage@239
    deserializedPackageScope = Empty@226 // through LazyPackageFragmentScopeForJavaPackage@239
    functions('ArrayList': Name@240) = EmptyList@8[empty] // through LazyPackageFragmentScopeForJavaPackage@239
    memberIndex = computeMemberIndex$1@241 // through LazyPackageFragmentScopeForJavaPackage@239
}

LazyJavaTypeParameterDescriptor@54['E'] {
    defaultType = JetTypeImpl@242['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@101
    upperBounds = LinkedHashSet@243[1] { NullableType@244 }
    upperBoundsAsType = NullableType@244
}

LazyJavaTypeParameterDescriptor@49['E'] {
    defaultType = JetTypeImpl@245['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@108
    upperBounds = LinkedHashSet@246[1] { NullableType@247 }
    upperBoundsAsType = NullableType@247
}

LazyJavaTypeParameterDescriptor@45['E'] {
    defaultType = JetTypeImpl@248['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@97
    upperBounds = LinkedHashSet@249[1] { NullableType@250 }
    upperBoundsAsType = NullableType@250
}

LazyJavaTypeParameterResolver@251 {
    resolve(JavaTypeParameterImpl@252['E']) = LazyJavaTypeParameterDescriptor@54['E']
}

LazyJavaTypeParameterResolver@253 {
    resolve(JavaTypeParameterImpl@254['E']) = LazyJavaTypeParameterDescriptor@45['E']
}

LazyJavaTypeParameterResolver@255 {
    resolve(JavaTypeParameterImpl@256['E']) = LazyJavaTypeParameterDescriptor@49['E']
}

LazyJavaTypeParameterResolver@257 {
    resolve(JavaTypeParameterImpl@117['E']) = null
}

LazyJavaTypeParameterResolver@258 {
    resolve(JavaTypeParameterImpl@107['E']) = null
}

LazyJavaTypeParameterResolver@259 {
    resolve(JavaTypeParameterImpl@100['E']) = null
}

LazyJavaTypeParameterResolver@260 {
    resolve(JavaTypeParameterImpl@96['E']) = null
}

LazyJavaTypeParameterResolver@261 {
    resolve(JavaTypeParameterImpl@120['E']) = null
}
